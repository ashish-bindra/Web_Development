{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Wed Development tutorials","text":"<p>This is tutorial related to web technolgy.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"Going to make all notes here","text":""},{"location":"important/","title":"Realtime communications","text":"<ul> <li>chatapp</li> <li>Real time dashboard **</li> <li>Treading - stocks, teams, sport event</li> </ul>"},{"location":"important/#1-long-polling","title":"1. Long Polling","text":"<p>client sent request again and angin some interval of time peos:</p> <ul> <li>Rest Implementation</li> <li>Works erverywhere</li> </ul> <p>corns:</p> <ul> <li>High Latency</li> <li>Wastage</li> </ul>"},{"location":"important/#server-sent-events","title":"Server sent Events","text":"<ul> <li>lightweight</li> <li>work with proxies</li> </ul> <p>can auto reconnect</p> <p>-&gt; less control on client side</p>"},{"location":"important/#web-sockets","title":"web sockets","text":"<p>if cannel open communicate both side</p> <ul> <li>Bi-direction</li> <li>scalable with brokers(kafka, radis)</li> </ul> <p>corn:</p> <ul> <li>proxies</li> </ul>"},{"location":"important/#public-private-key-criptograpy","title":"public private key criptograpy","text":"<p>2 key genrate</p> <ol> <li> <p>public : Can share with anyone,</p> <ul> <li> <p>but data encript with public key will deript with private key only</p> </li> <li> <p>public key should be distrubuted</p> </li> </ul> </li> <li> <p>private key: Not share with any one, should be scure</p> </li> </ol>"},{"location":"important/#stateless-and-statefull","title":"stateless and statefull","text":"<p>stateless: we are not storing state anywhere in bd or file eg. jwt statefull: we store information in db</p>"},{"location":"important/#what-is-jwt","title":"What is Jwt","text":"<p>Token need to be there for login</p> <p>jwt =&gt;  Json web Token</p> <p>it an encripted token token: collection of random character</p> <p>three componet we have means three .</p> <p>there are alot of alog for encript  eg sha256 ...</p>"},{"location":"important/#jwr-structure","title":"jwr structure","text":"<ol> <li>which alogo we use</li> <li>what info we have have</li> <li>signature</li> </ol> <p>Hearder = {     alg:sh256     typr:\"jwt }</p> <p>payload = {     \"id/sub\": \"123213\",     \"name\": \"ashish\",     \"iat\": 12312321321}</p> <p>iat = isue at / experies at</p> <p>token should exipre it very import verify signature = your 256 bit secreate</p>"},{"location":"important/#authtication","title":"authtication","text":"<p>user give unique signature to serve</p> <ul> <li>to verfy the user</li> </ul>"},{"location":"important/#authoize","title":"authoize","text":"<ul> <li>to authrize user which user need to acces which information</li> </ul>"},{"location":"important/#how-do-you-securley-store-a-jwt-on-client-side","title":"How do you securley store a JWT on client side","text":"<p>store on local store , or we can store on session, cokkies.</p> <ul> <li>it should expire so need not to very</li> </ul>"},{"location":"important/#use-case-of-jwt","title":"use case of jwt","text":"<ul> <li>authtication -authorization</li> <li>information excenge</li> </ul>"},{"location":"important/#how-to-invalidate-jwt","title":"how to invalidate jwt","text":"<ul> <li>we nee dto fix the time of expire time</li> </ul>"},{"location":"important/#refress-token","title":"refress token","text":"<p>whenever client send request it should send token also some time token expire then server send 401 status code and server has refess taoken also use has 2 token access token and refres token it send the request and get new refess token</p> <p>we stor erefress toekn in db</p>"},{"location":"important/#jwt-vs-session","title":"JWT vs Session","text":"<p>3- tier macanism like client, server and db</p> <p>whenver we request db we consume a resoure and it dalay in network beacuse machine is process and we also proform read write i/o operration also</p> <p>application logic is complex but they mainly perform crud operations</p>"},{"location":"important/#session","title":"session","text":"<p>state mens we goin statefull</p> <p>to unique field in db whenver we need to access a recource we need to call db everytime to validate</p> <ul> <li>we sould avoid  i/o operation less</li> </ul> <p>https://freeapi.app</p> <p>https://devchecklists.com/celery-tasks-checklist/</p>"},{"location":"intro-interview/","title":"Intro interview","text":"<p>Tell me about yourself. tips: introduce aisa kro k woh majboor ho jaye tumhe sunne k liye. energetic. use body language. face language. do not move your head so much. stop using so much and and and. ques: apart from general introduction. how will you introduce yourself? how should I see you?</p> <p>name, place, job description, experience, project, hobbies.</p> <p>Hello, my name is Ashish Bindra and you can address me Ashish. I hail from Patiala. I am a python developer with 3 years of experience. Currently I'm working on ....... project using ...... tools. In the free time I like to do gardening.</p>"},{"location":"intro-interview/#1-tell-me-about-yourself","title":"1. Tell me about yourself","text":"<p>I am Ashish Bindra, a Python developer with around 2.10 years of experience in building AI/ML projects, REST APIs, and web applications. I have strong expertise in Python, FastAPI, and MongoDB, and I\u2019ve also worked with YOLO-based invoice translation and OCR projects. Alongside backend development, I also ensure clean, efficient, and scalable code with a focus on performance.</p>"},{"location":"intro-interview/#2-why-do-you-want-to-switch-the-company-why-do-you-want-to-join-our-company","title":"2. Why do you want to switch the company? / Why do you want to join our company?","text":"<p>I am looking for new opportunities where I can work on challenging projects, enhance my technical skills, and contribute to impactful solutions. I\u2019m particularly interested in your company because of the innovative projects, collaborative culture, and the scope for professional growth.</p>"},{"location":"intro-interview/#3-what-are-your-expectations-for-salary-is-expected-salary-negotiable","title":"3. What are your expectations for salary? / Is expected salary negotiable?","text":"<p>I am looking for a fair package that matches my skills, experience, and industry standards. However, I am flexible and open to negotiation if there is good learning and growth opportunity.</p>"},{"location":"intro-interview/#4-what-kind-of-frameworks-and-tools-have-you-used-so-far","title":"4. What kind of frameworks and tools have you used so far?","text":"<p>I have mainly worked with FastAPI, Flask, and a bit of Django for web and API development. For databases, I\u2019ve used MongoDB (NoSQL) and MySQL/PostgreSQL (SQL). I have also used YOLO for object detection, OpenCV, Pandas, and NumPy for data handling, and PyTest for testing.</p>"},{"location":"intro-interview/#5-how-many-projects-have-you-done-explain-current-project","title":"5. How many projects have you done? Explain current project.","text":"<p>I have worked on multiple projects, around 4\u20135 in total. Currently, I am working on an Invoice Translation System. The project detects fields like invoice number, description, and dates using YOLO models and OCR, then translates them into formats compatible with Indian accounting systems. It uses FastAPI for REST APIs and MongoDB for storing document data.</p>"},{"location":"intro-interview/#6-have-you-worked-on-sql-and-no-sql-databases-explain","title":"6. Have you worked on SQL and No-SQL databases? Explain.","text":"<p>Yes, I have worked on both.</p> <ul> <li>SQL (MySQL/PostgreSQL): I used it where data is structured and relationships between tables are important, like user management and transactional records.</li> <li>NoSQL (MongoDB): I used it where data is document-based, flexible, and schema-less, especially for invoices and OCR results.</li> </ul>"},{"location":"intro-interview/#7-what-do-you-mean-by-security-scalability-and-robustness","title":"7. What do you mean by security, scalability, and robustness?","text":"<ul> <li>Security: Protecting the application and data from unauthorized access, vulnerabilities, and attacks. For example, JWT authentication, data encryption, and validation.</li> <li>Scalability: The ability of an application to handle an increasing load (users, data, or traffic) without performance issues.</li> <li>Robustness: The ability of the system to perform reliably under different conditions, including handling errors gracefully and avoiding crashes.</li> </ul> <p>Q.Can you explain the role of FastAPI in your projects, particularly in the chatbot application you developed? FastAPI plays a crucial role in my projects, especially in the chatbot application I developed. FastAPI is a modern web framework for building APIs with Python 3.7+, based on standard Python type hints. It is particularly known for its speed, ease of use, and automatic generation of OpenAPI documentation. In my chatbot project, I utilized FastAPI to create a robust backend API that served as the backbone for my application. It allowed me to handle requests efficiently and offered asynchronous capabilities, which improved the performance of my application significantly. I structured the API endpoints to facilitate various functionalities, such as fetching and updating NLU data, training models, and managing the chatbot's state. The use of FastAPI\u2019s dependency injection system helped me to manage resources effectively, leading to clean and maintainable code. Furthermore, its automatic JSON serialization and validation features saved me a lot of time and effort, ensuring that data transmitted between the client and server was both structured and valid. In the context of the chatbot, I utilized FastAPI to combine various machine learning and NLP resources, such as Rasa, enabling the bot to understand user intents effectively. I implemented the training workflow through API calls, allowing admin users to train models directly from the dashboard with minimal friction. Additionally, deploying the chatbot project with Docker-compose further enhanced its reliability and portability, ensuring that all dependencies were encapsulated within a consistent environment. Overall, FastAPI allowed me to develop an efficient, high-performance, and scalable application that met the project requirements effectively.</p>"},{"location":"intro-interview/#what-is-load-balancer-how-load-balancing-works","title":"What is Load Balancer &amp; How Load Balancing works?","text":"<p>A load balancer is a networking device or software application that distributes and balances the incoming traffic among the servers to provide high availability, efficient utilization of servers and high performance</p> <p></p> <ul> <li>Works as a \"traffic cop\" routing client requests across all servers</li> <li> <p>Ensures that no single server bears too many requests, which helps improve the performance, reliability and availability of applications.</p> </li> <li> <p>Highly used in cloud computing domains, data centers and large-scale web applications where traffic flow needs to be managed.</p> </li> </ul>"},{"location":"intro-interview/#issues-without-load-balancer","title":"Issues without Load Balancer?","text":"<ul> <li>Single Point of Failure: If the server goes down or something happens to the server the whole application will be interrupted and it will become unavailable for the users for a certain period. It will create a bad experience for users which is unacceptable for service providers.</li> <li>Overloaded Servers: There will be a limitation on the number of requests that a web server can handle. If the business grows and the number of requests increases the server will be overloaded.</li> <li>Limited Scalability: Without a load balancer, adding more servers to share the traffic is complicated. All requests are stuck with one server and adding new servers won\u2019t automatically solve the load issue.</li> </ul> <p>Note: These are the problems that are resolved with Load Balancer.</p> <p></p> <p>Key characteristics of Load Balancers</p> <ul> <li>Traffic Distribution: To keep any one server from becoming overburdened, load balancers divide incoming requests evenly among several servers. High Availability: Applications' reliability and availability are improved by load balancers, which divide traffic among several servers. The load balancer reroutes traffic to servers that are in good condition in the event that one fails.</li> <li>Scalability: By making it simple to add servers or resources to meet growing traffic demands, load balancers enable horizontal scaling.</li> <li>Optimization: Load balancers optimize resource utilization, ensuring efficient use of server capacity and preventing bottlenecks. Health Monitoring: Load balancers often monitor the health of servers, directing traffic away from servers experiencing issues or downtime. SSL Termination: Some load balancers can handle SSL/TLS encryption and decryption, offloading this resource-intensive task from servers.</li> </ul>"},{"location":"intro-interview/#how-load-balancer-works","title":"How Load Balancer Works?","text":"<ul> <li>Receives Incoming Requests: When users try to access a website or application, their requests first go to the load balancer instead of directly to a server.</li> <li>Checks Server Health: The load balancer continuously monitors the status of all servers. It checks which servers are healthy and ready to handle requests.</li> <li>Distributes Traffic: Based on factors like server load, response time or proximity, the load balancer forwards each request to the most appropriate server. This helps avoid any server getting overloaded.</li> <li>Handles Server Failures: If a server goes down or becomes unresponsive, the load balancer automatically stops sending traffic to that server and redirects it to others that are still functioning properly.</li> <li>Optimizes Performance: By spreading traffic efficiently and using healthy servers, load balancers improve overall performance and reduce delays.</li> </ul>"},{"location":"intro-interview/#benefits-of-load-balancer","title":"Benefits of Load Balancer","text":"<ul> <li>Better Performance - Distributes traffic across servers so no single server gets overloaded, reducing downtime and improving speed.</li> <li>Scalability - Works with auto-scaling to add more servers during high traffic a-d remove them when traffic is low.</li> <li>Failure Handling - Detects unhealthy servers and redirects traffic to healthy ones, keeping the system available.</li> <li>Prevents Bottlenecks - Handles sudden spikes in traffic smoothly by spreading requests evenly.</li> <li>Efficient Resource Use - Ensures all servers share the workload fairly.</li> <li>Session Persistence - Can maintain user sessions so apps that need continuous sessions (like shopping carts) work properly</li> </ul>"},{"location":"intro-interview/#challenges-of-load-balancer","title":"Challenges of Load Balancer","text":"<ul> <li>Single Point of Failure - If the load balancer itself goes down, it can disrupt traffic flow unless a backup exists.</li> <li>Cost and Complexity - Good load balancing solutions can be expensive and require proper setup and management.</li> <li>Configuration Issues - Setting up correctly can be tricky, especially for complex applications.</li> <li>Extra Overhead - Adds a small delay since every request passes through the load balancer.</li> <li>SSL Management - Handling encryption (SSL termination) at the balancer can make end-to-end security more complicated.</li> </ul> <p>https://www.geeksforgeeks.org/system-design/what-is-scalability/</p>"},{"location":"intro-interview/#what-is-vector-search","title":"What is vector search?","text":"<p>Vector search is a search technique used to find similar items or data points, typically represented as vectors, in large collections * Vectors, or embeddings, are numerical representations of words, entities, documents, images or videos. * Vectors capture the semantic relationships between elements, enabling effective processing by machine learning models and artificial intelligence applications.</p>"},{"location":"intro-interview/#vector-search-vs-traditional-search","title":"Vector search vs. traditional search","text":"<ol> <li>In contrast to traditional search, which typically uses keyword search, vector search relies on vector similarity search techniques like k-nearest neighbor search (knn) to retrieve data points similar to a query vector based on some distance metric. Vectors capture semantic relationships and similarities between data points, enabling semantic search instead of simple keyword search.</li> <li>To illustrate the difference between traditional keyword and vector search, let\u2019s go through an example. Say you are looking for information on the best pizza restaurant and you search for \u201cbest pizza restaurant\u201d in a traditional keyword search engine. The keyword search looks for pages that contain the exact words \u201cbest\u201d, \u201cpizza\u201d and \u201crestaurant\u201d and only returns results like \u201cBest Pizza Restaurant\u201d or \u201cPizza restaurant near me\u201d. Traditional keyword search focuses on matching the keywords rather than understanding the context or intent behind the search.</li> </ol> <p>By contrast, in a semantic vector search, the search engine understands the intent behind the query. Semantic, by definition, means relating to meaning in language, that is, semantic search understands the meaning and context of a query. In this case, it would look for content that talks about top-rated or highly recommended pizza places, even if the exact words \"best pizza restaurant\" are not used in the content. The results are more contextually relevant and might include articles or guides that discuss high quality pizza places in various locations.</p> <ol> <li>Traditional search methods typically represent data using discrete tokens or features, such as keywords, tags or metadata. As shown in our example above, these methods rely on exact matches to retrieve relevant results. By contrast, vector search represents data as dense vectors (a vector in which most or all of the elements are non-zero) in a continuous vector space, the mathematical space in which data is represented as vectors. Each dimension of the dense vector corresponds to a latent feature or aspect of the data, an underlying characteristic or attribute that is not directly observed but is inferred from the data through mathematical models or algorithms. These latent features capture the hidden patterns and relationships in the data, enabling more meaningful and accurate representations of items as vectors in a high-dimensional space.</li> </ol> <p></p> <p>Traditional search methods may struggle with scalability for large datasets or high-dimensional data due to computational and memory constraints. By contrast, vector embeddings are easier to scale to larger datasets and more complex models. Unlike sparse representations of data where most of the values are zeros across dimensions, embeddings are dense vector representations having non-zero values in most dimensions. This allows vector embeddings to store more information in a smaller, lower-dimensional space, requiring less memory.1 As a result, machine learning algorithms and models can use embeddings more efficiently with fewer compute resources.</p>"},{"location":"pydantic/","title":"Pydatic","text":"<ol> <li> <p>Pydantic model that represents the ideal schema of the data</p> <ul> <li>this includes the expected fields, their types and any calidation constraints (gr=0)</li> </ul> </li> <li> <p>Instantiate the model with raw input data(usually a dicttionary or JSON like strucure)</p> <ul> <li>Pydantic will automatically validate the data and coerce it into the correct Python types</li> <li>If the data doesnot meet the model requirments, Pydatic raises a ValidationError</li> </ul> </li> <li> <p>Pass the validatied model object to functions or use it through your codebase.</p> <ul> <li>This ensures that every part of your program works with clean, type-safe, and logically valid data.</li> </ul> </li> </ol> <p>Pydantic is mostly widly used data validation libray for python</p>"},{"location":"pydantic/#why-to-use-pydatic","title":"Why to use pydatic","text":"<p>Type hits powering schema validation</p> <ul> <li>The schema pydataic validation against is generally defined by python type hints</li> </ul> <p><code>pydantic-setting</code> : for envirmoment valiable <code>python-env</code>: To load the enviroment valiable pip install pydantic pydantic-setting</p> <p>first model example</p> <pre><code>from pydantic import BaseModel\n\nclass User(BaseModel):\n    id: int\n    name: str\n    is_active: bool\n\ninput_data = {\"id\": 101, \"name\": \"chai\", \"is_active\": True}\n\nuser = User(**input_data)\n\nprint(user)\n</code></pre>"},{"location":"pydantic/#assignment-1-todo-create-product-model-with-id-nameprice-in_stock","title":"Assignment 1 : TODO: Create Product model with id, name,price, in_stock","text":"<pre><code>from pydantic import BaseModel\n\nclass ProductModel(BaseModel):\n    id: int\n    name: str\n    price: float\n    in_stock: bool = False\n</code></pre>"},{"location":"pydantic/#type-hints","title":"Type Hints","text":"<pre><code>from pydantic import BaseModel\nfrom types import List, Dict, Optional\n\nclass Cart(BaseModel):\n    user_id: int\n    item: List[str]\n    quantities: Dict[str, int]\n\nclass BlogPost(BaseModel):\n    title: str\n    content: str\n    image_url: Optional[str] = None\n</code></pre>"},{"location":"pydantic/#assignment-2-todo-create-employee-model","title":"Assignment 2: TODO: Create Employee model","text":"<pre><code>fields:\n\n- id: int\n- name: str(min 3 chars)\n- department: Optional str (default 'Hernal')\n- salary: float (must be &gt;= 10000)\n</code></pre> <pre><code>from pydantic import BaseModel, Field\nfrom types import List, Dict, Optional\n\n\nclass Employee(BaseModel):\n    id: int\n    name: str = Field(\n        ...,\n        min_length=3,\n        max_length=50,\n        description=\"Employee Name\",\n        examples=\"Ashish Bindra\",\n    )\n    department: Optional[str] = \"General\"\n    salary: float = Field(..., ge=10000)\n</code></pre>"},{"location":"pydantic/#customise-validator","title":"customise validator","text":"<p>field validators</p> <ul> <li>it run first (before)</li> </ul> <pre><code>class User(BaseModel):\n    username: str\n\n    @field_validator('username')\n    def username_length(cls,v):\n        if len(v) &lt; 4 :\n            raise ValueError(\"Username must be atleast 4 charaters\")\n        return v\n</code></pre> <p>Model Validator</p> <pre><code>class SignupData(BaseModel):\n    passwprd: str\n    confirm_password: str\n\n    @model_validator(mode=\"after\")\n    def password_match(cls, values):\n        if values.password != values.confirm_password:\n            raise ValueError('Password do not match')\n        return values\n</code></pre> <p>computed field</p> <pre><code>class Product(BaseModel):\n    price: float\n    quantity: int\n\n    @computed_field\n    @property\n    def total_price(self)-&gt; float:\n        return self.price * self.quantity\n</code></pre>"},{"location":"pydantic/#asignment-3-todo-create-booking-model","title":"Asignment 3: TODO: Create Booking model","text":"<pre><code>Fields:\n- user_id: int\n- room_id: int\n- night: int (must be &gt;= 1)\n- rate_per_night: float\n- also, add computed field: total_amount = night * rate_per_night\n</code></pre> <pre><code>from pydantic import BaseModel, Field, computed_field\nfrom types import List, Dict, Optional\n\nclass Booking(BaseModel):\n    user_id: int\n    room_id: int\n    nights: int = Field(..., ge=1)\n    rate_per_night: float\n\n    @computed_field\n    @property\n    def total_amount(self)-&gt; float:\n        return self.nights * self.rate_per_night\n</code></pre>"},{"location":"pydantic/#neasted-model","title":"Neasted model","text":"<pre><code>class Address(BaseModel):\n    street: str\n    city: str\n    postal_code: str\n\nclass User(BaseModel):\n    id: int\n    name: str\n    address: Address\n\n#  self refrenceing / self replication\nclass Comment(BaseModel):\n    id: int\n    content: str\n    replies: Optional[List['Comment']] = None # forword refer rences\n\n    Comment.model_rebuild()\naddress = Address(\n    street = \"123 something\",\n    city = \"jaipur\",\n    postal_code = \"10001\"\n)\n\nuser - User(\n    id =  1,\n    name = \"ashish\",\n    address = address\n)\n\ncomment = Comment(\n    id = 1,\n    content = \"First content\",\n    replies = [\n        Comment(id=2, contet = \"reply2\")\n        Comment(id=3, contet = \"reply2\")\n    ]\n)\n</code></pre>"},{"location":"pydantic/#assignment-todo-create-cource-model","title":"Assignment TODO: Create Cource model","text":"<pre><code>- Each Cource has modules\n- Each module has lessons\n</code></pre> <pre><code>class Lesson(BaseModel):\n    lesson_id: int\n    topic: str\n\nclass Model(BaseModel):\n    module_id: int\n    name: str\n    lessons: List[Lesson]\n\nclass Cource(BaseModel):\n    cource_id: int\n    title: str\n    modules: List[Module]\n</code></pre>"},{"location":"pydantic/#serialization","title":"serialization","text":"<p>up and down</p> <pre><code>class Address(BaseModel):\n    street: str\n    city: str\n    zip_code: str\n\nclass User(Base):\n    id: int\n    name: str\n    email: str\n    is_active: bool = True\n    createAt: datetime\n    address: Address\n    tage: List[Str] = []\n\n# create a user instance\n\nuser = User(\n    id=1\n    name=\"ashish\"\n    email= \"asish@gmail.com\"\n    created_at = datetime(2026,3,12,12,30)\n    address= Address(\n        street = \"something\",\n        city = \"patiala\"\n        zip_code = \"12222\n),\nis_active =True,\n    tags = [\"premium\", \"subscriber\"]\n)\n\n# Using model_dump() -&gt; dict\n\npython_dict = user.model_dump()\n\n# using model_dump_json()\njson_str = user.model_dump_json()\n</code></pre> <p>but the date and time is not geting correct in json encode</p> <p>add the COnfigDict it will tel json encode how to encode</p> <pre><code>model_config = ConfigDict(\n    json_encoders = {\n        datetime: lambda v: v.strftime('%d-%m-%Y %H:%M:%S')\n    }\n)\n</code></pre> <p>Dependency enjection tips</p> <pre><code>class UserSignup(baseModel):\n    username: str\n    email: EmailStr\n    password: str\n\nclass Settings(BaseModel):\n    app_name: str = \"Chai App\"\n    admin_email: str = \"admin@xhai.com\"\n\ndef get_settings():\n    return Settings()\n\n@app.post('/signup'):\ndef signup(user: UserSignup):\n    return {'message': f'User {user.username} signed up successfully'}\n\n@app.get('/settings')\ndef get_usetting_end(setting: Setting = Depends(get_settings))\n</code></pre> <p>Only include name</p> <pre><code>patient.model_dump(include=['name', 'gender'])\npatient.model_dump(exclude=['name', 'gender'])\npatient.model_dump(exclude={'address':['state']})\n</code></pre>"},{"location":"pydantic/#exclude-unset","title":"exclude unset","text":"<p>patient.model_dump(exclude_unset=True)</p> <p>defalut value wioo not consider when we not provide during object creation</p>"},{"location":"revision/","title":"interview","text":""},{"location":"revision/#user-authentication-and-authorization","title":"User Authentication and Authorization","text":"<ol> <li>Authentication: The process of validating user is called authentication.</li> <li>Authorization: The process of validating access permissions of user is called authorization</li> </ol>"},{"location":"revision/#signals","title":"signals","text":"<p>In Python, signals are a way to allow one part of a program to communicate with another part, often asynchronously. It is a mechanism for handling events or notifications, such as when something happens in the program (e.g., a user presses a button, a file is modified, or an error occurs), and a signal is emitted to notify interested parties that the event has happened.</p>"},{"location":"revision/#where-signals-are-used","title":"Where Signals Are Used","text":"<ol> <li> <p>Event-driven programming: Signals are widely used in GUI libraries or frameworks (like PyQt, PySide, or Django) to handle events like button clicks, key presses, or timer intervals. The signal is emitted when the event happens, and the connected handler or listener reacts to it.</p> </li> <li> <p>Asynchronous programming: Signals can be used in asynchronous environments to notify other components or listeners of events without having to block the main program flow. This is common in frameworks like Django or Qt.</p> </li> <li> <p>Inter-process communication (IPC): In some systems, signals are used for inter-process communication, allowing processes to send notifications to each other.</p> </li> </ol>"},{"location":"revision/#key-concepts","title":"Key Concepts","text":"<ul> <li>Signal: A notification that something has happened.</li> <li>Slot: A function or method that is executed in response to a signal. It's the \"listener\" or \"handler.\"</li> <li>Connection: Linking a signal to a slot so that when the signal is emitted, the slot is executed.</li> </ul>"},{"location":"revision/#example-of-signal-usage-in-pyqt","title":"Example of Signal Usage in PyQt","text":"<p>In GUI frameworks like PyQt, a signal is emitted when an event like a button press occurs, and a slot (function) is connected to handle that event.</p> <pre><code>from PyQt5.QtCore import pyqtSignal, QObject\n\nclass MyObject(QObject):\n    my_signal = pyqtSignal()  # Define a custom signal\n\n    def __init__(self):\n        super().__init__()\n\n    def trigger_signal(self):\n        self.my_signal.emit()  # Emit the signal\n\n# Slot function that will handle the signal\ndef on_signal_triggered():\n    print(\"Signal triggered!\")\n\n# Create object and connect the signal to the slot\nobj = MyObject()\nobj.my_signal.connect(on_signal_triggered)  # Connecting the signal to the slot\n\n# Trigger the signal\nobj.trigger_signal()  # This will call on_signal_triggered\n</code></pre>"},{"location":"revision/#signal-usage-in-django","title":"Signal Usage in Django","text":"<p>In Django, signals are used to allow decoupled applications to get notified when certain events occur (such as saving a model instance or logging in a user).</p> <pre><code>from django.db.models.signals import post_save\nfrom django.dispatch import receiver\nfrom .models import MyModel\n\n@receiver(post_save, sender=MyModel)\ndef my_handler(sender, instance, created, **kwargs):\n    if created:\n        print(\"New instance of MyModel created!\")\n</code></pre> <p>In this Django example:</p> <ul> <li>The signal <code>post_save</code> is triggered after an instance of <code>MyModel</code> is saved.</li> <li>The receiver (handler) <code>my_handler</code> is executed when the signal is received.</li> </ul>"},{"location":"revision/#use-cases","title":"Use Cases","text":"<ol> <li>GUI Applications: Respond to user actions like clicking a button or selecting an item.</li> <li>Django: Handle events like saving models, user login, or session creation.</li> <li>Asynchronous Tasks: Trigger tasks when certain events happen in the background, like in Celery tasks.</li> </ol>"},{"location":"revision/#conclusion","title":"Conclusion","text":"<p>Signals in Python are a way of handling events and notifying components of changes in a decoupled manner, often used in GUI frameworks, web frameworks like Django, and asynchronous applications. They help create responsive, event-driven, and modular code.</p> <p>Certainly! Below is a detailed blog post that can help explain how and why signals are useful for managing login activities in web frameworks like Flask and FastAPI.</p>"},{"location":"revision/#using-signals-for-login-activities-in-flask-and-fastapi","title":"Using Signals for Login Activities in Flask and FastAPI","text":"<p>In modern web development, it's essential to keep your application modular, maintainable, and asynchronous where necessary. One technique that can help achieve this is using signals. In this blog, we'll explore how signals can be used to decouple various tasks triggered by a login event in a web application, specifically in frameworks like Flask and FastAPI.</p>"},{"location":"revision/#what-are-signals","title":"What Are Signals?","text":"<p>A signal is a mechanism that allows parts of your application to communicate with each other by triggering certain actions when specific events occur. Think of it as an event notification system where certain actions (signals) can trigger reactions (handlers or slots) in your application without tightly coupling your code.</p>"},{"location":"revision/#why-use-signals-for-login-activities","title":"Why Use Signals for Login Activities?","text":"<p>When a user logs in to your application, several tasks often need to be performed beyond the authentication itself. These tasks can include:</p> <ul> <li>Logging user activity.</li> <li>Sending notifications or welcome emails.</li> <li>Updating user-related information (e.g., last login timestamp).</li> <li>Notifying other systems or services about the login event.</li> </ul> <p>Rather than embedding all of this logic directly within your login function, signals allow you to decouple these tasks, improving modularity, maintainability, and asynchronous processing.</p>"},{"location":"revision/#advantages-of-using-signals-in-login-activities","title":"Advantages of Using Signals in Login Activities","text":"<ol> <li> <p>Separation of Concerns:    Signals allow you to decouple the core authentication process from related tasks, making your code cleaner and more maintainable.</p> </li> <li> <p>Asynchronous Task Execution:    Using signals, you can trigger tasks like sending emails, logging data, or updating analytics in the background, ensuring that they don\u2019t block or delay the user\u2019s login experience.</p> </li> <li> <p>Extensibility:    Over time, you may need to extend the actions triggered by a login event (e.g., integrating new services, adding logging, etc.). Signals allow you to do this without modifying the core login function.</p> </li> <li> <p>Consistency:    By using signals, you ensure that all related tasks are consistently executed whenever a user logs in, without duplicating logic across multiple places in your code.</p> </li> </ol>"},{"location":"revision/#using-signals-in-flask-for-login-activities","title":"Using Signals in Flask for Login Activities","text":"<p>Flask is a popular web framework that integrates well with blinker, a lightweight library that provides a signal mechanism. Let\u2019s see how to use signals for login-related activities in a Flask application.</p>"},{"location":"revision/#step-by-step-implementation-in-flask","title":"Step-by-Step Implementation in Flask","text":""},{"location":"revision/#1-install-dependencies","title":"1. Install Dependencies","text":"<p>To use signals in Flask, you first need to install blinker if you don\u2019t already have it. You can install it via pip:</p> <pre><code>pip install blinker\n</code></pre>"},{"location":"revision/#2-define-a-custom-signal","title":"2. Define a Custom Signal","text":"<p>You can define a custom signal for login activities. This signal will be emitted whenever a user successfully logs in.</p> <pre><code>from flask import Flask\nfrom blinker import signal\n\napp = Flask(__name__)\n\n# Define a custom signal for user login\nuser_logged_in = signal('user_logged_in')\n\n# Signal handler functions\ndef log_login_activity(sender, **extra):\n    print(f\"User {sender} logged in.\")\n    # Code to log activity to a database or a log file\n\ndef send_welcome_email(sender, **extra):\n    print(f\"Sending welcome email to {sender}.\")\n    # Code to send an email to the user\n</code></pre>"},{"location":"revision/#3-connect-signal-handlers","title":"3. Connect Signal Handlers","text":"<p>You then connect your signal to the handlers you want to run when the signal is emitted (e.g., logging the login, sending a welcome email, etc.).</p> <pre><code># Connect the signal to the handlers\nuser_logged_in.connect(log_login_activity)\nuser_logged_in.connect(send_welcome_email)\n</code></pre>"},{"location":"revision/#4-emit-the-signal-on-login","title":"4. Emit the Signal on Login","text":"<p>In your login route, after the authentication process is complete, you can emit the signal to trigger all connected handlers.</p> <pre><code>@app.route('/login')\ndef login():\n    user = 'example_user'  # Example login user\n    user_logged_in.send(user)  # Emit the signal when the user logs in\n    return f\"User {user} logged in!\"\n</code></pre>"},{"location":"revision/#5-running-the-flask-app","title":"5. Running the Flask App","text":"<p>Now, when a user visits the <code>/login</code> route, the signal is triggered, and the handlers (log activity and send email) are executed asynchronously.</p> <pre><code>if __name__ == '__main__':\n    app.run()\n</code></pre>"},{"location":"revision/#using-signals-in-fastapi-for-login-activities","title":"Using Signals in FastAPI for Login Activities","text":"<p>FastAPI doesn\u2019t include a native signal system, but we can easily integrate blinker (the same library used in Flask) for custom signals.</p>"},{"location":"revision/#step-by-step-implementation-in-fastapi","title":"Step-by-Step Implementation in FastAPI","text":""},{"location":"revision/#1-install-dependencies_1","title":"1. Install Dependencies","text":"<p>Make sure blinker is installed in your FastAPI project:</p> <pre><code>pip install blinker\n</code></pre>"},{"location":"revision/#2-define-a-custom-signal_1","title":"2. Define a Custom Signal","text":"<p>Just like in Flask, you define a custom signal for the login event.</p> <pre><code>from fastapi import FastAPI\nfrom blinker import signal\n\napp = FastAPI()\n\n# Define a custom signal for user login\nuser_logged_in = signal('user_logged_in')\n\n# Signal handler functions\ndef log_login_activity(sender, **extra):\n    print(f\"User {sender} logged in.\")\n    # Code to log activity to a database or a log file\n\ndef send_welcome_email(sender, **extra):\n    print(f\"Sending welcome email to {sender}.\")\n    # Code to send an email to the user\n</code></pre>"},{"location":"revision/#3-connect-signal-handlers_1","title":"3. Connect Signal Handlers","text":"<p>You then connect your signal to the handlers, just like in Flask.</p> <pre><code># Connect the signal to the handlers\nuser_logged_in.connect(log_login_activity)\nuser_logged_in.connect(send_welcome_email)\n</code></pre>"},{"location":"revision/#4-emit-the-signal-on-login_1","title":"4. Emit the Signal on Login","text":"<p>You can emit the signal after the login process in your FastAPI endpoint.</p> <pre><code>@app.get(\"/login\")\nasync def login():\n    user = 'example_user'  # Example login user\n    user_logged_in.send(user)  # Emit the signal when the user logs in\n    return {\"message\": f\"User {user} logged in!\"}\n</code></pre>"},{"location":"revision/#5-run-the-fastapi-app","title":"5. Run the FastAPI App","text":"<p>When a user visits the <code>/login</code> endpoint, the login signal will be triggered, and the handlers will execute their actions.</p> <pre><code>uvicorn app:app --reload\n</code></pre>"},{"location":"revision/#why-use-signals-for-login","title":"Why Use Signals for Login?","text":"<p>Now that we've seen how to implement signals for login activities in both Flask and FastAPI, you might be wondering: Why use signals for something like login events?</p> <p>Here are a few key reasons:</p>"},{"location":"revision/#1-separation-of-concerns","title":"1. Separation of Concerns","text":"<p>Instead of having your login code directly handle notifications, logging, or sending emails, signals let you keep these tasks separate, making the codebase easier to maintain.</p>"},{"location":"revision/#2-asynchronous-processing","title":"2. Asynchronous Processing","text":"<p>Using signals, you can easily delegate tasks like sending welcome emails or logging user activity to background processes, so they don\u2019t block the main login flow.</p>"},{"location":"revision/#3-extensibility","title":"3. Extensibility","text":"<p>If you want to add new actions after login in the future (e.g., syncing with a CRM or updating analytics), you can simply add new signal handlers without touching your login code.</p>"},{"location":"revision/#4-better-maintainability","title":"4. Better Maintainability","text":"<p>By using signals, your app is more modular. You can change or add new signal handlers without modifying the core login process, making it easier to manage as your application grows.</p>"},{"location":"revision/#conclusion_1","title":"Conclusion","text":"<p>Signals provide a clean and efficient way to decouple various tasks that need to be performed after a user logs in. Whether you're working with Flask or FastAPI, you can easily implement custom signals to handle asynchronous tasks like logging, sending emails, or notifying other systems when a user logs in. By using signals, your application becomes more modular, maintainable, and scalable.</p> <p>Asynchronous operations, such as sending a welcome email or updating user activity logs, should not hinder the login process. Signals ensure that these tasks happen in the background, keeping the user experience smooth and uninterrupted.</p> <p>So, if you're looking to make your login flow cleaner, more modular, and easier to extend in the future, signals are definitely a great tool to leverage.</p> <p>This blog provides a comprehensive look at how to use signals for login events, offering an effective solution for event-driven programming in Flask and FastAPI applications.</p>"},{"location":"Django/","title":"Overview","text":"<p>django</p>"},{"location":"Django/Django/","title":"Django","text":""},{"location":"Django/Django/#user-authentication-and-authorization","title":"User Authentication and Authorization","text":"<ul> <li>Authentication: The process of validating user is called authentication.</li> <li>Authorization: The process of validating access permissions of user is called authorization.</li> </ul> <p>Django provides the following 2 in built applications for user authentication.</p> <ol> <li>django.contrib.auth</li> <li>django.contrib.contenttypes</li> </ol> <p>Django uses PBKDF2_Sha256 algorithm to encrypt passwords and hence passwords won't be stored in plain text form and we can expect more security. Even superuser also cannot see any user's password.</p> <p>Based on our requirement, we can use more secure hashing algorithms also like bcrypt and argon2. We can install with pip as follows. - <code>pip install bcrypt</code> - <code>pip install django[argon2]</code></p> <p>More secured algorithm is argon2 and then bcrypt followed PBKDF2. In settings.py we have to configure password hashers as follows.</p> <pre><code> PASSWORD_HASHERS=[ \n 'django.contrib.auth.hashers.Argon2PasswordHasher', \n 'django.contrib.auth.hashers.BCryptSHA256PasswordHasher', \n 'django.contrib.auth.hashers.BCryptPasswordHasher', \n 'django.contrib.auth.hashers.PBKDF2PasswordHasher',\n 'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher', \n ]\n</code></pre> <p>Django will always consider from first to last. ie order is important. Just like templates and static folder, we have to create media folder also.</p> <p>Difference between Static and Media Folders: </p> <p>\u2615 Static folder contains images, CSS files etc which are provided by application to the end user. </p> <p>\u2615 But media folder contains the resources like images provided by end user to the application (like profile image etc)</p> <p>How to Configure Media Folder in settings.py File:  <pre><code>MEDIA_DIR = os.path.join(BASE_DIR,'media') MEDIA_ROOT = MEDIA_DIR MEDIA_URL = '/media/'\n\nfrom django.contrib.auth.decorators import login_required\n@login_required def java_exams_view(request): return render(request,'testapp/java.html')\n</code></pre> If we use @login_required decorator for any view function,then auth application will check whether user login or not. If the user not login then the control will be forwarded to login page. http://127.0.0.1:8000/accou</p> <p>LOGOUT_REDIRECT_URL='/' But we can configure our own target page after login inside settings.py as follows. LOGIN_REDIRECT_URL='/'</p> <p>Future Assignments:  1. How to customize our own login form 2. How to use auth application provided default signup form  3. Social Login</p>"},{"location":"Django/Django/#cbv","title":"CBV","text":"<pre><code>from django.contrib.auth.views import LoginView\n\nclass CustomLoginView(LoginView):\n    template_name = \"authApp/login.html\"\n\n    def get_success_url(self):\n        return self.get_redirect_url() or \"/authApp/dashboard/\"\n</code></pre> <p><pre><code>from django.contrib.auth import authenticate, login\nfrom django.shortcuts import render, redirect\n\ndef login_view(request):\n    if request.method == \"POST\":\n        username = request.POST[\"username\"]\n        password = request.POST[\"password\"]\n        user = authenticate(request, username=username, password=password)\n        if user:\n            login(request, user)\n            next_url = request.GET.get(\"next\", \"/authApp/dashboard/\")  # Redirect to 'next' or default\n            return redirect(next_url)\n    return render(request, \"authApp/login.html\")\n</code></pre> from django.contrib.auth.views import LoginView</p>"},{"location":"Django/interviews/","title":"Interviews","text":"<ol> <li>Why Use Alembic? \u201cAlembic is a database migration tool for Python, mainly used with SQLAlchemy. It helps manage schema changes over time in a version-controlled way, allowing developers to upgrade or downgrade the database safely. It automates tasks like creating tables, adding columns, and altering schemas without manually writing SQL.\u201d</li> </ol> <p>Alembic is a database migration tool for Python.</p> <p>It\u2019s mainly used with SQLAlchemy ORM to manage schema changes in your database over time.</p> <p>It allows you to upgrade or downgrade your database schema without losing data.</p> <ol> <li>Why Use Alembic? Databases evolve over time as your app grows.</li> </ol> <p>Manually writing ALTER TABLE queries is error-prone.</p> <p>Alembic automates:</p> <p>Adding/removing columns</p> <p>Creating/dropping tables</p> <p>Renaming columns</p> <p>Managing migrations in a versioned way 3. Basic Workflow Step 1: Install Alembic pip install alembic</p> <p>Step 2: Initialize Alembic in your project alembic init migrations</p> <p>Creates a migrations/ folder with configuration files.</p> <p>Step 3: Edit alembic.ini and env.py</p> <p>Configure the database URL in alembic.ini:</p> <p>sqlalchemy.url = postgresql://username:password@localhost/mydb</p> <p>Step 4: Create a Migration alembic revision -m \"create users table\"</p> <p>Generates a new migration file in migrations/versions/.</p> <p>Edit it to define schema changes:</p> <p>def upgrade():     op.create_table(         'users',         sa.Column('id', sa.Integer, primary_key=True),         sa.Column('name', sa.String(50)),     )</p> <p>def downgrade():     op.drop_table('users')</p> <p>Step 5: Apply Migration alembic upgrade head</p> <p>Updates the database to the latest version.</p> <p>Step 6: Downgrade (if needed) alembic downgrade -1</p> <p>Rolls back the last migration.</p> Command Description <code>alembic init migrations</code> Initialize Alembic in the project <code>alembic revision -m \"msg\"</code> Create a new migration script <code>alembic upgrade head</code> Apply migrations to the latest version <code>alembic downgrade -1</code> Rollback last migration <code>alembic history</code> Show migration history <code>alembic current</code> Show current database version <p>How to migrate django how to migrate in fastapi</p> <ol> <li>What is annotate in Django? annotate() is a QuerySet method in Django ORM used to add summary or computed fields to each object in a queryset.</li> </ol> <p>Typically used with aggregate functions like Count, Sum, Avg, Max, Min.</p> <p>Adds the result as a new field for each object in the queryset. 2. Basic Syntax</p> <pre><code>from django.db.models import Count, Sum, Avg\nqueryset.annotate(new_field=AggregateFunction('field_name'))\n</code></pre> <p>new_field \u2192 name of the computed field</p> <p>AggregateFunction \u2192 Count, Sum, Avg, etc.</p> <p>'field_name' \u2192 field to aggregate</p> <p>Models:</p> <pre><code>class Author(models.Model):\n    name = models.CharField(max_length=100)\n\nclass Book(models.Model):\n    title = models.CharField(max_length=100)\n    author = models.ForeignKey(Author, on_delete=models.CASCADE)\n    pages = models.IntegerField()\n\n# Use annotate() to count books per author:\nfrom django.db.models import Count\n\nauthors = Author.objects.annotate(num_books=Count('book'))\nfor author in authors:\n    print(author.name, author.num_books)\nUse annotate() to get total pages per author:\n\nfrom django.db.models import Sum\n\nauthors = Author.objects.annotate(total_pages=Sum('book__pages'))\nfor author in authors:\n    print(author.name, author.total_pages)\n</code></pre> <p>\u201cIn Django, annotate() is a QuerySet method that allows you to add a calculated field to each object in the queryset. It\u2019s commonly used with aggregate functions like Count, Sum, or Avg, and is very useful for reporting or summarizing related data.\u201d</p>"},{"location":"Django/interviews/#blueprint-in-falsk","title":"Blueprint in falsk","text":""},{"location":"Django/interviews/#what-is-a-model-manager-in-django","title":"What is a Model Manager in Django?","text":"<p>A Model Manager in Django is a class that handles database query operations for a model. By default, every model has the objects manager. You can create custom managers to add reusable query methods, encapsulate filtering logic, and make querying easier and cleaner.</p> <p>Definition: A Manager is a Django class that manages database query operations for a model.</p> <p>Every Django model has at least one manager, and by default it\u2019s called objects.</p> <p>Managers are used to query the database and can be customized with extra methods.</p> <ol> <li>Default Manager</li> </ol> <p>By default, Django provides the objects manager for every model.</p> <pre><code>from django.db import models\n\nclass Employee(models.Model):\n    name = models.CharField(max_length=100)\n    department = models.CharField(max_length=50)\n\n# Default manager usage\nall_employees = Employee.objects.all()\npython_employees = Employee.objects.filter(department=\"Python\")\n</code></pre> <ol> <li>Custom Manager</li> </ol> <p>You can create a custom manager to add extra query methods.</p> <pre><code>from django.db import models\n\nclass EmployeeManager(models.Manager):\n    def python_devs(self):\n        return self.filter(department=\"Python\")\n\nclass Employee(models.Model):\n    name = models.CharField(max_length=100)\n    department = models.CharField(max_length=50)\n\n    objects = EmployeeManager()  # Assign custom manager\n\n# Usage\npython_employees = Employee.objects.python_devs()\n</code></pre> <ol> <li>Multiple Managers</li> </ol> <p>A model can have more than one manager: 5. When to Use a Manager</p> <p>For custom queries used across your project.</p> <p>To encapsulate common filtering logic.</p> <p>To keep your code DRY (Don\u2019t Repeat Yourself).</p>"},{"location":"Django/interviews/#1-what-is-elasticsearch","title":"1. What is Elasticsearch?","text":"<p>Elasticsearch is a distributed, RESTful search and analytics engine.</p> <p>It is based on Apache Lucene and designed for full-text search and real-time analytics.</p> <p>Often used for search engines, logging, analytics dashboards, and vector search in AI applications. Elasticsearch is a distributed, RESTful search and analytics engine.</p> <p>It is based on Apache Lucene and designed for full-text search and real-time analytics.</p> <p>Often used for search engines, logging, analytics dashboards, and vector search in AI applications.</p> Concept Description Index Like a database; stores documents Document Like a row; JSON object stored in index Shard Subdivision of an index for scaling Replica Copy of shard for fault tolerance Cluster Collection of nodes working together Use the official Elasticsearch Python client: <pre><code>from elasticsearch import Elasticsearch\n\n# Connect to Elasticsearch\nes = Elasticsearch(\"http://localhost:9200\")\n\n# Index a document\ndoc = {\"name\": \"Ashish\", \"role\": \"Python Developer\"}\nes.index(index=\"employees\", document=doc)\n\n# Search a document\nres = es.search(index=\"employees\", query={\"match\": {\"name\": \"Ashish\"}})\nprint(res['hits']['hits'])\n</code></pre> <ol> <li>Use Cases</li> </ol> <p>Search Engines: Elastic is used in websites for fast search.</p> <p>Logging &amp; Monitoring: ELK stack (Elasticsearch + Logstash + Kibana)</p> <p>Analytics: Real-time dashboards with aggregated data.</p> <p>AI &amp; Vector Search: Store embeddings for semantic search or recommendation systems. Interview-Friendly Answer</p> <p>\u201cElasticsearch is a distributed search and analytics engine built on Apache Lucene. It stores data as JSON documents in indexes and supports full-text search, aggregations, and near real-time queries. In Python, it can be integrated using the official elasticsearch client for indexing, searching, and analytics. It\u2019s widely used in search engines, logging, and AI applications for semantic search.</p>"},{"location":"Django/interviews/#what-is-on_delete-in-django","title":"What is on_delete in Django?","text":"<p>on_delete is an argument for ForeignKey or OneToOneField in Django models.</p> <p>It defines what happens to related objects when the referenced object is deleted.</p> <p>Essential for maintaining database integrity.</p> <pre><code>class Book(models.Model):\n    author = models.ForeignKey(Author, on_delete=models.CASCADE)\n</code></pre> <p>author \u2192 ForeignKey to Author model</p> <p>on_delete=models.CASCADE \u2192 defines behavior when the referenced Author is deleted</p> <ol> <li>Common on_delete Options | Option        | Description                                                                           | | ------------- | ------------------------------------------------------------------------------------- | | <code>CASCADE</code>     | Delete this object when the referenced object is deleted                              | | <code>PROTECT</code>     | Prevent deletion of the referenced object by raising <code>ProtectedError</code>                 | | <code>SET_NULL</code>    | Set this field to <code>NULL</code> when the referenced object is deleted (requires <code>null=True</code>) | | <code>SET_DEFAULT</code> | Set this field to its default value                                                   | | <code>SET(...)</code>    | Set this field to a given value or callable                                           | | <code>DO_NOTHING</code>  | Do nothing; may cause integrity errors if DB constraints exist                        |</li> </ol> <pre><code>from django.db import models\n\nclass Author(models.Model):\n    name = models.CharField(max_length=100)\n\nclass Book(models.Model):\n    title = models.CharField(max_length=100)\n    author = models.ForeignKey(Author, on_delete=models.CASCADE)  # CASCADE deletion\n\n# Example behavior\nauthor = Author.objects.create(name=\"Ashish\")\nbook1 = Book.objects.create(title=\"Python 101\", author=author)\n\nauthor.delete()  # All related books with this author will also be deleted\n</code></pre> <ol> <li>Practical Notes</li> </ol> <p>Use CASCADE for dependent data (child should be deleted with parent).</p> <p>Use PROTECT to ensure important data is not accidentally deleted.</p> <p>SET_NULL is common for optional relationships.</p> <p>\u201con_delete in Django specifies the behavior of a ForeignKey or OneToOneField when the referenced object is deleted. Options include CASCADE (delete dependent objects), PROTECT (prevent deletion), SET_NULL (set field to null), SET_DEFAULT, and DO_NOTHING. It ensures database integrity and controls relationships between models.\u201d</p>"},{"location":"Django/interviews/#vector-databases","title":"Vector Databases","text":"<p>Vector Search is the process of finding items similar to a query by comparing vector representations (embeddings) of the data.</p> <p>Unlike keyword search, vector search works on semantic similarity, meaning it finds results based on meaning rather than exact matches.</p> <p>. How Vector Search Works</p> <p>Embedding Generation: Convert data into numeric vectors using machine learning models.</p> <p>Examples:</p> <p>Text \u2192 BERT, OpenAI embeddings</p> <p>Images \u2192 CLIP, ResNet</p> <p>Audio \u2192 Wav2Vec</p> <p>Indexing: Store these vectors in a vector index optimized for nearest neighbor search.</p> <p>Querying:</p> <p>Convert query to a vector.</p> <p>Use distance metrics (cosine similarity, Euclidean distance, inner product) to find the most similar vectors.</p> Metric Description Cosine Similarity Measures angle between vectors; good for text embeddings Euclidean Distance Straight-line distance in vector space; good for spatial data Dot Product / Inner Product Measures similarity; used in ranking by relevance <pre><code>from sentence_transformers import SentenceTransformer\nimport faiss\nimport numpy as np\n\n# 1. Data\ndocuments = [\"I love Python\", \"Machine learning is fun\", \"I enjoy coding\"]\n\n# 2. Generate embeddings\nmodel = SentenceTransformer('all-MiniLM-L6-v2')\ndoc_vectors = model.encode(documents).astype('float32')\n\n# 3. Create vector index\ndimension = doc_vectors.shape[1]\nindex = faiss.IndexFlatL2(dimension)\nindex.add(doc_vectors)\n\n# 4. Query\nquery = \"I like programming\"\nquery_vector = model.encode([query]).astype('float32')\n\n# 5. Search top 2 similar docs\ndistances, indices = index.search(query_vector, k=2)\nprint(indices, distances)\n</code></pre> <p>Advantages of Vector Search</p> <p>Semantic search (meaning-based)</p> <p>Handles multimodal data (text, images, audio)</p> <p>Scales to millions or billions of vectors</p> <p>More robust than keyword search</p> Feature Vector Search Keyword Search Matches Semantic similarity Exact keyword match Data type Embeddings (vectors) Text, numbers Use case AI, ML, recommendations General web search Performance Requires indexing (FAISS, Milvus) SQL/NoSQL indexes Flexibility High (meaning-based) Low <p>\u201cVector Search is a technique to find items similar to a query by comparing their vector representations (embeddings). It\u2019s widely used in AI applications for semantic search, recommendation systems, and image/text similarity. Unlike keyword-based search, it focuses on meaning rather than exact matches.\u201d</p>"},{"location":"Django/interviews/#querysetcommand-based-questions1-11-ques-ans","title":"QuerySet/Command Based Questions(1-11 Ques-Ans)","text":""},{"location":"Django/interviews/#what-is-the-command-to-install-django-and-to-know-about-its-version","title":"What is the command to install Django and to know about its version?","text":"<ul> <li>comamand to install Django</li> </ul> <p><code>pip install django</code></p> <ul> <li>to check Django version</li> </ul> <p><code>python -m django --version</code></p> <ul> <li>Ro check all versions of installed models: <code>pip freeze</code></li> </ul>"},{"location":"Django/interviews/#what-is-the-command-to-create-a-project-and-app-in-django","title":"What is the command to create a project and app in Django?","text":"<p>Command to crate a project <code>django-admin startapp project_name</code></p> <p>Command to create an app: <code>python manage.py start myapp</code></p>"},{"location":"Django/interviews/#what-is-the-command-to-run-a-project-in-django","title":"What is the command to run a project in Django?","text":"<p>Run a Project <code>python manage.py runserver</code> By default, this command starts the declopment server on the internal IP at port 8000</p> <p>If you want to change the server's port, pass it as a command line arument</p> <pre><code>python manage.py runserver 8080\n</code></pre> <p>If you want to chnage the server's Ip, pass it along with port, use:</p> <pre><code>python manage.py runserver 0.0.0.0:8080\n</code></pre>"},{"location":"Django/interviews/#what-is-the-command-for-migrations-in-django","title":"What is the command for migrations in Django?","text":"<p>COmmand to create a migration file inside the migration folder:</p> <pre><code>python manage.py makemigrations\n</code></pre> <p>after creating a migration, to reflect changes in the database permanently execute migrate command</p> <pre><code>python manage.py migrate\n</code></pre> <p>To see raw SQL query executing behind applied migration execute the command</p> <pre><code>python manage.py sqlmigrate app_name migration_name\npython manage.py sqlmigrate appname 00001\n</code></pre> <p>To see all migrations, execte the command</p> <pre><code>python manage.py showmigrations\n</code></pre> <p>To see app specific migrations by specifying app name execute command</p> <pre><code>python manage.py showmigrations appname\n</code></pre>"},{"location":"Django/interviews/#what-is-the-command-to-create-a-superuser-in-django","title":"What is the Command To Create a Superuser in Django?","text":"<p>Command to create a superuser</p> <pre><code>python manage.py createsuperuser\n</code></pre> <p>enter desired username and press enter</p> <pre><code>username: admin\n</code></pre> <p>you will then be prompted for your desired email address:</p> <pre><code>Email address:admin@example.com\n</code></pre> <p>enter you password twice</p> <pre><code>Password:*******\nPassword(again):*******\nSuperuser created sucessfully\n</code></pre>"},{"location":"Django/interviews/#-what-is-the-django-command-to-view-a-database-schema-of-an-existing-or-legacy-database","title":"- What is the Django command to view a database schema of an existing (or legacy) database?","text":"<p>Command to view a database schema of an existing databse</p> <pre><code>python manage.py inspectdb\n</code></pre>"},{"location":"Django/interviews/#how-to-view-all-items-in-the-model-using-django-queryset","title":"How to view all items in the Model using Django QuerySet?","text":"<p>Django Command to view all items in a model</p> <pre><code>Users.objects.all()\n</code></pre> <p>Where \"user\" is a model name</p>"},{"location":"Django/interviews/#how-to-filter-items-in-the-model-using-django-queryset","title":"How to filter items in the Model using Django QuerySet?","text":"<p>Django Command To Filter Items In A Model:</p> <pre><code>Users.objects.filter(name=\"Nitin\")\n</code></pre>"},{"location":"Django/interviews/#how-to-get-a-particular-item-in-the-model-using-django-queryset","title":"How to get a particular item in the Model using Django QuerySet?","text":"<p>Django Command To Get A Particular Item In A Model:</p> <pre><code>Users.objects.get(id=25)\n</code></pre>"},{"location":"Django/interviews/#how-to-deleteinsertupdate-an-object-using-queryset-in-django","title":"How to delete/insert/update an object using QuerySet in Django?","text":"<p>QuerySet To Delete An Object:</p> <pre><code>Users.objects.filter(id= 54).delete()\n</code></pre> <p>QuerySet To Update An Object:</p> <pre><code>user_to_be_modify = User.objects.get(pk = 3)\nuser_to_be_modify.city = \"Pune\"\nuser_to_be_modify.save()\n</code></pre> <p>QuerySet To Insert/Add An Object:</p> <pre><code>new_user = User(name = \"Nitin Mangotra\", city=\"Gurgaon\")\nnew_user.save()\n</code></pre>"},{"location":"Django/interviews/#how-can-you-combine-multiple-querysets-in-a-view","title":"How can you combine multiple QuerySets in a View?","text":"<p>Let's suppose the following two models in Django.</p> <pre><code>class Blog(models.Model):\ntitle = models.CharField(max_length=255)\ncontent = models.TextField(blank=True)\n\nclass Email(models.Model):\ntitle = models.CharField(max_length=255)\ncontent = models.TextField(blank=True)\n</code></pre> <p>Let's suppose the following three querysets generated from above models, that you want to combine.</p> <pre><code>query_set_1 = Blog.objects.filter(id__gte=3)\nquery_set_2 = Email.objects.filter(id__lte=11)\nquery_set_3 = Blog.objects.filter(id__lte=2)\n</code></pre> <ol> <li>Using Union Operator:</li> </ol> <p>If both querysets belong to the same model, such as query_set_1 &amp; query_set_3 above, then you can use union operator \"|\" to easily combine those querysets.</p> <pre><code>query_set_result = query_set_1 | query_set_3\n</code></pre> <p>You can use the union operator to combine two or more querysets as shown below.</p> <pre><code>combined_result= query_set_1 | query_set_3 | query_set_4 ...\n</code></pre> <ol> <li>Using Itertools: If both querysets belong to the different model, such as query_set_1 &amp; query_set_2 above,then you can use itertools combine those querysets.</li> </ol> <pre><code>from itertools import chain\ncombined_list = list(chain(query_set_1,query_set_2))\n</code></pre> <p>You just need to mention the querysets you want to combine in a comma-separated manner in chain function. You can also use it to combine more than two querysets.</p> <pre><code>combined_list = list(chain(query_set_1, query_set_2, query_set_3))\n</code></pre> <p>There is an issue with this approach, you won't get a queryset, you\u2019ll get a list containing instances.</p>"},{"location":"Django/interviews/#mostly-asked-questions","title":"Mostly Asked Questions","text":""},{"location":"Django/interviews/#explain-django-architecture-also-explain-model-template-and-views","title":"Explain Django Architecture? Also Explain Model, Template And Views","text":"<ul> <li>Django follows a software design pattern called as MVT (Model View Template) Architecture.</li> <li>It is based on the Model View Controller architecture (MVC). But is slightly different from the MVC pattern as it maintains its own conventions, so, the controller is handled by the framework itself.</li> <li>Model: It helps in handling the database (Models). They provide the options to create, edit and query data records in the database</li> <li>Template: The template is a presentation layer. It defines the structure of file layout to represent data in a web page. It is an HTML file mixed with Django Template Language (DTL).</li> <li>View: The View is used to execute the business logic and interact with a model to carry data and renders a template.</li> </ul> <p>The developer provides the model, the view, and the template then maps it to a URL, and finally, Django serves it to the user.  Here, a user requests for a resource to the Django, Django works as a controller and check to the available resource in URL. (urls.py file)</p> <ul> <li>If URL maps, a view is called that interact with model and template, it renders a template.</li> <li>Django responds back to the user and sends a template as a response.</li> </ul>"},{"location":"Django/interviews/#explain-how-a-request-is-processed-in-django","title":"Explain How A Request Is Processed In Django?","text":"<p>Here, a user requests for a resource to the Django, Django works as a controller and check to the available resource in URL.</p> <ul> <li>When Django server is started, the manage.py file searches for settings.py file, which contains information of all the applications installed in the project, middleware used, database connections and path to the main urls config.</li> <li> <p>Manage.py &gt;&gt; Setting.py &gt;&gt; urls.py &gt;&gt; views.py &gt;&gt; models.py &gt;&gt; templates</p> </li> <li> <p>Django first determines which root URLconf or URL configuration module is to be used</p> </li> <li>Then, that particular Python module urls is loaded and then Django looks for the variable urlpatterns</li> <li>Then check each URL patterns in urls.py file, and it stops at the first match of the requested URL</li> <li>Once that is done, the Django then imports and calls the given view.</li> <li>In case none of the URLs match the requested URL, Django invokes an error-handling view</li> <li>If URL maps, a view is called that interact with model and template, it renders a template.</li> <li>Django responds back to the user and sends a template as a response.</li> </ul>"},{"location":"Django/interviews/#what-is-the-difference-between-a-project-and-an-app-in-django","title":"What Is The Difference Between A Project And An App In Django?","text":"<p>In Simple Words:</p> <ul> <li>A Project is the entire Django application and an App is a module inside the project that deals with one specific use case. For Example:- payment system(app) in the eCommerce app(Project).</li> <li>An App is basically a web Application that is created to perform a specific task.</li> <li>A project, on the other hand, is a collection of these apps.</li> <li>Therefore, a single project can consist of \u2018n\u2019 number of apps and a single app can be in multiple projects.</li> </ul> <p>Command To Create A Project:</p> <pre><code>django-admin startproject nitman\n</code></pre> <p>Command To Create An App:</p> <pre><code>python manage.py startapp newapp\n</code></pre> <p>To start a project in Django, use command</p> <pre><code>django-admin.py newapp\n</code></pre> <p>A Typical Django Project Directory</p> <pre><code>Structure:\nnewapp/\nmanage.py\nnewapp/\n**init**.py\nsettings.py\nurls.py\nwsgi.py\n</code></pre> <p>The last four files are inside a directory, which is at the same level of manage.py.</p> <ul> <li> <p>manage.py: A command-line utility that allows you to interact with your Django project &amp; this file is used to control your Django project on the server or even to begin one.</p> </li> <li> <p>init.py: An empty file that tells Python that the current directory should be considered as a Python package</p> </li> <li> <p>settings.py: Comprises the configurations of the current project like DB connections, middlewares etc</p> </li> <li>urls.py: All the URLs of the project are present here</li> <li>wsgi.py: This is an entry point for your application which is used by the web servers to serve the project you have created</li> </ul>"},{"location":"Django/interviews/#which-is-the-default-database-in-settings-file-in-django","title":"Which Is The Default Database In Settings File In Django?","text":"<p>Database Name: SQLite</p>"},{"location":"Django/interviews/#why-is-django-called-a-loosely-coupled-framework","title":"Why Is Django Called A Loosely Coupled Framework?","text":"<ul> <li>Django is called a loosely coupled framework because of its MVT architecture, which is a variant of the MVC architecture.</li> <li>MVT helps in separating the server code from the client-related code.</li> <li>Django\u2019s Models and Views are present on the client machine and only templates return to the client, which are essentially HTML, CSS code and contains the required data from the models.</li> <li>These components are totally independent of each other and therefore, front-end developers and backend developers can work simultaneously on the project as these two parts changing will have little to no effect on each other when changed.</li> <li>Therefore, Django is a loosely coupled framework.</li> </ul>"},{"location":"Django/interviews/#which-is-the-default-port-for-the-django-development-server","title":"Which is the default port for the Django development server?","text":"<p>Default Port For Django Development Server: 8000 By default, the server runs on port 8000 on the IP address 127.0. 0.1</p>"},{"location":"Django/interviews/#explain-the-migration-in-django","title":"Explain the Migration in Django","text":"<p>Migration in Django is to make changes to our models like deleting a model, adding a field, etc. into your database schema. \u274f A migration in Django is a Python file that contains changes we make to our models so that they can be converted into a database schema in our DBMS. \u274f So, instead of manually making changes to our database schema by writing queries in our DBMS shell, we can just make changes to our models. \u274f Then, we can use Django to generate migrations from those model changes and run those migrations to make changes to our database schema. There are several commands you use to interact with Migrations In Django: \u274f makemigration - This command is used to create a migration file. \u274f migrate - This command creates a table according to the schema defined in migration file. \u274f showmigrations - This command list all the migrations and their status. \u274f sqlmigrate - This command is used to show a raw SQL query of the applied migration.</p> <p>Command to create a migration file inside the migration folder: python manage.py makemigrations After creating a migration, to reflect changes in the database permanently execute migrate command: python manage.py migrate To see raw SQL query executing behind applied migration execute the command: python manage.py sqlmigrate app_name migration_name python manage.py sqlmigrate nitapp 0001 To see all migrations, execute the command: python manage.py showmigrations To see app-specific migrations by specifying app-name, execute the command: python manage.py showmigrations nitapp</p>"},{"location":"Django/interviews/#what-is-django-orm","title":"What is Django ORM?","text":"<p>ORM stands for Object-relational Mapper. \u274f This ORM enables us to interact with databases in a more pythonic way like we can avoid writing raw queries. \u274f It is possible to retrieve, save, delete and perform other operations over the database without ever writing any SQL query. \u274f It helps us with working with data in a more object-oriented way. Let's consider a simple SQL Query where Employee table to retrieve a employee name. Select * from EMPLOYEE where name = \"Nitin\"; The Equivalent Django ORM query will be: emp = employees.objects.filter(name='Nitin') Limitation of Django ORM: \u274f If the data is complex and consists of multiple joins using the SQL will be clearer. \u274f If Performance is a concern for your, ORM aren\u2019t your choice. \u274f Generally. Object-relation-mapping are considered good option to construct an optimized query, SQL has an upper hand when compared to ORM.</p>"},{"location":"Django/interviews/#explain-how-you-can-set-up-the-database-in-django","title":"Explain how you can set up the Database in Django?","text":"<p>To set up a database in Django, you can find its configurations in setting.py file that representing Django settings. By default, Django uses SQLite database. It is easy for Django users because it doesn\u2019t require any other type of installation.</p> <pre><code>DATABASES = {\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n}\n}\n</code></pre> <p>In the case of other database you have to the following keys in the DATABASE \u2018default\u2019 item to match your database connection settings. Engines: you can change database by using \u2018django.db.backends.sqlite3\u2019 , \u2018django.db.backeneds.mysql\u2019, \u2018django.db.backends.postgresql_psycopg2\u2019, \u2018django.db.backends.oracle\u2019 and so on 'ENGINE': 'django.db.backends.postgresql_psycopg2', Now we should replace the above code with our connection credentials to Mysql. The updated code should look like the code below.</p> <pre><code>DATABASES = {\n'default': {\n'ENGINE': 'django.db.backends.postgresql_psycopg2',\n'NAME': 'helloworld',\n'USER': '&lt;yourname&gt;',\n'PASSWORD': 'password',\n'HOST': 'localhost',\n'PORT': '',\n}\n</code></pre>"},{"location":"Django/interviews/#what-do-you-mean-by-the-csrf-token","title":"What do you mean by the CSRF Token?","text":"<p>CSRF stands for Cross Site Request Forgery. \u274f The csrf_token is used for protection against Cross-Site Request Forgeries. \u274f This kind of attack takes place when a malicious website consists of a link, some JavaScript or a form whose aim is to perform some action on your website by using the login credentials of a genuine user. \u274f CSRF tokens can prevent CSRF attacks by making it impossible for an attacker to construct a fully valid HTTP request suitable for feeding to a victim user. \u274f A CSRF token is a unique, secret, unpredictable value that is generated by the server-side application and transmitted to the client in such a way that it is included in a subsequent HTTP request made by the client. \u274f When the later request is made, the server-side application validates that the request includes the expected token and rejects the request if the token is missing or invalid.</p>"},{"location":"Django/interviews/#what-is-a-queryset-in-django","title":"What is a QuerySet in Django?","text":"<p>\u274f QuerySet is a collection of SQL queries. \u274f A QuerySet in Django is basically a collection of objects from our database. \u274f QuerySets are used by the Django ORM. When we use our models to get a single record or a group of records from the database, they are returned as QuerySets. \u274f It is comparable to a database select operation. E.g</p> <pre><code>users.objects.all()\nusers.objects.filter(name=\u201dnitin\u201d)\nusers.objects.get(id=3)\n</code></pre>"},{"location":"Django/interviews/#difference-between-select_related-and-prefetch_related-in-django","title":"Difference between select_related and prefetch_related in Django?","text":"<p>select_related: \u274f Returns a QuerySet that will \u201cfollow\u201d foreign-key relationships, selecting additional related-object data when it executes its query. \u274f This is a performance booster which results in a single more complex query but means later use of foreign-key relationships won\u2019t require database queries. prefetch_related: \u274f We use prefetch_related when we\u2019re going to get a set of things. \u274f That means forward ManyToMany and backward ManyToMany, ForeignKey. \u274f prefetch_related does a separate lookup for each relationship, and performs the \u201cjoining\u201d in Python. Though both the functions are used to fetch the related fields on a model but their functioning is bit different from each other. In simple words, select_related uses a foreign key relationship, i.e. using join on the query itself while on the prefetch_related there is a separate lookup and the joining on the python side.</p> <p>Let's suppose the following 3 models in Django.</p> <pre><code>from django.db import models\n\nclass Blog(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\nclass Author(models.Model):\n    name = models.CharField(max_length=200)\n    email = models.EmailField()\nclass Entry(models.Model):\n    blog = models.ForeignKey(Blog,on_delete=models.CASCADE)\n    headline = models.CharField(max_length=255)\n    authors = models.ManyToManyField(Author)\n</code></pre> <p>The following examples illustrate the difference between plain lookups and select_related() lookups. Here\u2019s standard lookup:</p> <pre><code># Hits the database\n\ne = Entry.objects.get(id=5)\n\n# Hits the database again to get the related Blog object\n\nb = e.blog\nAnd here\u2019s select_related lookup:\n\n# Hits the database\n\ne = Entry.objects.select_related('blog').get(id=5)\n\n# Doesn't hit the database, because e.blog has been\n</code></pre> <p>prepopulated in the previous query. b = e.blog You can use select_related() with any queryset of objects</p> <pre><code>from django.db import models\nclass Country(models.Model):\ncountry_name = models.CharField(max_length=5)\nclass State(models.Model):\nstate_name = models.CharField(max_length=5)\ncountry = model.ForeignKey(Country)\n\nprefetch_related:\n&gt;&gt; country = Country.objects.prefetch_related(\u2018state\u2019).get(id=1)\n&gt;&gt; for state in country.state.all():\n\u2026 print(state.state_name)\n</code></pre> <p><code>``Query Executed SELECT id, country_name FROM country WHERE id=1; SELECT state_id, state_name WHERE State WHERE country_id IN (1);</code>select_related:</p> <p>states = State.objects.select_related(\u2018country\u2019).all() for state in states: \u2026 print(state.state_name) Query Executed</p> <pre><code>SELECT state_id, state_name, country_name FROM State INNER JOIN Country ON (State.country_id = Country.id)\n</code></pre>"},{"location":"Django/interviews/#difference-between-empobjectfilter-empobjectget-and-empobjectsall-in-django-queryset","title":"Difference between Emp.object.filter(), Emp.object.get() and Emp.objects.all() in Django Queryset?","text":"<p>Emp.objects.all(): In order to view all the items from your database, you can make use of the \u2018all()\u2019 function as mentioned below: Users.objects.all() where Users is some class that you have created in your models</p> <p>Emp.object.filter() &amp; Emp.object.get(): To filter out some element from the database, you either use the get() method or the filter() method as follows: Users.objects.filter(name=\"Nitin\") Users.objects.get(name=\"Nitin\") Basically use get() when you want to get a single unique object, &amp; filter() when you want to get all objects that match your lookup parameters get() throws an error if there\u2019s no object matching the query. filter() will return an empty queryset. get() raises MultipleObjectsReturned if more than one object was found. The MultipleObjectsReturned exception is an attribute of the model class. get() raises a DoesNotExist exception if an object wasn't found for the given parameters. This exception is also an attribute of the model class.</p>"},{"location":"Django/interviews/#which-companies-use-django","title":"Which Companies Use Django?","text":"<p>Instagram \u274f Mozilla \u274f Spotify \u274f Pinterest \u274f Disqus \u274f Bitbucket \u274f Eventbrite \u274f Prezi \u274f Dropbox \u274f Youtube \u274f National Geographic</p>"},{"location":"Django/interviews/#how-static-files-are-defined-in-django-explain-its-configuration-and-uses","title":"How Static Files are defined in Django? Explain its COnfiguration and uses","text":"<p>Websites generally need to serve additional files such as images. Javascript or CSS. In Django, these files are referred to as \u201cstatic files\u201d, Apart from that Django provides django.contrib.staticfiles to manage these static files. \u274f These files are created within the project app directory by creating a subdirectory named as static. \u274f Static files are stored in the folder called static in the Django app.</p> <p>How to configure static files? \u274f Ensure that django.contrib.staticfiles is added to your INSTALLED_APPS \u274f In your settings file. define STATIC_URL for ex. STATIC_URL = '/static/' \u274f In your Django templates, use the static template tag to create the URL for the given relative path using the configured STATICFILES_STORAGE. {% load static %}  \u274f Store your static files in a folder called static in your app. For example my_app/static/my_app/example.jpg</p> <p>How can you set up static files in Django? There are three main things required to set up static files in Django:</p> <p>1) Set the STATIC_ROOT setting to the directory from which you\u2019d like to serve these files, e.g: STATIC_ROOT = \"/var/www/example.com/static/\" 2) Run the collectstatic management command: python manage.py collectstatic This will copy all files from your static folders into the STATIC_ROOT directory. 3) set up a Static Files entry on the PythonAnywhere web tab</p>"},{"location":"Django/interviews/#what-is-the-difference-between-flask-pyramid-and-django","title":"What is the difference between Flask, Pyramid, and Django?","text":"<p>Flask is a \"microframework\" primarily build for a small application with simpler requirements. In flask, you have to use external libraries. Flask is ready to use. Pyramid are build for larger applications. It provides flexibility and lets the developer use the right tools for their project. The developer can choose the database, URL structure, templating style and more. Pyramid is heavy configurable. Django can also used for larger applications. It includes an ORM.</p> <p>Comparison Factor Django Flask Project Type Supports large projects Built for smaller projects Templates, Admin and ORM Built-in Requires installation Ease of Learning Requires more learning and practice Easy to learn Flexibility Allows complete web development without the need for third-party tools More flexible as the user can select any third-party tools according to their choice and requirements Visual Debugging Does not support Visual Debug Supports Visual Debug Type of framework Batteries included Simple, lightweight Bootstrapping-tool Built-it Not available</p> <p>Django is a high-level Python framework while Flask is a low-level Python Framework providing you with the minimum functionality, a server would require. \u274f Django comes with lots of built-in functionality like Django ORM, Admin Panel, Web-templating System, Inheritance, serialization while Flask comes with a development server, NoSQL support, support for unit testing, which are already there in Django. \u274f Flask is more customizable than Django as Flask comes with no predefined structure or scaffold while Django\u2019s file structure is fixed. \u274f Flask settings are user made and can be altered completely by the user. Django settings are not customizable to that degree, it has variables where only values are modifiable. \u274f Flask has more speed than Django when it comes to processing requests but that comes without any APIs or functionality which Django gives you in-built. \u274f Flask is for the developers who want more flexibility on their website and don\u2019t need lots of built-in extra functions, while Django is for developers who want rapid development of their applications that can sustain dynamic changes to its environment.</p>"},{"location":"Django/interviews/#common-question-1-16-ques-ans","title":"Common Question (1-16 Ques-Ans)","text":""},{"location":"Django/interviews/#give-a-brief-about-the-django-admin","title":"Give a brief about the Django admin","text":"<p>Django Admin Panel: \u274f Django admin panel is a kind of graphical user interface that is used for administrative tasks. \u274f Django comes with a fully customizable in-built admin interface. \u274f You get the quick setup of the admin panel to manage your data and to access it. \u274f To use a database table with the admin interface, we need to register the model in the admin.py file. \u274f The development process becomes faster and also it becomes easy for the developers to perform administrative activities. \u274f The application Django admin is imported from the django.contrib package. \u274f This imported application is also expected to get control by the corresponding organization hence it does not require an additional front end. The Django admin interface provides a number of advanced features like: \u274f Authorization access \u274f Managing multiple models \u274f Content management system</p> <p>django-admin: It is the command-line utility of Django for administrative tasks. Using the django-admin you can perform a number of tasks some of which are listed Below: \u274f django-admin version - used to check your Django version. \u274f django-admin check - used to inspect the entire Django project for common problems. \u274f django-admin runserver - Starts a light-weight Web server on the local machine for development. The default server runs on port 8000 on the IP address 127.0.0.1. You can pass a custom IP address and port number explicitly if you want. \u274f django-admin startapp - Creates a new Django app for the given app name within the current directory or at the given destination. \u274f django-admin startproject - Creates a new Django project directory structure for the given project name within the current directory or at the given destination. \u274f django-admin test - Runs tests for all installed apps. \u274f django-admin testserver - Runs a Django development server (which is also executed via the runserver command) using data from the given fixture(s).</p> <p>django-admin changepassword - offers a method to change the user's password. \u274f django-admin createsuperuser - Creates a user account with all permissions(also known as superuser account). \u274f django-admin showmigrations - Shows all migrations present in the project. \u274f django-admin makemigrations - Generates new migrations as per the changes detected to your models. \u274f django-admin migrate - Executes SQL commands after which the database state with the current set of models and migrations are synchronized. \u274f django-admin sqlmigrate - Prints the SQL statement for the named migration. \u274f django-admin inspectdb - It generates django models from the existing database tables. \u274f django-admin sqlflush - Prints the SQL statements that would be executed for the flush command mentioned above. \u274f django-admin shell - Starts the Python interactive interpreter. \u274f django-admin dumpdata - Used to the dumpdata from the database. \u274f django-admin flush - Flush all values from the database and also re-executes any post-synchronization handlers specified in the code. \u274f django-admin loaddata - loads the data into the database from the fixture file. \u274f django-admin makemessages - Used for translation purpose and it generates a message file too.</p> <p>django-admin sqlsequencereset - output the SQL queries for resetting sequences for the given app name(s). \u274f django-admin squashmigrations - Squashes a range of migrations for a particular app_label. \u274f django-admin remove_stale_contenttypes - removes stale content types (from deleted models) in your database. \u274f django-admin sendtestemail - This is used to confirm email sending through Django is working by sending a test email to the recipient(s) specified. \u274f django-admin help - used to display usage information and a list of the commands provided by each application. \u274f django-admin compilemessages - Compiles .po files created by makemessages to .mo files for use with the help of built-in gettext support. \u274f django-admin createcachetable - Creates the cache tables for use in the database cache backend. \u274f django-admin dbshell - Runs the command-line client for the database engine specified in your ENGINE setting(s), with the connection parameters (USER, PASSWORD, DB_NAME, USER etc.) specified settings file. \u274f django-admin diffsettings - Shows the difference between the existing settings file and Django\u2019s default settings. \u274f django-admin clearsessions - Can be used to clean out expired sessions or as a cron job.</p>"},{"location":"Django/interviews/#what-databases-are-supported-by-django","title":"What databases are supported by Django?","text":"<p>PostgreSQL \u274f MySQL \u274f SQLite \u274f Oracle \u274f Apart from these, Django also supports databases such as ODBC, Microsoft SQL Server, IBM DB2, SAP SQL Anywhere, and Firebird using third-party packages. Among these the best-suited database is PostgreSQL. Note: Officially Django doesn\u2019t support any No-SQL databases.</p>"},{"location":"Django/interviews/#what-are-the-advantagesdisadvantages-of-using-django","title":"What are the advantages/disadvantages of using Django?","text":"<p>Advantages Of Django: \u274f Django is a Python's framework which is easy to learn. \u274f Django follows the DRY or the Don\u2019t Repeat Yourself Principle which means, one concept or a piece of data should live in just one place \u274f Django Offers Better CDN connectivity and Content Management \u274f Django is a Batteries Included Framework \u274f Django Offers Rapid-development \u274f Django is highly Scalable \u274f Django provide high Security \u274f Django facilitates you to divide code modules into logical groups to make it flexible to change. \u274f Django provides auto-generated web admin to make website administration easy. \u274f Django provides template system to define HTML template for your web page to avoid code duplication. \u274f Django enables you to separate business logic from the HTML.</p> <p>Disadvantages of Django: \u274f Django is Monolithic. You must know the full system to work with it. \u274f Django's monolithic size makes it unsuitable for smaller projects \u274f Everything must be explicitly defined due to a lack of convention. \u274f Django's modules are bulky. \u274f Django is completely based on Django ORM. \u274f Components are deployed together.</p>"},{"location":"Django/interviews/#what-is-the-django-shortcut-method-to-more-easily-render-an-html-response","title":"What is the Django shortcut method to more easily render an HTML response?","text":"<p>Django shortcut method to more easily render an html response is: \" render_to_response</p>"},{"location":"Django/interviews/#what-is-the-difference-between-authentication-and-authorization-in-django","title":"What is the difference between Authentication and Authorization in Django?","text":"<p>Authentication - Who Are You? Authorization - What Permissions Do You Have? Authentication is the process of verifying who someone is, whereas Authorization is the process of verifying what specific applications, files, and data a user has access to. Authentication is the process or action of verifying the identity of a user or process.</p> <p>S.No Authentication Authorization</p> <ol> <li>In authentication process, the identity of users are checked for providing the access to the system. While in authorization process, person\u2019s or user\u2019s authorities are checked for accessing the resources.</li> <li>In authentication process, users or persons are verified. While in this process, users or persons are validated.</li> <li>It is done before the authorization process. While this process is done after the authentication process.</li> <li>It needs usually user\u2019s login details. While it needs user\u2019s privilege or security levels.</li> <li>Authentication determines whether the person is user or not. While it determines What permission do user have? Source- https://www.geeksforgeeks.org/difference-between-authentication-and-authorization/</li> </ol> <p>What Is Token Based Authentication System ? A token based authentication system is a security system that authenticates the users who attempt to log in to a server, a network, or some other secure system, using a security token provided by the server</p>"},{"location":"Django/interviews/#what-is-djangoshortcutsrender-function","title":"What is django.shortcuts.render function?","text":"<p>When a view function returns a webpage as HttpResponse instead of a simple string, we use render(). \u274f Render function is a shortcut function that lets the developer easily pass the data dictionary with the template. \u274f This function then combines the template with a data dictionary via templating engine. \u274f Finally, this render() returns as HttpResponse with the rendered text, which is the data returned by models. \u274f Thus, Django render() bypasses most of the developer\u2019s work and lets him use different template engines. \u274f The basic syntax: render(request, template_name, context=None, content_type=None, status=None, using=None) The request is the parameter that generates the response. The template name is the HTML template used. The context is a dict of the data passed on the page from the python. You can also specify the content type, The status of the data you passed, And the render you are returning.</p>"},{"location":"Django/interviews/#explain-q-objects-in-django-orm","title":"Explain Q objects in Django ORM?","text":"<p>Q object django.db.models.Q is an object to encapsulate a collection of keyword arguments specified as FIELD LOOKUPS. Q objects are used to write complex queries, as in filter() functions just \"AND\" the conditions while if you want to \"OR\" the conditions you can use Q objects. Let\u2019s see an example:</p> <pre><code>from django.db import models\nfrom django.db.models import Q\nModels.objects.get( Q(question__startswith='When'), Q(answer__startswith='On') | Q(answer__startswith='At') )\n</code></pre> <p>[Q Objects can be combined with the help of the | and &amp; operators to get a new Q Object] This is equivalent to the following SQL WHERE Clause: SELECT * FROM Model WHERE question LIKE \u2018When%\u2019 And (answer=\"On%\" OR answer=\"At%\")</p>"},{"location":"Django/interviews/#what-is-the-significance-of-the-managepy-file-in-django","title":"What is the significance of the manage.py file in Django?","text":"<p>The manage.py file is automatically generated whenever you create a project. \u274f This is basically a command-line utility that helps you to interact with your Django project in various ways. \u274f It does the same things as django-admin but along with that, it also sets the DJANGO_SETTINGS_MODULE environment variable in order to point to your project\u2019s settings. \u274f When Django server is started, the manage.py file searches for settings.py file, which contains information of all the applications installed in the project, middleware used, database connections and path to the main urls config.</p>"},{"location":"Django/interviews/#what-is-the-use-of-the-include-function-in-the-urlspy-file-in-django","title":"What is the use of the include function in the urls.py file in Django?","text":"<p>As in Django there can be many apps, each app may have some URLs that it responds to. \u274f Rather than registering all URLs for all apps in a single urls.py file, each app maintains its own urls.py file, and in the project\u2019s urls.py file we use each individual urls.py file of each app by using the include function. nitman -- urls.py</p> <pre><code>from django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\npath('admin/', admin.site.urls),\npath('nitapp/', include('nitapp.urls')),\npath('myapp/', include('myapp.urls')),\n]\nnitapp -- urls.py\n\nfrom django.urls import path\nfrom . import views\nurlpatterns = [\npath('', views.index), # nitapp homepage\n]\nmyapp -- urls.py\n\nfrom django.urls import path\nfrom . import views\nurlpatterns = [\npath('', views.index), # myapp homepage\n]\n</code></pre>"},{"location":"Django/interviews/#what-does-include-do-in-django","title":"What does {% include %} do in Django?","text":"<p>It loads a template and renders it with the current context. \u274f This is a way of \u201cincluding\u201d other templates within a template. \u274f The template name can either be a variable or a hard-coded (quoted) string, in either single or double quotes. Syntax: {% include \"template_name.html\" %} Example: {% include \"poll/base.html\" %}</p> <p>Now create a view through which we will access the template, In nitman/views.py,</p> <pre><code># import Http Response from django\n\nfrom django.shortcuts import render\n\n# create a function\n\ndef render_view(request):\n\n# return response\n\nreturn render(request, \"nitman.html\")\nCreate a url path to map to this view. In nitman/urls.py,\nfrom django.urls import path\n\n# importing views from views.py\n\nfrom .views import render_view\nurlpatterns = [\npath('', render_view), ]\nNow we will create three templates to demonstrate\ninclude tag. Create a base template in nitman.html,\n&lt;html&gt;\n&lt;!-- Include header --&gt;\n{% include \"component1.html\" %}\n&lt;h4&gt;Body Here&lt;/h4&gt;\n&lt;!-- Include Footer --&gt;\n{% include \"component2.html\" %}\n&lt;/html&gt;\nCreate two components in\ntemplates/component1.html\n&lt;!-- component1.html --&gt;\n&lt;h2&gt; Header Here &lt;/h2&gt;&gt;\nand templates/component2.html\n&lt;!-- component2.html --&gt;\n&lt;h4&gt;Footer here&lt;/h4&gt;\n</code></pre> <p>OUTPUT: Header Here Body Here Footer here</p>"},{"location":"Django/interviews/#what-is-django-rest-frameworkdrf","title":"What is Django Rest Framework(DRF)?","text":"<p>Django Rest Framework (DRF) is a powerful module for building web APIs. \u274f The Django Rest Framework (DRF) is a framework that helps you quickly create RESTful APIs. \u274f It\u2019s very easy to build model-backed APIs that have authentication policies and are browsable. \u274f RESTful APIs are perfect for web applications since they use low bandwidth and are designed such that they work well with communications over the Internet like GET, POST, PUT, etc. \u274f DRF is especially useful if we have an existing Django web application and we wish to quickly generate an API for it. The following are the significant reasons that are making REST framework perfect choice:</p> <ol> <li>Web browsable API</li> <li>Serialization</li> <li>Authentication policies</li> <li>Extensive documentation and excellent community support.</li> <li>Perfect for web apps since they have low bandwidth.</li> </ol>"},{"location":"Django/interviews/#what-is-a-middleware-in-django","title":"What is a Middleware in Django?","text":"<p>Middleware is something that executes between the request and response. \u274f In simple words, you can say it acts as a bridge between the request and response. \u274f Middleware in the Django framework is the component that operates on request and transfers it to the view and before passing it to the template engine, it starts operating on a response. \u274f Django provides various built-in middleware and also allows us to write our own middleware.</p> <p>// settings.py</p> <pre><code>MIDDLEWARE = [\n'django.middleware.security.SecurityMiddleware',\n'django.contrib.sessions.middleware.SessionMiddleware',\n'django.middleware.common.CommonMiddleware',\n'django.middleware.csrf.CsrfViewMiddleware',\n'django.contrib.auth.middleware.AuthenticationMiddleware',\n'django.contrib.messages.middleware.MessageMiddleware',\n'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n</code></pre> <p>Some usage of Middlewares in Django is: \u274f Session management, \u274f Use authentication \u274f Cross-site request forgery protection(CSRF) \u274f Content Gzipping</p>"},{"location":"Django/interviews/#what-is-a-session-in-django","title":"What is a session in Django?","text":"<p>Sessions are fully supported in Django. \u274f Using the session framework, you can easily store and retrieve arbitrary data based on the per-site-visitors. \u274f This framework basically stores data on the server-side and takes care of sending and receiving cookies. \u274f These cookies consist of a session ID but not the actual data itself unless you explicitly use a cookie-based backend. \u274f A session is a mechanism to store information on the server side during the interaction with the web application. \u274f By default, session stores in the database and also allows file-based and cache based sessions.</p>"},{"location":"Django/interviews/#what-are-django-signals","title":"What are Django Signals?","text":"<p>Django consists of a signal dispatcher that helps allow decoupled applications to get notified when actions occur elsewhere in the framework. \u274f Django provides a set of built-in signals that basically allow senders to notify a set of receivers when some action is executed. \u274f They\u2019re especially useful when many pieces of code may be interested in the same events. Two important parameters in signals are as follows: Receiver: It specifies the callback function which connected to the signal. Sender: It specifies a particular sender from where a signal is received. Two key elements the Senders and the receivers are in the signals machinery. The sender is responsible to dispatch a signal, and the receiver is the one who receives this signal and then performs something.</p> <p>List of built-in signals in the models: Signals Description django.db.models.pre_init &amp; django.db.models.post_init Sent before or after a models\u2019s init() method is called django.db.models.signals.pre_save &amp; django.db.models.signals.post_save Sent before or after a model\u2019s save() method is called django.db.models.signals.pre_delete &amp; django.db.models.signals.post_delete Sent before or after a models\u2019 delete() method or queryset delete() method is called django.db.models.signals.m2m_changed Sent when a ManyToManyField is changed django.core.signals.request_started &amp; django.core.signals.request_finished Sent when an HTTP request is started or finished</p>"},{"location":"Django/interviews/#what-is-the-context-in-django","title":"What is the context in Django?","text":"<p>\u274f A context in Django is a dictionary, in which keys represent variable names and values represent their values. This dictionary (context) is passed to the template which then uses the variables to output the dynamic content. \u274f A context is a variable name -&gt; variable value mapping that is passed to a template. \u274f Context processors let you specify a number of variables that get set in each context automatically \u2013 without you having to specify the variables in each render() call.</p>"},{"location":"Django/interviews/#what-are-django-exceptions","title":"What are Django exceptions?","text":"<p>Django Exceptions: An exception is an abnormal event that leads to program failure. Django uses its exception classes and python exceptions as well to deal with such situations.</p> <ol> <li>Django Exception classes: We define Django core exceptions in \"Django.core.exceptions\". AppRegistryNotReady: This class raises for using models before loading the app process. ObjectDoesNotExist: It\u2019s a base class for DoesNotExist exceptions. EmptyResultSet: This exception arises when the query fails to return results. FieldDoesNotExist: When the requested file does not exist, this exception arises. MultipleObjectsReturned: It raises by the query multiple objects returned when we expect only one object. SuspiciousOperation: It raises when the user has performed some operation, which is considered suspicious from a security perspective. PermissionDenied: It arises when a user does not have permission to execute a specific action requested. ViewDoesNotExist: When the requested view does not exist, this exception raises. MiddlewareNotUsed: When there is no middleware in server configuration, this exception arises. ImproperlyConfigured: When Django configuration is improper, this exception arises. FieldError: When there is a problem with the model field, this exception arises. ValidationError: It raises when data validation fails. Source: https://www.javatpoint.com/django-exceptions</li> </ol> <p>2) Django URL Resolver Exceptions: These exceptions are defined in django.urls module. Resolver404: This exception raised when the path passed to resolve() function does not map to a view. NoReverseMatch: It is raised when a matching URL in your URLconf cannot be identified based on the parameters supplied. 3) Django Database Exceptions: The following exceptions are defined in django.db module. DatabaseError: It occurs when the database is not available. IntegrityError: It occurs when an insertion query executes. DataError: It raises when data related issues come into the database. 4) Django Http Exceptions: The following exceptions are defined in django.http module. UnreadablePostError: It is raised when a user cancels an upload. 5) Django Transaction Exceptions: The transaction exceptions are defined in django.db.transaction. TransactionManagementError: It is raised for any and all problems related to database transactions. Common Questions: 16 What Are Django Exceptions? Source: https://www.javatpoint.com/django-exceptions</p>"},{"location":"Django/interviews/#rarelyadvanced-questions-1-11-ques-ans","title":"Rarely/advanced Questions (1-11 Ques-Ans)","text":""},{"location":"Django/interviews/#what-happens-if-myobjectobjectsget-is-called-with-parameters-that-do-not-match-an-existing-item-in-the-database","title":"What happens if MyObject.objects.get() is called with parameters that do not match an existing item in the database?","text":"<p>MyObject.objects.get(id=\"nitin\") \u274f Basically use get() when you want to get a single unique object, and get() throws an error if there\u2019s no object matching the query. \u274f If there are no results that match the query, get() will raise a DoesNotExist exception. \u274f If more than one item matches the given get() query then it\u2019ll raise MultipleObjectsReturned, which is also an attribute of the model class itself.</p>"},{"location":"Django/interviews/#how-to-make-a-variable-available-to-all-the-templates","title":"How to make a variable available to all the templates?","text":"<p>What you want is a context processor, and it's very easy to create one. Assuming you have an app named custom_app, follow the next steps: \u25cf Add custom_app to INSTALLED_APPS in settings.py (you've done it already, right?); \u25cf Create a context_processors.py into custom_app folder; \u25cf Add the following code to that new file: def categories_processor(request): categories = Category.objects.all() return {'categories': categories} \u25cf Add context_processors.py to TEMPLATE_CONTEXT_PROCESSORS in settings.py TEMPLATE_CONTEXT_PROCESSORS += (\"custom_app.context_processors.categories_processor\", ) And now you can use {{categories}} in all the templates As of Django 1.8 To add a TEMPLATE_CONTEXT_PROCESSORS, in the settings you must add the next code: TEMPLATES[0]['OPTIONS']['context_processors'].append(\"custom_app.context_processors.categories_proce ssor\") Or include that string directly in the OPTIONS.context_processors key in your TEMPLATES setting. Source:- https://stackoverflow.com/questions/17901341/django-how-to-make-a-variable-available-to-all-templates</p> <p>What you want is a context processor, and it's very easy to create one. Assuming you have an app named custom_app, follow the next steps: \u25cf Add custom_app to INSTALLED_APPS in settings.py (you've done it already, right?); \u25cf Create a context_processors.py into custom_app folder; \u25cf Add the following code to that new file: def categories_processor(request): categories = Category.objects.all() return {'categories': categories} \u25cf Add context_processors.py to TEMPLATE_CONTEXT_PROCESSORS in settings.py TEMPLATE_CONTEXT_PROCESSORS += (\"custom_app.context_processors.categories_processor\", ) And now you can use {{categories}} in all the templates As of Django 1.8 To add a TEMPLATE_CONTEXT_PROCESSORS, in the settings you must add the next code: TEMPLATES[0]['OPTIONS']['context_processors'].append(\"custom_ap p.context_processors.categories_processor\") Or include that string directly in the OPTIONS.context_processors key in your TEMPLATES setting. Source:- https://stackoverflow.com/questions/17901341/django-how-to-make-a-variable-available-to-all</p> <p></p>"},{"location":"Django/interviews/#why-does-django-use-regular-expressions-to-define-urls-is-it-necessary-to-use-them","title":"Why does Django use regular expressions to define URLs? Is it necessary to use them?","text":"<p>Django uses a very powerful format for storing URLs, that is regular expressions.</p> <p>\u274f RegEx or regular expression is the format for sophisticated string searching algorithms. \u274f It makes the searching process faster. Although it\u2019s not necessary to use RegEx when defining URLs. \u274f They can be defined as normal string also, Django server should still be able to match them, but when you need to pass some data from the user via URL, then RegEx is used. \u274f The RegEx also makes much cleaner URLs then other formats.</p> <p>Example:</p> <pre><code>urlpatterns = [\npath('articles/2003/', views.special_case_2003), #1\npath('articles/&lt;int:year&gt;/', views.year_archive),#2\npath('articles/&lt;int:year&gt;/&lt;int:month&gt;/', views.month_archive), #3\npath('articles/&lt;int:year&gt;/&lt;int:month&gt;/&lt;slug:slug&gt;/', views.article_detail),#4\n]\n</code></pre> <p>Links: https://raturi.in/blog/designing-django-urls-best-practices/</p>"},{"location":"Django/interviews/#difference-between-django-onetoonefield-and-foreignkey-field","title":"Difference between Django OneToOneField and ForeignKey Field?","text":"<p>ForeignKey Field: A many-to-one relationship. Requires two positional arguments: the class to which the model is related and the on_delete option. OneToOneField: A one-to-one relationship. Conceptually, this is similar to a ForeignKey with unique=True, but the \u201creverse\u201d side of the relation will directly return a single object. Links: https://stackoverflow.com/questions/5870537/whats-the-difference-between-django-onetoonefield -and-foreignkey</p>"},{"location":"Django/interviews/#briefly-explain-django-field-class-and-its-types","title":"Briefly explain Django Field Class and its types","text":"<p>\u2018Field\u2019 is basically an abstract class that actually represents a column in the database table. \u274f The Field class, is in turn, a subclass of RegisterLookupMixin. \u274f In Django, these fields are used to create database tables (db_type()) which are used to map Python types to the database using get_prep_value() and vice versa using from_db_value() method. \u274f Therefore, fields are fundamental pieces in different Django APIs such as models and querysets. The Django field class types specify: \u274f The column type, which tells the database what kind of data to store (e.g. INTEGER, VARCHAR, TEXT). \u274f The default HTML widget to use when rendering a form field (e.g. , ). \u274f The minimal validation requirements, used in Django\u2019s admin and in automatically-generated forms."},{"location":"Django/interviews/#explain-how-you-can-use-file-based-sessions","title":"Explain how you can use file-based sessions?","text":"<p>To use the file-based sessions, you need to set the SESSION_ENGINE settings to \"django.contrib.sessions.backends.file\"</p>"},{"location":"Django/interviews/#what-is-jinja-templating","title":"What is Jinja templating?","text":"<p>Jinja Templating is a very popular templating engine for Python, the latest version in the market is Jinja 2. There are some features of Jinja templating that make it a better option than the default template system in Django.</p> <ul> <li>Sandbox Execution \u2013 This is like a sandbox or a protected framework for automating the testing process.</li> <li>HTML Escaping \u2013 Jinja 2 provides automatic HTML Escaping, as &lt;, &gt;, &amp; characters have special values in templates and if used as regular text, these symbols can lead to XSS Attacks which Jinja deals with automatically.</li> <li>Template Inheritance</li> <li>Generates HTML templates much faster than default engine</li> <li>Easier to debug, compared to default engine.</li> </ul>"},{"location":"Django/interviews/#what-is-serialization-in-django","title":"What is serialization in Django?","text":"<p>Serialization is the process of converting Django models into other formats such as XML, JSON, etc. Links: https://docs.djangoproject.com/en/4.0/topics/serialization/ https://opensource.com/article/20/11/django-rest-framework-serializers</p>"},{"location":"Django/interviews/#what-are-generic-views","title":"What are generic views?","text":"<p>When building a web application there are certain kind of views that we build again and again, such as a view that displays all records in the database (e.g., displaying all books in the books table), etc.</p> <p>\u274f These kinds of views perform the same functions and lead to repeated code. \u274f To solve this issue, Django uses class-based generic views. \u274f When using generic views, all we have to do is inherit the desired class from</p> <p>django.views.generic module and provide some information like model, context_object_name, etc</p> <p>Source: https://www.tutorialspoint.com/django/django_generic_views.htm</p>"},{"location":"Django/interviews/#what-is-mixin","title":"What is mixin?","text":"<p>Mixin is a type of multiple inheritance wherein you can combine behaviors and attributes of more than one parent class.</p> <ul> <li>Mixins provide an excellent way to reuse code from multiple classes.</li> <li>There are two main situations where mixins are used: to provide a lot of optional features for a class and to use one particular feature in a lot of different classes</li> </ul> <p>For example, generic class-based views consist of a mixin called TemplateResponseMixin whose purpose is to define render_to_response() method. When this is combined with a class present in the View, the result will be a TemplateView class. One drawback of using these mixins is that it becomes difficult to analyze what a child class is doing and which methods to override in case of its code being too scattered between multiple classes. Django provides a number of mixins that provide more discrete functionality.</p> <p>Different type of mixins are -</p> <ul> <li>ContextMixin -&gt; A dictionary to include in the context and is a convenient way of specifying the simple context in as_view(). TemplateResponseMixin - Given a suitable context, TemplateResponseMixin provides a mechanism to construct a TemplateRespons and the template to use is configurable and can be further customized by a subclass.</li> <li>SingleObjectMixin -&gt; SingleObjetMixin provides a mechanism for looking up an object associated with the current HTTP request.</li> <li>SingleObjectTemplateMixin -&gt; SingleObjetTemplateMixin performs template base response rendering for view that operate upon a single object instance.</li> <li>MutlipleObjectMixin -&gt; MultipleObjectMixin used to display list of objects</li> </ul>"},{"location":"Django/interviews/#explain-the-caching-strategies-in-django","title":"Explain the caching strategies in Django?","text":"<p>Caching refers to the technique of storing the output results when they are processed initially so that next time when the same results are fetched again, instead of processing again those already stored results can be used, which leads to faster accessing as well us less resource utilization.</p> <ul> <li>Django provides us with a robust cache system that is able to store dynamic web pages so that these pages don\u2019t need to be evaluated again for each request.</li> </ul> <p>Few caching strategies that are available in Django are as follows:</p> <ul> <li> <p>Memcached Caching: The gold standard for caching. An in-memory service that can return keys at a very fast rate. Not a good choice if your keys are very large in size</p> </li> <li> <p>Redis: A good alternative to Memcached when you want to cache very large keys (for example, large chunks of rendered JSON for an API)</p> </li> <li> <p>Dynamodb Caching: Another good alternative to Memcached when you want to cache very large keys. Also scales very well with little IT overhead.</p> </li> <li>Localmem Caching: Only use for local testing; don\u2019t go into production with this cache type.</li> <li>Database Caching: It\u2019s rare that you\u2019ll find a use case where the database caching makes sense. It may be useful for local testing, but otherwise, avoid it.</li> <li>File system Caching: Can be a trap. Although reading and writing files can be faster than making SQL queries, it has some pitfalls. Each cache is local to the application server (not shared), and if you have a lot of cache keys, you can theoretically hit the file system limit for the number of files allowed.</li> <li>Dummy Caching: A great backend to use for local testing when you want your data changes to be made immediately without caching. Be warned: permanently using dummy caching locally can hide bugs from you until they hit an environment where caching is enabled. Content delivery networks</li> </ul>"},{"location":"Django/interviews/#why-do-you-use-crsf_tken","title":"Why do you use crsf_tken?","text":"<ul> <li>To validate token, for security purpose</li> <li> <p>The {% csrf_token %} template tag in HTML is used to protect your web application from cross site Request Forgery (CSRF) attack. It work by embedding a unique token in HTML from each user session, ensureing that from submition comes from authorized sources (ie. your website) and not from a malicious actor</p> </li> <li> <p>forgery: Fake</p> </li> </ul>"},{"location":"Django/interviews/#can-you-explain-how-we-can-use-django-middleware-for-loggin-purpose-code-level","title":"Can you explain how we can use django middleware for loggin purpose code level?","text":"<pre><code>import loggin\nimport time\n\nlogger = logging.getLogger(name)\n\nclass LoggingMiddleware:\n    def init(self, get_response):\n        self.get_response = get_response\n\n    def __call__(self, request):\n        # Log request deals before processing\n\n        start_time = time.time()\n        logger.info(f\"Incoming request: {request.method} {request.path}\")\n        logger.info(f\"Headers: {dict(request.header)}\")\n\n        # Oricess the request\n        response = self.get_request(request)\n\n        # Log response details after processing\n\n        duratoin = time.time() - start_time\n        logger.info(f\"Response status: {response.status_code}\")\n        logger.infor(f\"Processing time: {duration:.2f} seconds\")\n        return response\n</code></pre>"},{"location":"Django/interviews/#are-you-implimented-any-middleware-and-explain-that","title":"Are you implimented any middleware and explain that?","text":"<p>To customize object module based on site_id</p>"},{"location":"Django/interviews/#are-you-implimetted-any-decorators-in-real-time","title":"Are you implimetted any decorators in real time?","text":"<ul> <li>Logging decorator</li> <li>validator purpose</li> <li>authentication and authorization purpose.</li> </ul>"},{"location":"Django/interviews/#how-to-set-enviroment-variables-in-python","title":"How to set enviroment variables in python?","text":"<pre><code>import os\n\nos.environ['aws_db'] = 'val' # 1st approch\nos.environ.setdefault('env1','env2') # 2nd approch\n</code></pre>"},{"location":"Django/interviews/#how-you-securing-you-database-credentials","title":"How you securing you database credentials ?","text":"<p>Using envroment variables and aws secreate manger</p> <ul> <li>giving required permisions to aws lambda</li> </ul>"},{"location":"Django/interviews/#how-do-you-initialize-a-django-app","title":"How do you initialize a django app?","text":"<p>use the startapp comand to create app</p> <p><code>python manage.py startapp app_name</code></p> <p>App Structure</p> <ul> <li>apps.py: Configurations for the app</li> <li>models.py: Define the database structure</li> <li>views.py: Handle logic for user requests.</li> <li>urls.py: (manually added) Define app-specificmURL routes.</li> <li>migrations: Contains database migration files.</li> <li>tests.py: Write test for the app</li> <li>admin.py: Register models for Django's admin panel.</li> </ul> <p>Register the app in the project</p> <ul> <li>Open setting.py in your project directory add your app to the INSTALLED_APPS list:</li> </ul> <pre><code>INSTALLED_APP = [\n    'django.contrib.admin',\n\n\n    'app_name'\n]\n</code></pre>"},{"location":"Django/interviews/#explain-the-settingspy-file-in-django","title":"Explain the settings.py File in Django","text":"<ul> <li>The <code>setting.py</code> file configuration center of a Django project.</li> <li>It defines all the global settings required for the project to run.</li> </ul> <p>Purpose of settings.py</p> <p>stores configurations like</p> <ul> <li>installed app</li> <li>Database connections</li> <li>Middleware.</li> <li>Static and media file managment</li> </ul>"},{"location":"FastApi/","title":"FastAPI","text":"<p>FastAPI is a modern, high-performance, batteries-included Python web framework that's perfect for building RESTful APIs. It can handle both synchronous and asynchronous requests and has built-in support for data validation, JSON serialization, authentication and authorization, and OpenAPI (version 3.0.2 as of writing) documentation.</p> <p>Highlights:</p> <ol> <li>It takes advantage of Python type hints for parameter declaration which enables data validation (via Pydantic) and OpenAPI/Swagger documentation.</li> <li>Built on top of Starlette, it supports the development of asynchronous APIs.</li> <li>It's fast. Since async is much more efficient than the traditional synchronous threading model, it can compete with Node and Go with regards to performance.</li> </ol> <p>You should now have:</p> <pre><code>fastapi-crud\n    \u251c\u2500\u2500 docker-compose.yml\n    \u2514\u2500\u2500 src\n        \u251c\u2500\u2500 Dockerfile\n        \u251c\u2500\u2500 app\n        \u2502   \u251c\u2500\u2500 __init__.py\n        \u2502   \u2514\u2500\u2500 main.py\n        \u2514\u2500\u2500 requirements.txt\n</code></pre> <p>Unlike Django or Flask, FastAPI does not have a built-in development server. So, we'll use Uvicorn, an ASGI server, to serve up FastAPI.</p> <p>Then, within main.py, create a new instance of FastAPI and set up a sanity check route:</p> <pre><code>from fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/ping\")\ndef pong():\n    return {\"ping\": \"pong!\"}\n</code></pre> <p>Install Docker, if you don't already have it, and then update the Dockerfile in the \"src\" directory:</p> <pre><code># pull official base image\nFROM python:3.11.0-alpine\n\n# set work directory\nWORKDIR /usr/src/app\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# copy requirements file\nCOPY ./requirements.txt /usr/src/app/requirements.txt\n\n# install dependencies\nRUN set -eux \\\n    &amp;&amp; apk add --no-cache --virtual .build-deps build-base \\\n         openssl-dev libffi-dev gcc musl-dev python3-dev \\\n    &amp;&amp; pip install --upgrade pip setuptools wheel \\\n    &amp;&amp; pip install -r /usr/src/app/requirements.txt \\\n    &amp;&amp; rm -rf /root/.cache/pip\n\n# copy project\nCOPY . /usr/src/app/\n</code></pre> <p>So, we started with an Alpine-based Docker image for Python 3.11.0. We then set a working directory along with two environment variables:</p> <p><code>PYTHONDONTWRITEBYTECODE</code>: Prevents Python from writing pyc files to disc (equivalent to python -B option) <code>PYTHONUNBUFFERED</code>: Prevents Python from buffering stdout and stderr (equivalent to python -u option)</p> <p>Next, add the following to the docker-compose.yml file in the project root:</p> <pre><code>version: '3.8'\n\nservices:\n  web:\n    build: ./src\n    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000\n    volumes:\n      - ./src/:/usr/src/app/\n    ports:\n      - 8002:8000\n</code></pre> <p>So, when the container spins up, Uvicorn will run with the following settings:</p> <ol> <li>--reload enables auto-reload so the server will restart after changes are made to the code base.</li> <li>--workers 1 provides a single worker process.</li> <li>--host 0.0.0.0 defines the address to host the server on.</li> <li>--port 8000 defines the port to host the server on.</li> </ol> <p><code>app.main:app</code> tells Uvicorn where it can find the FastAPI ASGI application -- i.e., \"within the 'app' module, you'll find the ASGI app, <code>app = FastAPI()</code>, in the 'main.py' file.</p> <p>Build the image and spin up the container:</p> <pre><code>docker-compose up -d --build\n</code></pre> <p>Navigate to http://localhost:8002/ping. You should see:</p> <pre><code>{\n  \"ping\": \"pong!\"\n}\n</code></pre> <p>You'll also be able to view the interactive API documentation, powered by Swagger UI, at http://localhost:8002/docs:</p> <p></p>"},{"location":"FastApi/#test-setup","title":"Test Setup","text":""},{"location":"FastApi/3rdpart/","title":"Third-party Services","text":"<p>third-party services in your FastAPI application -- e.g., Zapier, SendGrid, and Stripe, to name a few</p> <p>Most services expose some sort of RESTful API to call or send notifications to your application via webhooks</p> <p>When implementing a new service, it's important that you don't decrease the overall performance of your web application by blocking the main web process.</p> <pre><code>The logic introduced in this chapter can be used for any time-consuming work that you'd like handled in the background outside the normal request/response flow.\n</code></pre>"},{"location":"FastApi/3rdpart/#objectives","title":"Objectives","text":"<ol> <li>Process form submissions with a Celery worker</li> <li>Handle complicated logic triggered by a webhook notification with a Celery worker</li> <li>Retry a failed Celery task with the retry method</li> </ol>"},{"location":"FastApi/3rdpart/#problem-1-blocking-web-process","title":"Problem 1: Blocking Web Process","text":"<p>Say you have an API that lets users subscribe to your newsletter. In the view, you grab the provided email address, and send it to a third-party email marketing API like MailChimp or ConvertKit.</p> <pre><code>import random\n\nimport requests\n\ndef subscribe_user(email: str):\n    # used for testing a failed api call\n    if random.choice([0, 1]):\n        raise Exception('random processing error')\n\n    # used for simulating a call to a third-party email marketing api\n    requests.post('https://httpbin.org/delay/5')\n\n\n@users_router.post(\"/form/\")\ndef subscribe(payload: Body(...)):\n    subscribe_user(payload[\"email\"])\n    return {\"message\": \"thanks\"}\n</code></pre> <p>So, we have a view which mimics a call to a third-party email marketing API with requests.post('https://httpbin.org/delay/5'). This view could degrade performance if you're sustaining heavy traffic.</p> <p>If you're running three Uvicorn workers with Gunicorn then you'll have three worker processes available to process each HTTP request to that entrypoint. If three users submit at the same time, all three processes might be blocked for at least five seconds.</p> <p>Since requests is a synchronous library, one solution is to switch to a library that leverages asyncio, such as httpx or aiohttp. But in some cases, the third-party SDK is built without asyncio, so Celery is better option.</p>"},{"location":"FastApi/3rdpart/#enter-celery","title":"Enter Celery","text":"<p>If you need to call a third-party API within a view, you can move the actual call to an asynchronous Celery task to prevent the web process from being blocked.</p> <p>Full workflow:</p> <ol> <li>You'll want to use JavaScript to hijack the form submission and then send the data to the server via an AJAX request.</li> <li>Within the FastAPI view, enqueue a new task (which takes the submitted email and calls the external API) and return the task ID in the response back to the client.</li> <li>You'll then use that task ID to continue to check the state of the task via another AJAX request.</li> <li>When the task finishes, you should then display the appropriate message based on whether the task succeeds or fails.</li> </ol> <p>Rather than introducing a polling mechanism (calling the API in a loop, checking the status of the task), you could use WebSockets or HTTP/2 to \"push\" the response from the server to the client after the task finishes executing</p> <p>If you're using an API to process a payment or modify a user submitted file via an external service, then you should definitely use this full workflow.</p>"},{"location":"FastApi/3rdpart/#implementation","title":"Implementation","text":"<pre><code>import logging\nimport random\n\nimport requests\nfrom celery.result import AsyncResult\nfrom fastapi import FastAPI, Request, Body\nfrom fastapi.responses import JSONResponse\nfrom fastapi.templating import Jinja2Templates\n\nfrom . import users_router\nfrom .schemas import UserBody\nfrom .tasks import sample_task\n\n\nlogger = logging.getLogger(__name__)\ntemplates = Jinja2Templates(directory=\"project/users/templates\")\n\n\ndef api_call(email: str):\n    # used for testing a failed api call\n    if random.choice([0, 1]):\n        raise Exception(\"random processing error\")\n\n    # used for simulating a call to a third-party api\n    requests.post(\"https://httpbin.org/delay/5\")\n\n\n@users_router.get(\"/form/\")\ndef form_example_get(request: Request):\n    return templates.TemplateResponse(\"form.html\", {\"request\": request})\n\n\n@users_router.post(\"/form/\")\ndef form_example_post(user_body: UserBody):\n    task = sample_task.delay(user_body.email)\n    return JSONResponse({\"task_id\": task.task_id})\n\n\n@users_router.get(\"/task_status/\")\ndef task_status(task_id: str):\n    task = AsyncResult(task_id)\n    state = task.state\n\n    if state == 'FAILURE':\n        error = str(task.result)\n        response = {\n            'state': state,\n            'error': error,\n        }\n    else:\n        response = {\n            'state': state,\n        }\n    return JSONResponse(response)\n</code></pre> <p>Here, in the form_example_post view, a task called sample_task is enqueued and the task ID is returned. The task_status view can then be used to check the status of the task given the task ID.</p> <p>We used users_router so the routes will be prefixed with /users:</p> <pre><code>/users/form/\n/users/task_status/\n</code></pre> <p><pre><code>@shared_task()\ndef sample_task(email):\n    from project.users.views import api_call\n\n    api_call(email)\n</code></pre> So, in the sample_task task, the email is passed to the api_call helper. The blocking operation in the helper won't block the web process since it will be handled in the background asynchronously.</p> <pre><code>&lt;script&gt;\n  function updateProgress(yourForm, task_id, btnHtml) {\n    fetch(`/users/task_status/?task_id=${task_id}`, {\n      method: 'GET',\n    })\n    .then(response =&gt; response.json())\n    .then((res) =&gt; {\n      const taskStatus = res.state;\n\n      if (['SUCCESS', 'FAILURE'].includes(taskStatus)) {\n        const msg = yourForm.querySelector('#messages');\n        const submitBtn = yourForm.querySelector('button[type=\"submit\"]');\n\n        if (taskStatus === 'SUCCESS') {\n          msg.innerHTML = 'job succeeded';\n        } else if (taskStatus === 'FAILURE') {\n          // display error message on the form\n          msg.innerHTML = res.error;\n        }\n\n        submitBtn.disabled = false;\n        submitBtn.innerHTML = btnHtml;\n      } else {\n        // the task is still running\n        setTimeout(function() {\n          updateProgress(yourForm, task_id, btnHtml);\n        }, 1000);\n      }\n    })\n    .catch((error) =&gt; {\n      console.error('Error:', error)\n    });\n  }\n\n  function serialize(data) {\n    let obj = {};\n    for (let [key, value] of data) {\n      if (obj[key] !== undefined) {\n        if (!Array.isArray(obj[key])) {\n          obj[key] = [obj[key]];\n        }\n        obj[key].push(value);\n      } else {\n        obj[key] = value;\n      }\n    }\n    return obj;\n  }\n\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const yourForm = document.getElementById(\"your-form\");\n    yourForm.addEventListener(\"submit\", function(event) {\n      event.preventDefault();\n      const submitBtn = yourForm.querySelector('button[type=\"submit\"]');\n      const btnHtml = submitBtn.innerHTML;\n      const spinnerHtml = 'Processing...';\n      submitBtn.disabled = true;\n      submitBtn.innerHTML = spinnerHtml;\n\n      const msg = yourForm.querySelector('#messages');\n      msg.innerHTML = '';\n\n      // Get all field data from the form\n      let data = new FormData(yourForm);\n      // Convert to an object\n      let formData = serialize(data);\n\n      fetch('/users/form/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData),\n      })\n      .then(response =&gt; response.json())\n      .then((res) =&gt; {\n        // after we get Celery task id, we start polling\n        const task_id = res.task_id;\n        updateProgress(yourForm, task_id, btnHtml);\n        console.log(res);\n      })\n      .catch((error) =&gt; {\n        console.error('Error:', error)\n      });\n    });\n  });\n&lt;/script&gt;\n</code></pre> <p>Then, add the core JavaScript to send the initial XHR request to kick off the task along with a request to check the status of the request using the task ID:</p> <p>What's happening here?</p> <ol> <li>On form submit, we disabled the submit button and replaced the button text with \"Processing...\", to indicate to the end user that some sort of backend processing is happening. We also serialized the form input values and sent them along with the POST request to /users/form/.</li> <li>When a successful response comes back with the task ID, we passed the ID to the updateProgress function, which calls the /users/task_status/ endpoint. updateProgress continues to call that endpoint every second until the task is completed.</li> <li>Once complete, we displayed the appropriate message, updated the text in the button, and enabled the submit button.</li> </ol>"},{"location":"FastApi/Celery_Beat/","title":"Celery Beat","text":"<p>Celery Beat is a scheduling tool used to enqueue tasks at regular intervals, which are then executed by Celery workers.</p> <p>Responsibilities:</p> <ol> <li>Celery Workers are responsible for picking up tasks from the queue, running them, and returning the results.</li> <li>Celery Beat is responsible for sending tasks to the queue based on the defined config.</li> </ol> <p></p> <p>In production, while you can have multiple workers processing tasks from the queue, you should only have a single Celery Beat process. More than one Celery Beat process will result in duplicate tasks being enqueued. In other words, if you schedule a single task and have two Beat processes, two tasks will be enqueued</p> <pre><code>    CELERY_BEAT_SCHEDULE: dict = {\n        \"task-schedule-work\": {\n            \"task\": \"task_schedule_work\",\n            \"schedule\": 5.0,  # five seconds\n        },\n    }\n</code></pre> <p>The schedule field supports crontab, timedelta, and solar formats.</p> Crontab Expression Description <code>crontab()</code> Execute every minute. <code>crontab(minute=0, hour=0)</code> Execute daily at midnight. <code>crontab(minute=0, hour='*/3')</code> Execute every three hours: midnight, 3am, 6am, 9am, noon, 3pm, 6pm, 9pm. <code>crontab(minute=0, hour='0,3,6,9,12,15,18,21')</code> Same as previous. <code>crontab(minute='*/15')</code> Execute every 15 minutes. <code>crontab(day_of_week='sunday')</code> Execute every minute (!) on Sundays. <code>crontab(minute='*', hour='*', day_of_week='sun')</code> Same as previous. <code>crontab(minute='*/10', hour='3,17,22', day_of_week='thu,fri')</code> Execute every 10 minutes, but only between 3\u20134am, 5\u20136pm, and 10\u201311pm on Thursdays or Fridays. <code>crontab(minute=0, hour='*/2,*/3')</code> Execute every even hour and every hour divisible by 3. Skips: 1am, 5am, 7am, 11am, 1pm, 5pm, 7pm, 11pm. <code>crontab(minute=0, hour='*/5')</code> Execute every hour divisible by 5 (e.g., 15:00/3pm, but not 5pm). <code>crontab(minute=0, hour='*/3,8-17')</code> Execute every hour divisible by 3 and <p>every hour during office hours (8am\u20135pm). |</p> <p>bring down the existing containers and volumes, and then build the new images and spin up the containers again:</p> <p><code>docker compose down -v docker compose up -d --build</code></p>"},{"location":"FastApi/Task%20Routing/","title":"Multiple Queues and Task Routing","text":""},{"location":"FastApi/Task%20Routing/#objectives","title":"Objectives","text":"<ol> <li>Explain how you can route tasks to a specific queue to be processed by a specific worker</li> <li>Control which workers process which tasks</li> <li>Route tasks to specific queues based on priority</li> <li>Dynamically configure task routing rules</li> </ol>"},{"location":"FastApi/Task%20Routing/#background","title":"Background","text":"<p>By default, Celery creates a default queue in your message broker when it's first executed</p> <p>Celery then routes all tasks to that default queue and all Celery workers consume tasks from that queue as well.</p> <p>Celery allows you to spin up additional queues so you can have more control over which workers process which tasks.</p> <p>or example, you could configure two queues: high_priority and low_priority</p> <p>As the names suggest, \"higher\" priority tasks could be routed to the high_priority queue while the low_priority queue handles \"lower\" priority tasks. You can then spin up two workers: one for the high_priority queue and one for the low_priority and default queues.</p> <p></p> <p>It's a good practice to configure at least one additional queue (two total) so you can route slow tasks to one queue and fast tasks to a different queue so that slow tasks don't block the fast tasks.</p> <p>Configuration</p> <pre><code>import os\nimport pathlib\nfrom functools import lru_cache\n\nfrom kombu import Queue\n\n\nclass BaseConfig:\n    BASE_DIR: pathlib.Path = pathlib.Path(__file__).parent.parent\n\n    DATABASE_URL: str = os.environ.get(\"DATABASE_URL\", f\"sqlite:///{BASE_DIR}/db.sqlite3\")\n    DATABASE_CONNECT_DICT: dict = {}\n\n    CELERY_BROKER_URL: str = os.environ.get(\"CELERY_BROKER_URL\", \"redis://127.0.0.1:6379/0\")\n    CELERY_RESULT_BACKEND: str = os.environ.get(\"CELERY_RESULT_BACKEND\", \"redis://127.0.0.1:6379/0\")\n\n    WS_MESSAGE_QUEUE: str = os.environ.get(\"WS_MESSAGE_QUEUE\", \"redis://127.0.0.1:6379/0\")\n\n    CELERY_BEAT_SCHEDULE: dict = {\n        # \"task-schedule-work\": {\n        #     \"task\": \"task_schedule_work\",\n        #     \"schedule\": 5.0,  # five seconds\n        # },\n    }\n\n    CELERY_TASK_DEFAULT_QUEUE = 'default'\n\n    # Force all queues to be explicitly listed in `CELERY_TASK_QUEUES` to help prevent typos\n    CELERY_TASK_CREATE_MISSING_QUEUES = False\n\n    CELERY_TASK_QUEUES = (\n        # need to define default queue here or exception would be raised\n        Queue('default'),\n\n        Queue('high_priority'),\n        Queue('low_priority'),\n    )\n\n\nclass DevelopmentConfig(BaseConfig):\n    pass\n\n\nclass ProductionConfig(BaseConfig):\n    pass\n\n\nclass TestingConfig(BaseConfig):\n    pass\n\n\n@lru_cache()\ndef get_settings():\n    config_cls_dict = {\n        \"development\": DevelopmentConfig,\n        \"production\": ProductionConfig,\n        \"testing\": TestingConfig\n    }\n\n    config_name = os.environ.get(\"FASTAPI_CONFIG\", \"development\")\n    config_cls = config_cls_dict[config_name]\n    return config_cls()\n\n\nsettings = get_settings()\n</code></pre> <ol> <li>The Celery default queue name is celery. Here, we used CELERY_TASK_DEFAULT_QUEUE to change the name to default to prevent confusion.</li> <li>CELERY_TASK_CREATE_MISSING_QUEUES: bool = False prevents Celery from auto-creating queues for us that we don't have defined in CELERY_TASK_QUEUES. This forces us to be more explicit by adding all the queues that we want created (even the default queue) to CELERY_TASK_QUEUES. You'll see an example of this shortly.</li> <li>In CELERY_TASK_QUEUES, we added the default queue along with two new queues: high_priority and low_priority.</li> </ol> <p>Kombu is a messaging library that Celery leverages</p> <p><pre><code>#!/bin/bash\n\nset -o errexit\nset -o nounset\n\n# celery -A main.celery worker --loglevel=info\n\nwatchfiles \\\n  --filter python \\\n  'celery -A main.celery worker --loglevel=info -Q high_priority,default'        # update\n</code></pre> Here, we added the -Q option to the command to specify the queues enabled (high_priority and default) for the worker.</p> <p><code>docker compose down -v</code> is used to stop and remove all the containers, networks, and volumes created by docker-compose.</p>"},{"location":"FastApi/WebSockets%20and%20Celery/","title":"WebSockets and Celery","text":"<p>we used XHR short polling to check the task status.</p> <p>Short polling can be wasteful since it creates a lot of connections and queries. Plus, depending on the polling interval, there could be a delay between the task completing and the client updating.</p>"},{"location":"FastApi/WebSockets%20and%20Celery/#objectives","title":"Objectives","text":"<ol> <li>Use Broadcaster to handle multi-process notification via Redis pub/sub</li> <li>Explain what asyncio is</li> <li>Convert async to sync with asgiref</li> </ol>"},{"location":"FastApi/WebSockets%20and%20Celery/#websocket","title":"WebSocket","text":"<p>WebSocket is a computer communications protocol, providing full-duplex communication channels over a single TCP connection.</p> <p>When a web client establishes a WebSocket connection with a server, the connection stays alive and the client and server can send messages to each other.</p> <p>WebSocket is fully supported by all modern browsers:</p>"},{"location":"FastApi/WebSockets%20and%20Celery/#asgi-vs-wsgi","title":"ASGI vs WSGI","text":"<pre><code>ASGI is a spiritual successor to WSGI, the long-standing Python standard for compatibility between web servers, frameworks, and applications.\n</code></pre> <p>In short, ASGI was created to add support for WebSockets, HTTP/2, and async/await, none of which are supported by WSGI.</p> <p>FastAPI is based on Starlette and already implements the ASGI specification.</p> <p></p> <ol> <li>The client sends an AJAX request to a FastAPI view to trigger a Celery task.</li> <li>FastAPI returns a task_id which can be used to receive messages about the task.</li> <li>The client then uses the task_id to create a WebSocket connection via ws://127.0.0.1:8010/ws/task_status/{task_id}.</li> <li>When the FastAPI view receives the WebSocket request, it subscribes to task_id channel.</li> <li>After the Celery task finishes processing, Celery sends a message to the channel, and all clients subscribed to the channel will receive the message as well.</li> <li>The client closes the WebSocket and displays the result on the page</li> </ol> <p>WS_MESSAGE_QUEUE will be used for multi-process communication by FastAPI and the Celery Worker.</p>"},{"location":"FastApi/WebSockets%20and%20Celery/#broadcaster","title":"Broadcaster","text":"<pre><code>asgiref==3.7.2\nasyncio-redis==0.16.0\nbroadcaster==0.2.0\n</code></pre> <p>asyncio_redis is a Redis client that supports asyncio, which Broadcaster requires.</p> <p>Notes:</p> <ol> <li>We created a new instance of Broadcast, which will be only used by FastAPI, not the Celery worker.</li> <li>In the lifespan function, we established the connection before the application starts up and then disconnected from it when the application shuts down.</li> </ol>"},{"location":"FastApi/WebSockets%20and%20Celery/#router","title":"Router","text":"<p>Notes:</p> <ol> <li>We used @ws_router.websocket(\"/ws/task_status/{task_id}\") to declare a Websocket path. {task_id} is a path parameter.</li> <li>In ws_task_status, we first accepted the connection, and then obtained the task ID. After that, we subscribed to the specific channel and sent the message to the browser if it exists.</li> <li>update_celery_task_status should be called in the Celery worker after the task is finished.</li> <li>The Celery worker will publish the task info to the channel through Redi</li> </ol> <p>Celery Signal Handler</p> <pre><code>@task_postrun.connect\ndef task_postrun_handler(task_id, **kwargs):\n    from project.ws.views import update_celery_task_status\n    async_to_sync(update_celery_task_status)(task_id)\n</code></pre> <p>Note</p> <ol> <li>Here, we created a Celery signal handler that will be called after each Celery task is executed, which sends a message to the relevant channel via update_celery_task_status.</li> <li>We used async_to_sync to call update_celery_task_status (an asynchronous view) since, again, Celery does not work well with asyncio.</li> </ol>"},{"location":"FastApi/api_impovmrnt/","title":"fastapi","text":"<ul> <li>all model file should in model folder</li> <li>should have one requirements.txt file <code>pip freeze&gt; requirements.txt</code></li> <li>add field validator @field_validator('city)</li> <li>home url should have acert to inform that tell us that assert is there for you company - human readable</li> <li> <p>Sould have a  <code>/heath</code> end points (machine readable like aws and othere clould services)</p> <pre><code>MODEL_VERSION = '1.0.0` # extract from ml flow\n{\n    \"status\": \"Ok\",\n    \"version\":MODEL_VERSION,\n    model_loaded\": model is not None\n}\n</code></pre> </li> <li> <p>Clean the code like sepration of conserns</p> </li> <li>Pynatic model in different file we can all it schema</li> <li>ml flow</li> <li>constant and othere lofic</li> <li>should have try except</li> <li>Use of Response model</li> </ul>"},{"location":"FastApi/api_impovmrnt/#response-model","title":"Response Model","text":"<p>a response model defines the structure of the data that your api enpoint will return. It helps in:</p> <ol> <li>Generating clean API docs (/docs)</li> <li>Validating output (so ypur API does not return malformed response).</li> <li>Filtering unnecessary data from the response.</li> </ol>"},{"location":"FastApi/asynchronous_api/","title":"Developing and Testing an Asynchronous API with FastAPI and Pytest","text":""},{"location":"FastApi/asynchronous_api/#objectives","title":"Objectives","text":"<p>By the end of this tutorial you should be able to:</p> <ul> <li>Develop an asynchronous RESTful API with Python and FastAPI</li> <li>Practice Test-driven Development</li> <li>Test a FastAPI app with pytest</li> <li>Interact with a Postgres database asynchronously</li> <li>Containerize FastAPI and Postgres inside a Docker container</li> <li>Parameterize test functions and mock functionality in tests with pytest</li> <li>Document a RESTful API with Swagger/OpenAPI</li> </ul>"},{"location":"FastApi/celery/","title":"\u2699\ufe0f Celery - Distributed Task Queue","text":"<p>Celery is a distributed task queue that focuses on real-time processing, while also supporting task scheduling.</p> <p>\ud83d\udc0d It is the most popular task queue in Python.</p> <p>Celery allows you to return an HTTP response immediately and run long-running processes in the background, so users don't have to wait for the task to complete.</p>"},{"location":"FastApi/celery/#celery-vs-fastapis-backgroundtasks","title":"\u2696\ufe0f Celery vs FastAPI\u2019s <code>BackgroundTasks</code>","text":""},{"location":"FastApi/celery/#when-should-you-use-celery-instead-of-fastapis-built-in-backgroundtasks","title":"When should you use Celery instead of FastAPI's built-in <code>BackgroundTasks</code>?","text":""},{"location":"FastApi/celery/#1-cpu-intensive-or-time-consuming-tasks","title":"1. CPU-Intensive or Time-Consuming Tasks","text":"<p>Use Celery when the task involves heavy computation, file processing, or long-running operations. FastAPI\u2019s <code>BackgroundTasks</code> runs in the same event loop as your main app and is better suited for lightweight, non-blocking operations.</p>"},{"location":"FastApi/celery/#2-task-management-and-status-tracking","title":"2. Task Management and Status Tracking","text":"<p>If you need to:</p> <ul> <li>Manage a queue of tasks</li> <li>Distribute tasks to multiple workers</li> <li>Track task status</li> <li>Retry failed tasks</li> <li>Schedule recurring tasks</li> </ul> <p>...then Celery is the right tool. It\u2019s built for robust background task orchestration.</p>"},{"location":"FastApi/celery/#example-notes","title":"\ud83e\uddea Example Notes","text":"<ol> <li>After creating your FastAPI app, create a separate instance of Celery.</li> <li>Configure the broker and backend (e.g., Redis).</li> <li>Avoid hardcoding config values \u2014 use environment variables or a <code>.env</code> file.</li> <li>Define your Celery tasks (e.g., a long-running task like <code>divide</code>).</li> </ol>"},{"location":"FastApi/celery/#what-is-a-task-queue","title":"\ud83d\udd04 What is a Task Queue?","text":"<p>A task queue is a mechanism to offload:</p> <ul> <li>Time-intensive</li> <li>CPU- or memory-heavy</li> <li>Unreliable or third-party dependent</li> </ul> <p>...operations to a separate process, preventing the main application from being blocked.</p> <p>Think of it as a background worker system with its own job list.</p> <p>To use a task queue like Celery:</p> <ul> <li>You need a broker (message driver) such as Redis or RabbitMQ.</li> <li>Celery connects to the broker and listens for tasks to process.</li> </ul> <p></p>"},{"location":"FastApi/celery/#redis-in-memory-data-store","title":"\ud83d\udcbe Redis \u2014 In-Memory Data Store","text":"<p>Redis is a high-performance, in-memory key-value store, often used as:</p> <ul> <li>A message broker (Celery needs this)</li> <li>A cache</li> <li>An in-memory database</li> </ul>"},{"location":"FastApi/celery/#common-redis-use-cases","title":"\u2705 Common Redis Use Cases","text":"<ul> <li>Real-Time Analytics: e.g., fraud detection</li> <li>Session Storage: for fast web session retrieval</li> <li>Gaming Leaderboards: for fast sorting and updates in games</li> </ul>"},{"location":"FastApi/celery/#installation","title":"\ud83d\udce6 Installation","text":""},{"location":"FastApi/celery/#install-celery","title":"Install Celery","text":"<pre><code>pip install celery\n</code></pre>"},{"location":"FastApi/celery/#install-redis-python-client","title":"Install Redis (Python client)","text":"<pre><code>pip install redis\n</code></pre> <p>\u26a0\ufe0f You also need an actual Redis server running. You can use Docker or Docker Compose for that.</p>"},{"location":"FastApi/celery/#example-docker-compose-snippet-for-redis","title":"Example Docker Compose snippet for Redis","text":"<pre><code>services:\n  redis:\n    image: redis:latest\n    ports:\n      - \"6379:6379\"\n</code></pre>"},{"location":"FastApi/celery/#in-memory-database-vs-cache","title":"\ud83e\udde0 In-Memory Database vs. Cache","text":"Feature In-Memory Database Cache Purpose Primary data store Temporary, fast-access storage Persistence Persistent (optional) Usually non-persistent Use Case Session storage, analytics Speed up frequent reads Durability Higher Volatile Scalability High Limited by memory <p>Summary:</p> <ul> <li>Use a cache to optimize read performance.</li> <li>Use an in-memory DB to store and process live data quickly.</li> </ul>"},{"location":"FastApi/celery/#running-celery","title":"\u25b6\ufe0f Running Celery","text":""},{"location":"FastApi/celery/#run-python-file-interactive-mode","title":"Run Python File (Interactive Mode)","text":"<pre><code>python -i task.py\n</code></pre>"},{"location":"FastApi/celery/#start-celery-worker","title":"Start Celery Worker","text":""},{"location":"FastApi/celery/#for-linuxmacos","title":"For Linux/macOS","text":"<pre><code>celery -A task worker -l info\n</code></pre>"},{"location":"FastApi/celery/#for-windows","title":"For Windows","text":"<pre><code>celery -A task worker --pool=solo -l info\n</code></pre>"},{"location":"FastApi/celery/#alternate-examples","title":"Alternate Examples","text":"<pre><code>celery -A app.celery_worker.celery worker --loglevel=info\ncelery -A main.celery worker --loglevel=info\n</code></pre>"},{"location":"FastApi/celery/#message-broker-and-result-backend","title":"Message broker and Result backend","text":"<ul> <li>Message broker is an intermediary program used as the transport for producing or consuming tasks.</li> <li>Result backend is used to store the result of a Celery task.</li> </ul> <p>The Celery client is the producer which adds a new task to the queue via the message broker. Celery workers then consume new tasks from the queue, again, via the message broker. Once processed, results are then stored in the result backend.</p> <p>In terms of tools, RabbitMQ is arguably the better choice for a message broker since it supports AMQP (Advanced Message Queuing Protocol) while Redis is fine as your result backend.</p> <p>step-by-step format:</p>"},{"location":"FastApi/celery/#celery-task-lifecycle","title":"\ud83c\udf31 Celery Task Lifecycle","text":"<pre><code>[Your App] --&gt; [Broker (Redis/RabbitMQ)] --&gt; [Celery Worker] --&gt; [Result Backend (Optional)]\n</code></pre>"},{"location":"FastApi/celery/#1-task-creation-producer-phase","title":"\ud83d\udd39 1. Task Creation (Producer Phase)","text":"<ul> <li>You (the developer) call a Celery task using <code>.delay()</code> or <code>.apply_async()</code>.</li> <li>This sends the task request to the message broker.</li> </ul> <pre><code>my_task.delay(arg1, arg2)\n</code></pre>"},{"location":"FastApi/celery/#2-message-queuing-broker-phase","title":"\ud83d\udd39 2. Message Queuing (Broker Phase)","text":"<ul> <li>Celery serializes the task and pushes it into the message queue (e.g., Redis, RabbitMQ).</li> <li>The broker queues tasks until workers are available.</li> </ul>"},{"location":"FastApi/celery/#3-task-execution-worker-phase","title":"\ud83d\udd39 3. Task Execution (Worker Phase)","text":"<ul> <li>Celery workers continuously listen for new tasks from the broker.</li> <li> <p>When a task is available:</p> </li> <li> <p>The worker picks it up, deserializes it, and executes the Python function you defined.</p> </li> </ul>"},{"location":"FastApi/celery/#4-result-handling-optional","title":"\ud83d\udd39 4. Result Handling (Optional)","text":"<ul> <li> <p>If you\u2019ve configured a result backend (e.g., Redis, database, S3):</p> </li> <li> <p>The worker stores the result of the task there.</p> </li> <li>You can later fetch the result using <code>.get()</code> on the task's AsyncResult.</li> </ul> <pre><code>result = my_task.delay(5, 6)\nprint(result.get())  # waits for the task to finish and returns result\n</code></pre>"},{"location":"FastApi/celery/#5-monitoring-retries","title":"\ud83d\udd39 5. Monitoring &amp; Retries","text":"<ul> <li> <p>Celery supports:</p> </li> <li> <p>Retries (for failed tasks)</p> </li> <li>Error handling</li> <li>Timeouts</li> <li>Task expiration</li> <li>You can monitor task status using tools like Flower, Prometheus exporters, etc.</li> </ul>"},{"location":"FastApi/celery/#visual-summary","title":"\ud83e\udde0 Visual Summary","text":"<pre><code>App --&gt; Broker --&gt; Worker --&gt; Result Backend\n \u2191                             \u2193\n Retry / Timeout        Result status (SUCCESS / FAILURE)\n</code></pre>"},{"location":"FastApi/celery/#example-settings-in-celeryconfigpy","title":"\u2699\ufe0f Example Settings in <code>celeryconfig.py</code>","text":"<pre><code>broker_url = 'redis://localhost:6379/0'\nresult_backend = 'redis://localhost:6379/1'\ntask_serializer = 'json'\nresult_serializer = 'json'\naccept_content = ['json']\ntimezone = 'UTC'\n</code></pre> <ol> <li>The Celery client (the producer) adds a new task to the queue via the message broker.</li> <li>The Celery worker (the consumer) grabs the tasks from the queue, again, via the message broker.</li> <li>Once processed, results are stored in the result backend.</li> </ol>"},{"location":"FastApi/celery/#with-docker","title":"With Docker","text":"<pre><code>docker run -p 6379:6379 --name some-redis -d redis\n</code></pre> <p>This downloads the official Redis Docker image from Docker Hub and runs it on port 6379 in the background.</p> <p>To test if Redis is up and running, run:</p> <pre><code>docker exec -it some-redis redis-cli ping\n</code></pre>"},{"location":"FastApi/celery/#sending-a-task-to-celery","title":"Sending a Task to Celery","text":"<pre><code>celery -A main.celery worker --loglevel=info\n</code></pre> <pre><code>from main import app, divide\ntask = divide.delay(1, 2)\n</code></pre> <p>What's happening?</p> <ol> <li>We used the delay method to send a new message to the message broker. The worker process then picked up and executed the task from the queue.</li> <li>After releasing from the Enter key, the code finished executing while the divide task ran in the background.</li> </ol> <pre><code>task = divide.delay(1, 2)\ntask.state\ntask.result\n</code></pre> <pre><code>from celery.result import AsyncResult\ntask = AsyncResult('8e3da1cc-a6aa-42ba-ab72-6ca7544d3730')  # replace with your UUID\n</code></pre> <p>After we called the delay method, we get an AsyncResult instance, which can be used to check the task state along with the return value or exception details</p>"},{"location":"FastApi/celery/#monitoring-celery-with-flower","title":"Monitoring Celery with Flower","text":"<p>Flower is a real-time web application monitoring and administration tool for Celery.</p> <p>Familiarize yourself a bit with the Flower dashboard. Take note of the UUID column. This is the id of AsyncResult</p> <pre><code>celery -A main.celery flower --port=5555\n</code></pre> <p>print <code>task.state</code> and <code>task.result</code></p>"},{"location":"FastApi/celery/#setting-up-redis","title":"Setting up Redis","text":"<p>You can set up and run Redis directly from your operating system or from a Docker container.</p> <p>o/p PONG</p> <pre><code>from celery.result import AsyncResult\ntask = AsyncResult('8e3da1cc-a6aa-42ba-ab72-6ca7544d3730')  # replace with your UUID\ntask.state\n\n# 'FAILURE'\ntask.result\n</code></pre> <p></p> <ul> <li> <p>Celery doesn't support asyncio very well (since it was developed before asyncio), we're using SQLAlchemy as our ORM because it can be used with both FastAPI and Celery.</p> </li> <li> <p>Alembic is a database migration tool for SQLAlchemy.</p> </li> </ul> <p>config.py</p> <pre><code>import os\nimport pathlib\nfrom functools import lru_cache\n\n\nclass BaseConfig:\n    BASE_DIR: pathlib.Path = pathlib.Path(__file__).parent.parent\n\n    DATABASE_URL: str = os.environ.get(\"DATABASE_URL\", f\"sqlite:///{BASE_DIR}/db.sqlite3\")\n    DATABASE_CONNECT_DICT: dict = {}\n\n\nclass DevelopmentConfig(BaseConfig):\n    pass\n\n\nclass ProductionConfig(BaseConfig):\n    pass\n\n\nclass TestingConfig(BaseConfig):\n    pass\n\n\n@lru_cache()\ndef get_settings():\n    config_cls_dict = {\n        \"development\": DevelopmentConfig,\n        \"production\": ProductionConfig,\n        \"testing\": TestingConfig\n    }\n\n    config_name = os.environ.get(\"FASTAPI_CONFIG\", \"development\")\n    config_cls = config_cls_dict[config_name]\n    return config_cls()\n\n\nsettings = get_settings()\n</code></pre> <ul> <li>In get_settings, we used the FASTAPI_CONFIG env variable to control which configuration to use. For example, during development, DevelopmentConfig will be used and TestingConfig will be used during test.</li> <li>I do not recommend pydantic BaseSettings here because it might cause Celery to raise [ERROR/MainProcess] pidbox command error: KeyError('signature') error when we launch Flower</li> </ul>"},{"location":"FastApi/celery/#init-alembic","title":"Init Alembic","text":"<pre><code>alembic init alembic\n</code></pre> <pre><code>config.set_main_option(\"sqlalchemy.url\", str(settings.DATABASE_URL))        # new\nfastapi_app = create_app()    # new\ntarget_metadata = Base.metadata       # new\n</code></pre>"},{"location":"FastApi/celery/#notes","title":"Notes","text":"<ol> <li>We used <code>config.set_main_option(\"sqlalchemy.url\", str(settings.DATABASE_URL))</code> to set the database connection string.</li> <li>Then, we used <code>create_app</code> to create a new <code>fastapi_app</code> instance to ensure the relevant models are loaded.</li> <li>Finally, we added <code>target_metadata = Base.metadata</code> so that new models are discovered by Alembic.</li> </ol>"},{"location":"FastApi/celery/#to-create-an-empty-dbsqlite3-run","title":"To create an empty db.sqlite3, run","text":"<pre><code>python\nfrom main import app\nfrom app.database import Base, engine\nBase.metadata.create_all(bind=engine)\nexit()\n\n(venv)ls db.sqlite3\ndb.sqlite3\n</code></pre>"},{"location":"FastApi/celery/#migrate-the-database-even-though-we-dont-have-any-models-yet","title":"migrate the database even though we don't have any models yet","text":"<p><code>alembic revision --autogenerate</code></p>"},{"location":"FastApi/celery/#application-structure","title":"Application Structure","text":"<p>If you have experience with Django or Flask, you've probably used \"Django Apps\" or \"Flask Blueprints\" to break up larger applications by grouping common functionality into reusable components.</p> <p>Next, we'll do the same thing for FastAPI.</p> <p>we can use somthing like</p> <pre><code>from fastapi import APIRouter\n\nusers_router = APIRouter(\n    prefix=\"/users\",\n)\n\nfrom . import models # noqa\n</code></pre>"},{"location":"FastApi/celery/#database-operations","title":"Database Operations","text":"<p>alembic revision --autogenerate</p>"},{"location":"FastApi/celery/#create-users-table","title":"Create users table","text":"<p>alembic upgrade head</p> <pre><code>from main import app\nfrom app.database import SessionLocal\nfrom app.users.models import User\n\nuser = User(username='test1', user_email='test1@example.com', user_password='test1')\nsession = SessionLocal()\nsession.add(user)\nsession.commit()\n\nnew_session = SessionLocal()\nnew_session.query(User).first().username\n\n'test1'\n\nexit()\n</code></pre>"},{"location":"FastApi/celery/#add-celery","title":"Add Celery","text":"<pre><code>from celery import current_app as current_celery_app\n\nfrom project.config import settings\n\n\ndef create_celery():\n    celery_app = current_celery_app\n    celery_app.config_from_object(settings, namespace=\"CELERY\")\n\n    return celery_app\n</code></pre>"},{"location":"FastApi/celery/#notes_1","title":"Notes","text":"<ol> <li><code>create_celery</code> is a factory function that configures and then returns a Celery app instance.</li> <li>Rather than creating a new Celery instance, we used current_app so that shared tasks will work as expected.</li> <li><code>celery_app.config_from_object(settings, namespace=\"CELERY\")</code> means all celery-related configuration keys should be prefixed with <code>CELERY_</code>. For example, to configure the <code>broker_url</code>, we should use <code>CELERY_BROKER_URL</code></li> </ol>"},{"location":"FastApi/celery/#tasks","title":"tasks","text":"<pre><code>from celery import shared_task\n\n@shared_task\ndef divide(x, y):\n    import time\n    time.sleep(5)\n    return x / y\n</code></pre> <p>Notes:</p> <ol> <li>Many resources on the web recommend using <code>celery.task</code>. This might cause circular imports since you'll have to import the Celery instance.</li> <li>We used <code>shared_task</code> to make our code reusable, which, again, requires current_app in <code>create_celery</code> instead of creating a new Celery instance.Now, we can copy this file anywhere in the app and it will work as expected.</li> </ol> <p>Celery tasks will be found when we launch the worker.</p>"},{"location":"FastApi/celery/#manual-test","title":"Manual Test","text":"<pre><code>celery -A main.celery worker --loglevel=info\ncelery -A main.celery worker --pool=solo -l info \n</code></pre> <p>[tasks]   . app.users.tasks.divide</p> <p>Note: From the tasks section above, we can see project.users.tasks.divide, which means that the Celery worker found the task successfully.</p>"},{"location":"FastApi/celery/#dockerizing-celery-and-fastapi","title":"Dockerizing Celery and FastAPI","text":"<p>Docker Compose</p> <p>Docker Compose is a tool used for defining and running multi-container Docker applications. It uses YAML files to configure the application's services and performs the creation and start-up processes for all of the containers with a single command.</p> <p>We've already looked at how to serve up an instance of Redis with Docker using a single command:</p> <p>$ docker run -p 6379:6379 --name some-redis -d redis</p> <p>Well, in this chapter, we'll take this a step further and containerize our entire infrastructure to simplify development. Before we do that though, let's look at the why: Why should we serve up our development environment in Docker containers with Docker Compose?</p> <pre><code>Instead of having to run each process (e.g., Uvicorn/FastAPI, Celery worker, Celery beat, Flower, Redis, Postgres, etc.) manually, each from a different terminal window, after we containerize each service, Docker Compose enables us to manage and run the containers using a single command.\nDocker Compose will also simplify configuration. The Celery config is currently tied to our FastAPI app's config. This is not ideal. With Docker Compose, we can easily create different configurations for both FastAPI and Celery all from a single YAML file.\nDocker, in general, allows us to create isolated, reproducible, and portable development environments. So, you won't have to mess around with a virtual environment or install tools like Postgres and Redis on your local OS.\n</code></pre> <p>The \"compose\" folder holds configuration files, shell scripts, and the associated Dockerfiles for each environment.</p> <p></p> <pre><code>services:\n  web:\n    build:\n      context: .\n      dockerfile: ./compose/local/fastapi/Dockerfile\n    image: fastapi_celery_example_web\n    # '/start' is the shell script used to run the service\n    command: /start\n    # this volume is used to map the files and folders on the host to the container\n    # so if we change code on the host, code in the docker container will also be changed\n    volumes:\n      - .:/app\n    ports:\n      - 8010:8000\n    env_file:\n      - .env/.dev-sample\n    depends_on:\n      - redis\n      - db\n\n  db:\n    image: postgres:16-alpine\n    volumes:\n      - postgres_data:/var/lib/postgresql/data/\n    environment:\n      - POSTGRES_DB=fastapi_celery\n      - POSTGRES_USER=fastapi_celery\n      - POSTGRES_PASSWORD=fastapi_celery\n\n  redis:\n    image: redis:7-alpine\n\n  celery_worker:\n    build:\n      context: .\n      dockerfile: ./compose/local/fastapi/Dockerfile\n    image: fastapi_celery_example_celery_worker\n    command: /start-celeryworker\n    volumes:\n      - .:/app\n    env_file:\n      - .env/.dev-sample\n    depends_on:\n      - redis\n      - db\n\n  celery_beat:\n    build:\n      context: .\n      dockerfile: ./compose/local/fastapi/Dockerfile\n    image: fastapi_celery_example_celery_beat\n    command: /start-celerybeat\n    volumes:\n      - .:/app\n    env_file:\n      - .env/.dev-sample\n    depends_on:\n      - redis\n      - db\n\n  flower:\n    build:\n      context: .\n      dockerfile: ./compose/local/fastapi/Dockerfile\n    image: fastapi_celery_example_celery_flower\n    command: /start-flower\n    volumes:\n      - .:/app\n    env_file:\n      - .env/.dev-sample\n    ports:\n      - 5557:5555\n    depends_on:\n      - redis\n      - db\n\nvolumes:\n  postgres_data:\n</code></pre> <p>we defined six services:</p> <ol> <li>web is the FastAPI server</li> <li>db is the Postgres server</li> <li>redis is the Redis service, which will be used as the Celery message broker and result backend</li> <li>celery_worker is the Celery worker process</li> <li>celery_beat is the Celery beat process for scheduled tasks</li> <li>flower is the Celery dashboard</li> </ol> <p>Review the web, db, and redis services on your own, taking note of the comments. To simplify things, the web, celery_worker, celery_beat, and flower services will all use the same Dockerfile.</p>"},{"location":"FastApi/celery/#environment-variables","title":"Environment Variables","text":"<p>Create a new folder to store environment variables in the project root called .env. Then, add a new file to that folder called .dev-sample:</p>"},{"location":"FastApi/db_transation/","title":"Database Transactions","text":"<p>how to prevent a Celery task dependent on a SQLAlchemy database transaction from executing before the database commits the transaction.</p> <p>This is a fairly common issue.</p>"},{"location":"FastApi/db_transation/#objectives","title":"Objectives","text":"<ul> <li>Describe what a database transaction is and how to use it in SQLAlchemy</li> <li>Prevent a task from executing before the database commits a transaction</li> </ul>"},{"location":"FastApi/db_transation/#what-is-a-database-transaction","title":"What is a Database Transaction?","text":"<p>A database transaction is a unit of work that is either committed (applied to the database) or rolled back (undone from the database) as a unit.</p> <p>Most databases use the following pattern:</p> <ol> <li>Begin the transaction.</li> <li>Execute a set of data manipulations and/or queries.</li> <li>If no error occurs, then commit the transaction.</li> <li>If an error occurs, then roll back the transaction.</li> </ol> <p>a transaction is a very useful way to keep your data far away from chaos.</p>"},{"location":"FastApi/db_transation/#database-transactions-in-sqlalchemy","title":"Database Transactions in SQLAlchemy","text":"<p>To run web container</p> <pre><code>docker compose exec web bash\nroot@0da5a3df5bfb:/app# python\nPython 3.11.4 (main, Jun 13 2023, 15:34:37) [GCC 8.3.0] on linux\n</code></pre> <p>Then, enter the following:</p> <pre><code>from main import app\nfrom app.database import SessionLocal\nsession = SessionLocal()\nfrom app.users.models import User\n\nusername = 'michael_test_1'\n# user = User(username=f'{username}', email=f'{username}@test.com')\nuser = User(username=f'{username}', user_email=f'{username}@test.com',user_password=username)\n</code></pre>"},{"location":"FastApi/db_transation/#state-management","title":"State Management","text":"<p>It\u2019s helpful to know the states which an instance can have within a session:</p> <ul> <li> <p>Transient - an instance that\u2019s not in a session, and is not saved to the database; i.e. it has no database identity. The only relationship such an object has to the ORM is that its class has a Mapper associated with it</p> </li> <li> <p>Pending - when you Session.add() a transient instance, it becomes pending. It still wasn\u2019t actually flushed to the database yet, but it will be when the next flush occurs.</p> </li> <li> <p>Persistent - An instance which is present in the session and has a record in the database.</p> </li> <li> <p>Deleted - An instance which has been deleted within a flush, but the transaction has not yet completed.</p> </li> <li> <p>Detached - an instance which corresponds, or previously corresponded, to a record in the database, but is not currently in any session</p> </li> </ul> <pre><code>from sqlalchemy import inspect\ninsp = inspect(my_object)\ninsp.persistent\n</code></pre> <p>Let's look at the different states a SQLAlchemy database instance can be in.</p> <pre><code>from sqlalchemy import inspect\ninsp = inspect(user)\ninsp.transient # True\n\ninsp.persistent # False\nprint(user.id) # None\n</code></pre> <p>It's currently in a transient state, so it's not part of a session yet.</p> <p>Note: Multiple transactions can be tied to a single session.</p> <p>Add it to a session, which will move the state to pending:</p> <pre><code>session.add(user)\n\ninsp.transient # False\ninsp.pending # True\nprint(user.id) # None\n</code></pre> <p>To create a database record, call flush to move the state to persistent:</p> <pre><code>session.flush()\n\ninsp.transient # False\ninsp.pending   # False\ninsp.persistent # True\nprint(user.id) # 1\n</code></pre> <p>At this point, you now have a user ID. That said, the data has not been inserted yet. To verify this, open a new terminal window and run:</p> <pre><code>docker compose exec db sh\npsql -U fastapi_celery fastapi_celery\n\npsql (16.9)\nType \"help\" for help.\n\nfastapi_celery=# select * from users;\n id | username | user_email | user_password \n----+----------+------------+---------------\n(0 rows)\n\nfastapi_celery=#\n</code></pre> <p>To commit the changes, run:</p> <pre><code>session.commit()\n</code></pre> <p>Verify</p> <pre><code>fastapi_celery=# select * from users;\n\\ id |    username    |       user_email        | user_password  \n----+----------------+-------------------------+----------------\n  1 | michael_test_1 | michael_test_1@test.com | michael_test_1\n(1 row)\n</code></pre> <p>Notes:</p> <ol> <li><code>flush</code> communicates a series of operations to the database. The database maintains them as pending operations.</li> <li>The changes aren't persisted permanently to disk until <code>commit</code> is called.</li> <li><code>commit</code> calls <code>flush</code> beforehand, so you don't need to explicitly call flush.</li> </ol>"},{"location":"FastApi/db_transation/#managing-transactions","title":"Managing Transactions","text":"<p>It's recommended to use the following pattern to wrap the database operation code:</p> <pre><code>username = 'michael_test_1'\nuser = User(\n    username=f'{username}',\n    email=f'{username}@test.com',\n)\n\nwith session.begin():\n    session.add(user)\n\n# commits transaction at the end, or rolls back if there was an exception raised\n</code></pre> <p>If an exception is raised (primary key, foreign key, or \"not nullable\" constraint violations), rollback is called to fully reset the state of the session back to transient.</p> <p>Or you can use this pattern:</p> <pre><code>try:\n    username = 'michael_test_1'\n    user = User(\n        username=f'{username}',\n        email=f'{username}@test.com',\n    )\n    session.add(user)\n    session.commit()\nexcept Exception as e:\n    session.rollback()\n    raise\n</code></pre> <p>Notes:</p> <ol> <li>In old versions of SQLAlchemy, you had to explicitly call rollback in the except block.</li> <li>In newer versions, session.begin() helps us keep the code clean.</li> </ol>"},{"location":"FastApi/db_transation/#enqueue-reference","title":"Enqueue Reference","text":"<p>In situations where a Celery task needs to work with data from a database, you should always (if possible) enqueue a reference to the data rather than the data itself. For example, rather than adding an email address, which could change before the task runs, add the user's primary database key.</p> <p>From the Celery docs:</p> <p>Another gotcha is Django model objects. They shouldn\u2019t be passed on as arguments to tasks. It\u2019s almost always better to re-fetch the object from the database when the task is running instead, as using old data may lead to race conditions.</p> <pre><code>@users_router.get(\"/transaction_celery/\")\ndef transaction_celery(session: Session = Depends(get_db_session)):\n    username = random_username()\n    user = User(\n        username=f'{username}',\n        email=f'{username}@test.com',\n    )\n    with session.begin():\n        session.add(user)\n\n    print(f'user {user.id} {user.username} is persistent now')\n\n    task_send_welcome_email.delay(user.id)\n    return {\"message\": \"done\"}\n</code></pre> <ol> <li>With session: <code>Session = Depends(get_db_session)</code>, the <code>session</code> is the yield value of the <code>get_db_session</code>. Here, we leveraged FastAPI's dependency injection system.</li> <li>With <code>db_context = contextmanager(get_db_session)</code>, we used the database session with Celery in clean way. We'll look more at this shortly.</li> <li>The <code>transaction_celery</code> view creates a random user and saves it to the database.</li> <li>If the database operation fails, <code>session.rollback</code> will run and an exception will be raised.</li> <li>A new task is only enqueued if the database operation is successful. Notice how we passed a reference to the data -- e.g., <code>user.id</code> -- rather than the email itself.</li> </ol> <p>Alternatively, you could use a random username generator for testing purposes like Faker.</p> <pre><code>Add the task to project/users/tasks.py:\n\n@shared_task()\ndef task_send_welcome_email(user_pk):\n    from project.users.models import User\n\n    with db_context() as session:\n        user = session.get(User, user_pk)\n        logger.info(f'send email to {user.email} {user.id}')\n</code></pre> <ol> <li>with db_context() as session, we can use the session to interact with database in Celery now. And the session will be closed after we exit the context. You can check Python contextlib.contextmanager to learn more.</li> <li>Here, with the user reference, we grabbed the user instance, which we then used to send a welcome email message to.</li> </ol> <p>Yes, we don't actually send the email. Do this on your own if you'd like.</p>"},{"location":"FastApi/sockert.io/","title":"Socket.IO and Celery","text":"<p>we used WebSockets and Broadcaster to get task status updates without server polling</p>"},{"location":"FastApi/sockert.io/#objectives","title":"Objectives","text":"<ol> <li>Add Socket.IO support to a FastAPI application</li> <li>Emit Socket.IO messages in a Celery worker</li> </ol>"},{"location":"FastApi/sockert.io/#background","title":"Background","text":"<p>Socket.IO is library that simplifies the building of real-time, event-based applications.</p> <ol> <li>Client-side - socket.io-client is a client-side library that works on top of the browser's WebSocket API</li> <li>Server-side - python-socketio adds Socket.IO support to FastAPI</li> </ol> <p>It's worth noting that while Socket.IO uses WebSockets, it adds additional metadata to each packet. Because of this you will not be able to successfully connect a regular WebSocket client with Socket.IO server.</p> <p>Terminology:</p> <ol> <li>A Namespace is a communication channel that allows you to split the logic of your application over a single shared connection (also called \"multiplexing\").</li> <li>A room is an arbitrary channel that sockets can join and leave. It can be used to broadcast events to a subset of clients.</li> </ol> <p>Notes:</p> <ol> <li>We created a Class-Based Namespace, which inherits from socketio.AsyncNamespace. When the server receives a join event on the /task_status namespace, on_join handles the event.</li> <li>on_join then adds the client to the task_id room (nearly the same as subscribing to channel) and then uses emit to send a status event to the clients in the room.</li> <li>The register_socketio_app function mounts the AsyncServer as a FastAPI sub-application.</li> <li>update_celery_task_status_socketio is called in the Celery worker after the task finishes.</li> </ol>"},{"location":"database/","title":"SQL","text":""},{"location":"database/DA_SQL_CRUD/","title":"Create table","text":"<p>Create Table author</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"database/DA_SQL_CRUD/#alter-table-add-column","title":"Alter table Add Column","text":"<ul> <li>Add or remove columns</li> <li>Modify the data type of columns</li> <li>Add or remove keys</li> <li>Add or remove constranis</li> <li>After Table tablename          -Add columnname datatype</li> </ul>"},{"location":"database/DA_SQL_CRUD/#modify","title":"Modify","text":"<p>Alter table tablename</p> <ul> <li>modify column name datatype; </li> </ul> <p></p> <p></p> <p>%load_ext sql %sql sqlite:///DA.db</p> <pre><code>%%sql \n\nCREATE TABLE PETSALE (\n        ID INTEGER NOT NULL,\n        PET CHAR(20),\n        SALEPRICE DECIMAL(6,2),\n        PROFIT DECIMAL(6,2),\n        SALEDATE DATE\n        );\n\nCREATE TABLE PET (\n        ID INTEGER NOT NULL,\n        ANIMAL VARCHAR(20),\n        QUANTITY INTEGER\n        );\n</code></pre> <pre><code>%%sql\nINSERT INTO PETSALE VALUES\n        (1,'Cat',450.09,100.47,'2018-05-29'),\n        (2,'Dog',666.66,150.76,'2018-06-01'),\n        (3,'Parrot',50.00,8.9,'2018-06-04'),\n        (4,'Hamster',60.60,12,'2018-06-11'),\n        (5,'Goldfish',48.48,3.5,'2018-06-14');\n\nINSERT INTO PET VALUES\n        (1,'Cat',3),\n        (2,'Dog',4),\n        (3,'Hamster',2);\n\nSELECT * FROM PETSALE;\nSELECT * FROM PET;\n</code></pre> ID ANIMAL QUANTITY 1 Cat 3 2 Dog 4 3 Hamster 2 <pre><code>%%sql\nSELECT * FROM PETSALE;\n</code></pre> ID PET SALEPRICE PROFIT SALEDATE 1 Cat 450.09 100.47 2018-05-29 2 Dog 666.66 150.76 2018-06-01 3 Parrot 50 8.9 2018-06-04 4 Hamster 60.6 12 2018-06-11 5 Goldfish 48.48 3.5 2018-06-14"},{"location":"database/DA_SQL_CRUD/#1-adding-a-column","title":"1. Adding a column","text":"<p>Add a new column named QUANTITY to the PETSALE table and display the altered table. For this, copy the code below and paste it into the text area of the SQL page. Click Go.</p> <pre><code>%%sql\nALTER TABLE PETSALE\nADD COLUMN QUANTITY INTEGER;\n\nSELECT * FROM PETSALE;\n</code></pre> ID PET SALEPRICE PROFIT SALEDATE QUANTITY 1 Cat 450.09 100.47 2018-05-29 None 2 Dog 666.66 150.76 2018-06-01 None 3 Parrot 50 8.9 2018-06-04 None 4 Hamster 60.6 12 2018-06-11 None 5 Goldfish 48.48 3.5 2018-06-14 None"},{"location":"database/DA_SQL_CRUD/#now-update-the-newly-added-quantity-column-of-the-petsale-table-with-some-values-and-show-all-the-table-records-copy-the-code-below-and-paste-it-into-text-area-of-the-sql-page-click-go","title":"Now update the newly added QUANTITY column of the PETSALE table with some values and show all the table records. Copy the code below and paste it into text area of the SQL page. Click Go","text":"<pre><code>%%sql\n\nUPDATE PETSALE SET QUANTITY = 9 WHERE ID = 1;\nUPDATE PETSALE SET QUANTITY = 3 WHERE ID = 2;\nUPDATE PETSALE SET QUANTITY = 2 WHERE ID = 3;\nUPDATE PETSALE SET QUANTITY = 6 WHERE ID = 4;\nUPDATE PETSALE SET QUANTITY = 24 WHERE ID = 5;\n\nSELECT * FROM PETSALE;\n</code></pre> ID PET SALEPRICE PROFIT SALEDATE QUANTITY 1 Cat 450.09 100.47 2018-05-29 9 2 Dog 666.66 150.76 2018-06-01 3 3 Parrot 50 8.9 2018-06-04 2 4 Hamster 60.6 12 2018-06-11 6 5 Goldfish 48.48 3.5 2018-06-14 24"},{"location":"database/DA_SQL_CRUD/#2-deleting-a-column","title":"2. Deleting a column","text":"<p>Delete the PROFIT column from the PETSALE table and show the altered table. Copy the code below and paste it into the text area of the SQL page.</p> <pre><code>%%sql\n\nALTER TABLE PETSALE\nDROP COLUMN PROFIT;\n\nSELECT * FROM PETSALE;\n</code></pre> ID PET SALEPRICE SALEDATE QUANTITY 1 Cat 450.09 2018-05-29 9 2 Dog 666.66 2018-06-01 3 3 Parrot 50 2018-06-04 2 4 Hamster 60.6 2018-06-11 6 5 Goldfish 48.48 2018-06-14 24"},{"location":"database/DA_SQL_CRUD/#3-modify-a-column","title":"3. Modify a column","text":"<p>Change the data type to VARCHAR(20) type of the column PET of the table PETSALE and show the altered table. Copy the code below and paste it into the text area of the SQL</p> <pre><code>%%sql\n\nALTER TABLE PETSALE\nMODIFY PET VARCHAR(20);\n\nSELECT * FROM PETSALE;\n</code></pre>"},{"location":"database/DA_SQL_CRUD/#in-sqlite-you-cannot-directly-modify-a-columns-data-type-with-the-alter-table-command-like-you-can-in-mysql-or-postgresql-sqlite-has-limited-support-for-altering-columns-to-modify-a-column-in-sqlite-you-typically-need-to-create-a-new-table-with-the-desired-structure-copy-the-data-and-then-drop-the-old-table","title":"In SQLite, you cannot directly modify a column's data type with the ALTER TABLE command like you can in MySQL or PostgreSQL. SQLite has limited support for altering columns. To modify a column in SQLite, you typically need to create a new table with the desired structure, copy the data, and then drop the old table","text":""},{"location":"database/DA_SQL_CRUD/#4-rename-a-column","title":"4. Rename a Column","text":"<p>Rename the column PET to ANIMAL of the PETSALE table and show the altered table. Copy the code below and paste it into the text area of the SQL page.</p> <pre><code>%%sql\n\nALTER TABLE `PETSALE` CHANGE `PET` `ANIMAL` varchar(20);\n\nSELECT * FROM PETSALE;\n</code></pre> <pre><code>%%sql\n\nALTER TABLE PETSALE\nRENAME COLUMN PET TO ANIMAL;\n\nSELECT * FROM PETSALE;\n</code></pre> ID ANIMAL SALEPRICE SALEDATE QUANTITY 1 Cat 450.09 2018-05-29 9 2 Dog 666.66 2018-06-01 3 3 Parrot 50 2018-06-04 2 4 Hamster 60.6 2018-06-11 6 5 Goldfish 48.48 2018-06-14 24"},{"location":"database/DA_SQL_CRUD/#in-sqlite-the-change-keyword-is-not-supported-for-renaming-columns-like-it-is-in-mysql-instead-you-can-use-the-alter-table-rename-column-command","title":"In SQLite, the CHANGE keyword is not supported for renaming columns like it is in MySQL. Instead, you can use the ALTER TABLE ... RENAME COLUMN command","text":""},{"location":"database/DA_SQL_CRUD/#task-4-truncate-statement","title":"Task 4: TRUNCATE statement","text":"<p>In this exercise, you will use the TRUNCATE statement to remove all rows from an existing table without deleting it.</p> <p>Let's remove all rows from the PET table and show the empty table. Copy the code below and paste it into the text area of the SQL</p> <pre><code>%%sql\n\nTRUNCATE TABLE PET ;\n\nSELECT * FROM PET;\n</code></pre>"},{"location":"database/DA_SQL_CRUD/#sqlite-does-not-support-the-truncate-table-command-like-some-other-databases-eg-mysql-postgresql-however-you-can-achieve-the-same-effect-of-removing-all-rows-from-a-table-using-the-delete-statement-or-the-drop-and-create-combination","title":"SQLite does not support the TRUNCATE TABLE command like some other databases (e.g., MySQL, PostgreSQL). However, you can achieve the same effect of removing all rows from a table using the DELETE statement or the DROP and CREATE combination","text":"<pre><code>%%sql\nDELETE FROM PET;\n\n%%sql\nSELECT * FROM PET;\n</code></pre> ID ANIMAL QUANTITY"},{"location":"database/DA_SQL_CRUD/#task-5-drop-statement","title":"Task 5: DROP statement","text":"<p>Finally, you will use the DROP statement to delete an existing table. Let's delete the PET table and verify if the table still exists or not (the SELECT statement should give an error if a table doesn't exist)</p> <pre><code>%%sql\n\nDROP TABLE PET;\n\nSELECT * FROM PET;\n</code></pre> <p>(sqlite3.OperationalError) no such table: PET</p>"},{"location":"database/DA_SQL_CRUD/#insert-statement","title":"Insert Statement","text":"<p>Adding rows to a table</p> <ul> <li>Create the table(CREATE TABLE statement)</li> <li>Populate table with data</li> <li>INSERT statement<ul> <li>a Data Manipulation Language(DML) statement used to read and modify data</li> <li></li> </ul> </li> </ul> <pre><code>%load_ext sql\n%sql sqlite:///DA.db\n\n%%sql\nInsert into author (author_id, lastname,firstname, email, city, country)\nvalues(\"a1\",\"chong\", \"Raul\", \"rfc@ibm.com\", \"toronto\",\"ca\")\n</code></pre>"},{"location":"database/DA_SQL_CRUD/#update","title":"Update","text":""},{"location":"database/DA_SQL_DML_DDL/","title":"SQL statements","text":""},{"location":"database/DA_SQL_DML_DDL/#types-of-sql-statements-ddl-vs-dml","title":"Types of SQL statements (DDL vs. DML)","text":"<ul> <li>DDl: Define, create, drop</li> <li>crete</li> <li>alter</li> <li>truncate</li> <li> <p>drop</p> </li> <li> <p>DML: Read and modify</p> </li> <li>CRUD Operration (Create,Read,Update&amp; delete rows)</li> <li>common dml<ul> <li>insert</li> <li>select</li> <li>update</li> <li>delete</li> </ul> </li> </ul> <p>SQL Statements are used for interacting with Entities (that is, tables), Attributes (that is, columns) and their tuples (or rows with data values) in relational databases.</p> <ul> <li>SQL statements fall into two different categories: Data Definition Language statements and Data Manipulation Language statements.</li> <li>Data Definition Language (or DDL) statements are used to define, change, or drop database objects such as tables. Common - DDL statement types include CREATE, ALTER, TRUNCATE, and DROP.</li> <li>CREATE: which is used for creating tables and defining its columns;</li> <li>ALTER: is used for altering tables including adding and dropping columns and modifying their datatypes;</li> <li>TRUNCATE: is used for deleting data in a table but not the table itself; DROP: is used for deleting tables. Data</li> </ul> <p>Manipulation Language (or DML) statements are used to read and modify data in tables.</p> <ul> <li>These are also sometimes referred to as CRUD operations, that is, Create, Read, Update and Delete rows in a table.</li> <li>Common DML statement types include INSERT, SELECT, UPDATE, and DELETE.</li> <li>INSERT: is used for inserting a row or several rows of data into a table;</li> <li>SELECT: reads or selects row or rows from a table; UPDATE: edits row or rows in a table;</li> <li>DELETE: removes a row or rows of data from a table.</li> </ul>"},{"location":"database/DA_SQL_Sorting_Grouping/","title":"Grouping (Filtring)","text":""},{"location":"database/DA_SQL_Sorting_Grouping/#objectives","title":"Objectives","text":"<p>After completing this lab, you will be able to:</p> <ol> <li>Filter the output of a SELECT query by using string patterns, ranges, or sets of values.</li> <li>Sort the result set in either ascending or descending order in accordance with a pre-determined column.</li> <li>Group the outcomes of a query based on a selected parameter to further refine the response.</li> </ol> <p>%load_ext sql %sql sqlite:///HR.db</p> <pre><code>%%sql\n\nCREATE TABLE EMPLOYEES (\n                            EMP_ID CHAR(9) NOT NULL, \n                            F_NAME VARCHAR(15) NOT NULL,\n                            L_NAME VARCHAR(15) NOT NULL,\n                            SSN CHAR(9),\n                            B_DATE DATE,\n                            SEX CHAR,\n                            ADDRESS VARCHAR(30),\n                            JOB_ID CHAR(9),\n                            SALARY DECIMAL(10,2),\n                            MANAGER_ID CHAR(9),\n                            DEP_ID CHAR(9) NOT NULL,\n                            PRIMARY KEY (EMP_ID));\n\n  CREATE TABLE JOB_HISTORY (\n                            EMPL_ID CHAR(9) NOT NULL, \n                            START_DATE DATE,\n                            JOBS_ID CHAR(9) NOT NULL,\n                            DEPT_ID CHAR(9),\n                            PRIMARY KEY (EMPL_ID,JOBS_ID));\n\n CREATE TABLE JOBS (\n                            JOB_IDENT CHAR(9) NOT NULL, \n                            JOB_TITLE VARCHAR(30),\n                            MIN_SALARY DECIMAL(10,2),\n                            MAX_SALARY DECIMAL(10,2),\n                            PRIMARY KEY (JOB_IDENT));\n\nCREATE TABLE DEPARTMENTS (\n                            DEPT_ID_DEP CHAR(9) NOT NULL, \n                            DEP_NAME VARCHAR(15) ,\n                            MANAGER_ID CHAR(9),\n                            LOC_ID CHAR(9),\n                            PRIMARY KEY (DEPT_ID_DEP));\n\nCREATE TABLE LOCATIONS (\n                            LOCT_ID CHAR(9) NOT NULL,\n                            DEP_ID_LOC CHAR(9) NOT NULL,\n                            PRIMARY KEY (LOCT_ID,DEP_ID_LOC));\n</code></pre> <pre><code>%%sql\n\nInsert into JOB_HISTORY (EMPL_ID, START_DATE, JOBS_ID, DEPT_ID)\nVALUES \n(\"E1001\",2000-08-01,100,2),\n(\"E1002\",2001-08-01,200,5),\n(\"E1003\",2001-08-16,300,5),\n(\"E1004\",2000-08-16,400,5),\n(\"E1005\",2000-05-30,500,2),\n(\"E1006\",2001-08-16,600,2),\n(\"E1007\",2002-05-30,650,7),\n(\"E1008\",2010-05-06,660,7),\n(\"E1009\",2016-08-16,234,7),\n(\"E1010\",2016-08-16,220,5);\n\n%%sql\n\nInsert into LOCATIONS (LOCT_ID, DEP_ID_LOC)\nVALUES\n('L0001',2),\n('L0002',5),\n('L0003',7)\n\n%%sql\n\nInsert into EMPLOYEES (EMP_ID, F_NAME, L_NAME, SSN, B_DATE, SEX, ADDRESS, JOB_ID, SALARY,MANAGER_ID,DEP_ID)\nVALUES\n(\"E1001\",\"John\",\"Thomas\",123456,1976-09-01,\"M\",\"5631 Rice, OakPark,IL\",100,100000,30001,2),\n(\"E1002\",\"Alice\",\"James\",123457,1972-07-31,\"F\",\"980 Berry ln, Elgin,IL\",200,80000,30002,5),\n(\"E1003\",\"Steve\",\"Wells\",123458,1980-10-08,\"M\",\"291 Springs, Gary,IL\",300,50000,30002,5),\n(\"E1004\",\"Santosh\",\"Kumar\",123459,1985-07-20,\"M\",\"511 Aurora Av, Aurora,IL\",400,60000,30002,5),\n(\"E1005\",\"Ahmed\",\"Hussain\",123410,1981-04-01,\"M\",\"216 Oak Tree, Geneva,IL\",500,70000,30001,2),\n(\"E1006\",\"Nancy\",\"Allen\",123411,1978-06-02,\"F\",\"111 Green Pl, Elgin,IL\",600,90000,30001,2),\n(\"E1007\",\"Mary\",\"Thomas\",123412,1975-05-05,\"F\",\"100 Rose Pl, Gary,IL\",650,65000,30003,7),\n(\"E1008\",\"Bharath\",\"Gupta\",123413,1985-06-05,\"M\",\"145 Berry Ln, Naperville,IL\",660,65000,30003,7),\n(\"E1009\",\"Andrea\",\"Jones\",123414,1990-09-07,\"F\",\"120 Fall Creek, Gary,IL\",234,70000,30003,7),\n(\"E1010\",\"Ann\",\"Jacob\",123415,1982-03-30,\"F\",\"111 Britany Springs,Elgin,IL\",220,70000,30002,5)\n\n%%sql\n\nInsert into DEPARTMENTS (DEPT_ID_DEP, DEP_NAME, MANAGER_ID, LOC_ID)\nVALUES\n(2,\"Architect Group\",30001,\"L0001\"),\n(5,\"Software Group\",30002,\"L0002\"),\n(7,\"Design Team\",30003,\"L0003\")\n\n%%sql\n\nInsert into JOBS (JOB_IDENT, JOB_TITLE, MIN_SALARY, MAX_SALARY)\nVALUES\n(100,\"Sr. Architect\",60000,100000),\n(200,\"Sr. Software Developer\",60000,80000),\n(300,\"Jr.Software Developer\",40000,60000),\n(400,\"Jr.Software Developer\",40000,60000),\n(500,\"Jr. Architect\",50000,70000),\n(600,\"Lead Architect\",70000,100000),\n(650,\"Jr. Designer\",60000,70000),\n(660,\"Jr. Designer\",60000,70000),\n(234,\"Sr. Designer\",70000,90000),\n(220,\"Sr. Designer\",70000,90000)\n</code></pre> <pre><code>%%sql\n\nSELECT F_NAME, L_NAME\nFROM EMPLOYEES\nWHERE ADDRESS LIKE '%Elgin,IL%';\n</code></pre> F_NAME L_NAME Alice James Nancy Allen Ann Jacob"},{"location":"database/DA_SQL_Sorting_Grouping/#now-assume-that-you-want-to-identify-the-employees-who-were-born-during-the-70s-the-query-above-can-be-modified-to","title":"Now assume that you want to identify the employees who were born during the 70s. The query above can be modified to","text":"<pre><code>%%sql\n\nSELECT F_NAME, L_NAME\nFROM EMPLOYEES\nWHERE B_DATE LIKE '197%';\n</code></pre> F_NAME L_NAME Ahmed Hussain Nancy Allen Bharath Gupta Andrea Jones"},{"location":"database/DA_SQL_Sorting_Grouping/#let-us-retrieve-all-employee-records-in-department-5-where-salary-is-between-60000-and-70000-the-query-that-will-be-used-is","title":"Let us retrieve all employee records in department 5 where salary is between 60000 and 70000. The query that will be used is","text":"<pre><code>%%sql\n\nSELECT *\nFROM EMPLOYEES\nWHERE (SALARY BETWEEN 60000 AND 70000) AND DEP_ID = 5;\n</code></pre> EMP_ID F_NAME L_NAME SSN B_DATE SEX ADDRESS JOB_ID SALARY MANAGER_ID DEP_ID E1004 Santosh Kumar 123459 1958 M 511 Aurora Av, Aurora,IL 400 60000 30002 5 E1010 Ann Jacob 123415 1949 F 111 Britany Springs,Elgin,IL 220 70000 30002 5"},{"location":"database/DA_SQL_Sorting_Grouping/#sorting","title":"Sorting","text":"<p>retrieve a list of employees ordered by department ID.</p> <pre><code>%%sql\nSELECT F_NAME, L_NAME, DEP_ID \nFROM EMPLOYEES\nORDER BY DEP_ID;\n</code></pre> F_NAME L_NAME DEP_ID John Thomas 2 Ahmed Hussain 2 Nancy Allen 2 Alice James 5 Steve Wells 5 Santosh Kumar 5 Ann Jacob 5 Mary Thomas 7 Bharath Gupta 7 Andrea Jones 7"},{"location":"database/DA_SQL_Sorting_Grouping/#the-records-should-be-ordered-in-descending-alphabetical-order-by-last-name-for-descending-order-you-can-make-use-of-the-desc-clause","title":"the records should be ordered in descending alphabetical order by last name. For descending order, you can make use of the DESC clause","text":"<pre><code>%%sql\n\nSELECT F_NAME, L_NAME, DEP_ID \nFROM EMPLOYEES\nORDER BY DEP_ID DESC, L_NAME DESC;\n</code></pre> F_NAME L_NAME DEP_ID Mary Thomas 7 Andrea Jones 7 Bharath Gupta 7 Steve Wells 5 Santosh Kumar 5 Alice James 5 Ann Jacob 5 John Thomas 2 Ahmed Hussain 2 Nancy Allen 2"},{"location":"database/DA_SQL_Sorting_Grouping/#grouping","title":"Grouping","text":"<p>AVG is a function that can be used to calculate the Average or Mean of all values of a specified column in the result set.</p> <ul> <li>A good example of grouping would be if For each department ID, we wish to retrieve the number of employees in the department.</li> </ul> <pre><code>%%sql\n\nSELECT DEP_ID, COUNT(*)\nFROM EMPLOYEES\nGROUP BY DEP_ID;\n</code></pre> DEP_ID COUNT(*) 2 3 5 4 7 3"},{"location":"database/DA_SQL_Sorting_Grouping/#retrieve-the-number-of-employees-in-the-department-and-the-average-employee-salary-in-the-department","title":"retrieve the number of employees in the department and the average employee salary in the department","text":"<pre><code>%%sql\nSELECT DEP_ID, COUNT(*), AVG(SALARY)\nFROM EMPLOYEES\nGROUP BY DEP_ID;\n</code></pre> DEP_ID COUNT(*) AVG(SALARY) 2 3 86666.66666666667 5 4 65000.0 7 3 66666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#label-the-computed-columns-in-the-result-set-of-the-last-problem-as-num_employees-and-avg_salary","title":"Label the computed columns in the result set of the last problem as NUM_EMPLOYEES and AVG_SALARY","text":"<pre><code>%%sql\n\nSELECT DEP_ID, COUNT(*) AS \"NUM_EMPLOYEES\", AVG(SALARY) AS \"AVG_SALARY\"\nFROM EMPLOYEES\nGROUP BY DEP_ID;\n</code></pre> DEP_ID NUM_EMPLOYEES AVG_SALARY 2 3 86666.66666666667 5 4 65000.0 7 3 66666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#e-can-sort-the-result-of-the-previous-query-by-average-salary","title":"e can sort the result of the previous query by average salary","text":"<pre><code>%%sql\n\nSELECT DEP_ID, COUNT(*) AS \"NUM_EMPLOYEES\", AVG(SALARY) AS \"AVG_SALARY\"\nFROM EMPLOYEES\nGROUP BY DEP_ID\nORDER BY AVG_SALARY;\n</code></pre> DEP_ID NUM_EMPLOYEES AVG_SALARY 5 4 65000.0 7 3 66666.66666666667 2 3 86666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#we-wish-to-limit-the-result-to-departments-with-fewer-than-4-employees","title":"we wish to limit the result to departments with fewer than 4 employees","text":"<pre><code>%%sql\n\nSELECT DEP_ID, COUNT(*) AS \"NUM_EMPLOYEES\", AVG(SALARY) AS \"AVG_SALARY\"\nFROM EMPLOYEES\nGROUP BY DEP_ID\nHAVING count(*) &lt; 4\nORDER BY AVG_SALARY;\n</code></pre> DEP_ID NUM_EMPLOYEES AVG_SALARY 7 3 66666.66666666667 2 3 86666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#practice-questions","title":"Practice Questions","text":""},{"location":"database/DA_SQL_Sorting_Grouping/#1retrieve-the-list-of-all-employees-first-and-last-names-whose-first-names-start-with-s","title":"1.Retrieve the list of all employees, first and last names, whose first names start with \u2018S\u2019","text":"<pre><code>%%sql\nSELECT F_NAME, L_NAME\nFROM EMPLOYEES\nwhere F_NAME like 'S%';\n</code></pre> F_NAME L_NAME Steve Wells Santosh Kumar"},{"location":"database/DA_SQL_Sorting_Grouping/#2-arrange-all-the-records-of-the-employees-table-in-ascending-order-of-the-date-of-birth","title":"2. Arrange all the records of the EMPLOYEES table in ascending order of the date of birth","text":"<pre><code>%%sql\n\nSELECT* FROM EMPLOYEES\nORDER BY B_DATE\n</code></pre> EMP_ID F_NAME L_NAME SSN B_DATE SEX ADDRESS JOB_ID SALARY MANAGER_ID DEP_ID E1002 Alice James 123457 1934 F 980 Berry ln, Elgin,IL 200 80000 30002 5 E1010 Ann Jacob 123415 1949 F 111 Britany Springs,Elgin,IL 220 70000 30002 5 E1004 Santosh Kumar 123459 1958 M 511 Aurora Av, Aurora,IL 400 60000 30002 5 E1003 Steve Wells 123458 1962 M 291 Springs, Gary,IL 300 50000 30002 5 E1007 Mary Thomas 123412 1965 F 100 Rose Pl, Gary,IL 650 65000 30003 7 E1001 John Thomas 123456 1966 M 5631 Rice, OakPark,IL 100 100000 30001 2 E1006 Nancy Allen 123411 1970 F 111 Green Pl, Elgin,IL 600 90000 30001 2 E1008 Bharath Gupta 123413 1974 M 145 Berry Ln, Naperville,IL 660 65000 30003 7 E1009 Andrea Jones 123414 1974 F 120 Fall Creek, Gary,IL 234 70000 30003 7 E1005 Ahmed Hussain 123410 1976 M 216 Oak Tree, Geneva,IL 500 70000 30001 2"},{"location":"database/DA_SQL_Sorting_Grouping/#3-group-the-records-in-terms-of-the-department-ids-and-filter-them-of-ones-that-have-average-salary-more-than-or-equal-to-60000-display-the-department-id-and-the-average-salary","title":"3. Group the records in terms of the department IDs and filter them of ones that have average salary more than or equal to 60000. Display the department ID and the average salary","text":"<pre><code>%%sql\nSELECT DEP_ID,AVG(SALARY) as avg_salary from EMPLOYEES\nGROUP BY DEP_ID\nHAVING AVG(SALARY) &gt;= 60000;\n</code></pre> DEP_ID avg_salary 2 86666.66666666667 5 65000.0 7 66666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#for-the-problem-above-sort-the-results-for-each-group-in-descending-order-of-average-salary","title":"For the problem above, sort the results for each group in descending order of average salary","text":"<pre><code>%%sql\nSELECT DEP_ID,AVG(SALARY) as avg_salary from EMPLOYEES\nGROUP BY DEP_ID\nHAVING AVG(SALARY) &gt;= 60000\norder by AVG(SALARY) desc\n</code></pre> DEP_ID avg_salary 2 86666.66666666667 7 66666.66666666667 5 65000.0"},{"location":"database/DA_SQL_Sorting_Grouping/#exercise-1-string-patterns","title":"Exercise 1: String Patterns","text":""},{"location":"database/DA_SQL_Sorting_Grouping/#1-retrieve-all-employees-whose-address-is-in-elginil","title":"1. Retrieve all employees whose address is in Elgin,IL","text":"<pre><code>%%sql\n\nselect * from Employees\nwhere address like \"%Elgin,IL%\"\n</code></pre> EMP_ID F_NAME L_NAME SSN B_DATE SEX ADDRESS JOB_ID SALARY MANAGER_ID DEP_ID E1002 Alice James 123457 1934 F 980 Berry ln, Elgin,IL 200 80000 30002 5 E1006 Nancy Allen 123411 1970 F 111 Green Pl, Elgin,IL 600 90000 30001 2 E1010 Ann Jacob 123415 1949 F 111 Britany Springs,Elgin,IL 220 70000 30002 5"},{"location":"database/DA_SQL_Sorting_Grouping/#2-retrieve-all-employees-who-were-born-during-the-1970s","title":"2. Retrieve all employees who were born during the 1970\u2019s","text":"<pre><code>%%sql\n\nselect * from Employees\nwhere B_DATE like \"197%\"\n</code></pre> EMP_ID F_NAME L_NAME SSN B_DATE SEX ADDRESS JOB_ID SALARY MANAGER_ID DEP_ID E1005 Ahmed Hussain 123410 1976 M 216 Oak Tree, Geneva,IL 500 70000 30001 2 E1006 Nancy Allen 123411 1970 F 111 Green Pl, Elgin,IL 600 90000 30001 2 E1008 Bharath Gupta 123413 1974 M 145 Berry Ln, Naperville,IL 660 65000 30003 7 E1009 Andrea Jones 123414 1974 F 120 Fall Creek, Gary,IL 234 70000 30003 7"},{"location":"database/DA_SQL_Sorting_Grouping/#3-retrieve-all-employees-in-department-5-whose-salary-is-between-60000-and-70000","title":"3. Retrieve all employees in department 5 whose salary is between 60000 and 70000","text":"<pre><code>%%sql\n\nselect * from Employees\nwhere DEP_ID =5 and salary between 60000 and 70000\n</code></pre> EMP_ID F_NAME L_NAME SSN B_DATE SEX ADDRESS JOB_ID SALARY MANAGER_ID DEP_ID E1004 Santosh Kumar 123459 1958 M 511 Aurora Av, Aurora,IL 400 60000 30002 5 E1010 Ann Jacob 123415 1949 F 111 Britany Springs,Elgin,IL 220 70000 30002 5"},{"location":"database/DA_SQL_Sorting_Grouping/#exercise-2-sorting","title":"Exercise 2: Sorting","text":""},{"location":"database/DA_SQL_Sorting_Grouping/#retrieve-a-list-of-employees-ordered-by-department-id","title":"Retrieve a list of employees ordered by department ID","text":"<pre><code>%%sql\nselect * from employees\nOrder by DEP_ID\n</code></pre> EMP_ID F_NAME L_NAME SSN B_DATE SEX ADDRESS JOB_ID SALARY MANAGER_ID DEP_ID E1001 John Thomas 123456 1966 M 5631 Rice, OakPark,IL 100 100000 30001 2 E1005 Ahmed Hussain 123410 1976 M 216 Oak Tree, Geneva,IL 500 70000 30001 2 E1006 Nancy Allen 123411 1970 F 111 Green Pl, Elgin,IL 600 90000 30001 2 E1002 Alice James 123457 1934 F 980 Berry ln, Elgin,IL 200 80000 30002 5 E1003 Steve Wells 123458 1962 M 291 Springs, Gary,IL 300 50000 30002 5 E1004 Santosh Kumar 123459 1958 M 511 Aurora Av, Aurora,IL 400 60000 30002 5 E1010 Ann Jacob 123415 1949 F 111 Britany Springs,Elgin,IL 220 70000 30002 5 E1007 Mary Thomas 123412 1965 F 100 Rose Pl, Gary,IL 650 65000 30003 7 E1008 Bharath Gupta 123413 1974 M 145 Berry Ln, Naperville,IL 660 65000 30003 7 E1009 Andrea Jones 123414 1974 F 120 Fall Creek, Gary,IL 234 70000 30003 7"},{"location":"database/DA_SQL_Sorting_Grouping/#2-retrieve-a-list-of-employees-ordered-by-department-name-and-within-each-department-ordered-alphabetically-in-descending-order-by-last-name","title":"2. Retrieve a list of employees ordered by department name, and within each department ordered alphabetically in descending order by last name","text":"<pre><code>%%sql\n\nselect * from departments,employees\nWHERE DEP_ID = DEPT_ID_DEP\n\nOrder by DEP_NAME,L_NAME   desc\n</code></pre> DEPT_ID_DEP DEP_NAME MANAGER_ID LOC_ID EMP_ID F_NAME L_NAME SSN B_DATE SEX ADDRESS JOB_ID SALARY MANAGER_ID_1 DEP_ID 2 Architect Group 30001 L0001 E1001 John Thomas 123456 1966 M 5631 Rice, OakPark,IL 100 100000 30001 2 2 Architect Group 30001 L0001 E1005 Ahmed Hussain 123410 1976 M 216 Oak Tree, Geneva,IL 500 70000 30001 2 2 Architect Group 30001 L0001 E1006 Nancy Allen 123411 1970 F 111 Green Pl, Elgin,IL 600 90000 30001 2 7 Design Team 30003 L0003 E1007 Mary Thomas 123412 1965 F 100 Rose Pl, Gary,IL 650 65000 30003 7 7 Design Team 30003 L0003 E1009 Andrea Jones 123414 1974 F 120 Fall Creek, Gary,IL 234 70000 30003 7 7 Design Team 30003 L0003 E1008 Bharath Gupta 123413 1974 M 145 Berry Ln, Naperville,IL 660 65000 30003 7 5 Software Group 30002 L0002 E1003 Steve Wells 123458 1962 M 291 Springs, Gary,IL 300 50000 30002 5 5 Software Group 30002 L0002 E1004 Santosh Kumar 123459 1958 M 511 Aurora Av, Aurora,IL 400 60000 30002 5 5 Software Group 30002 L0002 E1002 Alice James 123457 1934 F 980 Berry ln, Elgin,IL 200 80000 30002 5 5 Software Group 30002 L0002 E1010 Ann Jacob 123415 1949 F 111 Britany Springs,Elgin,IL 220 70000 30002 5 <pre><code>%%sql\nSELECT D.DEP_NAME , E.F_NAME, E.L_NAME\nFROM EMPLOYEES as E, DEPARTMENTS as D\nWHERE E.DEP_ID = D.DEPT_ID_DEP\nORDER BY D.DEP_NAME, E.L_NAME DESC;\n</code></pre> DEP_NAME F_NAME L_NAME Architect Group John Thomas Architect Group Ahmed Hussain Architect Group Nancy Allen Design Team Mary Thomas Design Team Andrea Jones Design Team Bharath Gupta Software Group Steve Wells Software Group Santosh Kumar Software Group Alice James Software Group Ann Jacob"},{"location":"database/DA_SQL_Sorting_Grouping/#exercise-3-grouping","title":"Exercise 3: Grouping","text":""},{"location":"database/DA_SQL_Sorting_Grouping/#1-for-each-department-id-retrieve-the-number-of-employees-in-the-department","title":"1. For each department ID retrieve the number of employees in the department","text":"<pre><code>%%sql\n\nselect DEP_ID, count(*) as num_of_emp from employees\nGroup By DEP_ID\n</code></pre> DEP_ID num_of_emp 2 3 5 4 7 3"},{"location":"database/DA_SQL_Sorting_Grouping/#for-each-department-retrieve-the-number-of-employees-in-the-department-and-the-average-employee-salary-in-the-department","title":"For each department retrieve the number of employees in the department, and the average employee salary in the department","text":"<pre><code>%%sql\nselect DEP_ID,count(*) as num_of_emp,AVG(SALARY) from employees\nGroup By DEP_ID;\n</code></pre> DEP_ID num_of_emp AVG(SALARY) 2 3 86666.66666666667 5 4 65000.0 7 3 66666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#3-label-the-computed-columns-in-the-result-set-of-sql-problem-2-exercise-3-problem-2-as-num_employees-and-avg_salary","title":"3. Label the computed columns in the result set of SQL problem 2 (Exercise 3 Problem 2) as NUM_EMPLOYEES and AVG_SALARY","text":"<pre><code>%%sql\nSELECT DEP_ID, COUNT(*) AS \"NUM_EMPLOYEES\", AVG(SALARY) AS \"AVG_SALARY\"\nFROM EMPLOYEES\nGROUP BY DEP_ID;\n</code></pre> DEP_ID NUM_EMPLOYEES AVG_SALARY 2 3 86666.66666666667 5 4 65000.0 7 3 66666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#in-sql-problem-3-exercise-3-problem-3-order-the-result-set-by-average-salary","title":"In SQL problem 3 (Exercise 3 Problem 3), order the result set by Average Salary","text":"<pre><code>%%sql\nSELECT DEP_ID, COUNT(*) AS \"NUM_EMPLOYEES\", AVG(SALARY) AS \"AVG_SALARY\"\nFROM EMPLOYEES\nGROUP BY DEP_ID\nORDER BY AVG_SALARY;\n</code></pre> DEP_ID NUM_EMPLOYEES AVG_SALARY 5 4 65000.0 7 3 66666.66666666667 2 3 86666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#in-sql-problem-4-exercise-3-problem-4-limit-the-result-to-departments-with-fewer-than-4-employees","title":"In SQL problem 4 (Exercise 3 Problem 4), limit the result to departments with fewer than 4 employees","text":"<pre><code>%%sql\nSELECT DEP_ID, COUNT(*) AS \"NUM_EMPLOYEES\", AVG(SALARY) AS \"AVG_SALARY\"\nFROM EMPLOYEES\nGROUP BY DEP_ID\nHAVING count(*) &lt; 4\nORDER BY AVG_SALARY;\n</code></pre> DEP_ID NUM_EMPLOYEES AVG_SALARY 7 3 66666.66666666667 2 3 86666.66666666667"},{"location":"database/DA_SQL_Sorting_Grouping/#you-want-to-select-the-authors-lastname-from-a-table-but-you-only-remember-that-it-starts-with-the-letter-j-which-of-the-following-queries-uses-the-correct-string-pattern","title":"You want to select the author's lastname from a table, but you only remember that it starts with the letter J. Which of the following queries uses the correct string pattern?","text":"<pre><code>SELECT lastname from author where lastname like \u2018J%\u2019 \n\nSELECT lastname from author where lastname like \u2018J*\u2019 \n\nSELECT lastname from author where lastname like \u2018J$\u2019 \n\nSELECT lastname from author where lastname like \u2018J#\u2019 \n</code></pre>"},{"location":"database/DA_SQL_Sorting_Grouping/#question-2-in-sql-which-of-the-following-will-be-the-correct-way-to-sort-a-result-set-in-descending-order","title":"Question 2 In SQL, which of the following will be the correct way to sort a result set in descending order?","text":"<pre><code>SELECT ID FROM TABLE_NAME ORDER BY ID DESC \n\nSELECT * FROM TABLE_NAME ORDER BY ID DESC \n\nSELECT * FROM TABLE_NAME ORDER BY ID \n\nSELECT ID FROM TABLE_NAME ORDER BY ID \n</code></pre> <p>What is the role of HAVING clause in SQL queries in MySQL?</p> <p>Acts as an alternative to WHERE clause in SQL queries.  It may not necessarily organize the result set in a specific order. Check whether data records meet the specified condition is met or not. Restricts the result set for a query using GROUP BY clause.</p>"},{"location":"database/DA_SQL_Sorting_Grouping/#question-4-which-of-the-choices-best-describe-the-function-of-the-following-sql-query","title":"Question 4 Which of the choices best describe the function of the following SQL query?","text":"<pre><code>SELECT * FROM employees ORDER BY emp_name LIMIT 5; \n</code></pre> <p>Retrieves all the columns of the top 5 rows of the table, sorted alphabetically based on emp_names</p> <p>Retrieves all the columns of the top 5 rows of the table, sorted reverse alphabetically based on emp_names</p> <p>Retrieves the entire contents of the table, sorted alphabetically based on emp_names</p> <p>Retrieves the top 5 emp_names ordered alphabetically.</p>"},{"location":"database/DA_SQL_Sorting_Grouping/#question-5-which-of-the-following-sql-statements-lists-the-number-of-customers-in-each-country-showing-only-the-countries-with-more-than-five-customers","title":"Question 5 Which of the following SQL statements lists the number of customers in each country, showing only the countries with more than five customers?","text":"<pre><code>SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING CustomerID &gt; 5; \n\nSELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) &gt; 5; \n\nSELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) &lt; 5; \n\nSELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(Customers) &gt; 5; \n</code></pre>"},{"location":"database/DA_SQL_built-in_function/","title":"Hands-on Lab: Built-in functions - Aggregate, Scalar, String, Date and Time Functions","text":"<pre><code>ID ANIMAL QUANTITY COST RESCUEDATE\n1 Cat 9 450.09 5/29/2018\n2 Dog 3 666.66 6/1/2018\n3 Dog 1 100 6/4/2018\n4 Parrot 2 50 6/4/2018\n5 Dog 1 75.75 6/10/2018\n6 Hamster 6 60.6 6/11/2018\n7 Cat 1 44.44 6/11/2018\n8 Goldfish 24 48.48 6/14/2018\n9 Dog 2 222.22 6/15/2018\n</code></pre>"},{"location":"database/DA_SQL_built-in_function/#after-completing-this-lab-you-will-be-able-to","title":"After completing this lab, you will be able to","text":"<p>Compose and run sub-queries with multiple tables Check query results and view log files</p> <p>%load_ext sql</p> <p>The sql extension is already loaded. To reload it, use:   %reload_ext sql</p> <p>%sql sqlite:///PETRESCUE-CREATE.db</p>"},{"location":"database/DA_SQL_built-in_function/#exercise-2-aggregate-functions","title":"Exercise 2: Aggregate Functions","text":""},{"location":"database/DA_SQL_built-in_function/#query-a1-enter-a-function-that-calculates-the-total-cost-of-all-animal-rescues-in-the-petrescue-table","title":"Query A1: Enter a function that calculates the total cost of all animal rescues in the PETRESCUE table.","text":"<pre><code>%%sql\nselect * from PETRESCUE \n</code></pre> <p>Query A2: Enter a function that displays the total cost of all animal rescues in the PETRESCUE table in a column called SUM_OF_COST.</p> <p>Query A3: Enter a function that displays the maximum quantity of animals rescued.</p> <p>Query A4: Enter a function that displays the average cost of animals rescued.</p> <p>Query A5: Enter a function that displays the average cost of rescuing a dog.</p>"},{"location":"database/DA_SQL_built-in_function/#exercise-3-scalar-and-string-functions","title":"Exercise 3: Scalar and String Functions","text":"<p>Query B1: Enter a function that displays the rounded cost of each rescue.</p> <p>Query B2: Enter a function that displays the length of each animal name.</p> <p>Query B3: Enter a function that displays the animal name in each rescue in uppercase.</p> <p>Query B4: Enter a function that displays the animal name in each rescue in uppercase without duplications.</p> <p>Query B5: Enter a query that displays all the columns from the PETRESCUE table, where the animal(s) rescued are cats. Use cat in lower case in the query.</p>"},{"location":"database/DA_SQL_built-in_function/#exercise-4-date-and-time-functions","title":"Exercise 4: Date and Time Functions","text":"<p>Query C1: Enter a function that displays the day of the month when cats have been rescued.</p> <p>Query C2: Enter a function that displays the number of rescues on the 5th month.</p> <p>Query C3: Enter a function that displays the number of rescues on the 14th day of the month.</p> <p>Query C4: Animals rescued should see the vet within three days of arrivals. Enter a function that displays the third day from each rescue.</p> <p>Query C5: Enter a function that displays the length of time the animals have been rescued; the difference between todays date and the rescue date.</p>"},{"location":"database/DA_SQL_built-in_function/#lab-solutions","title":"Lab Solutions","text":"<p>Exercise 2 Solutions: Aggregate Functions Query A1: Enter a function that calculates the total cost of all animal rescues in the PETRESCUE table.</p> <p>select SUM(COST) from PETRESCUE;</p> <p>Query A2: Enter a function that displays the total cost of all animal rescues in the PETRESCUE table in a column called SUM_OF_COST.</p> <p>select SUM(COST) AS SUM_OF_COST from PETRESCUE;</p> <p>Query A3: Enter a function that displays the maximum quantity of animals rescued.</p> <p>select MAX(QUANTITY) from PETRESCUE;</p> <p>Query A4: Enter a function that displays the average cost of animals rescued.</p> <p>select AVG(COST) from PETRESCUE;</p> <p>Query A5: Enter a function that displays the average cost of rescuing a dog.</p> <p>Hint - Bear the cost of rescuing one dog on one day, which is different from another day. So you will have to use an average of averages.</p> <p>select AVG(COST/QUANTITY) from PETRESCUE where ANIMAL = 'Dog';</p> <p>Exercise 3 Solutions: Scalar and String Functions Query B1: Enter a function that displays the rounded cost of each rescue.</p> <p>select ROUND(COST) from PETRESCUE;</p> <p>Query B2: Enter a function that displays the length of each animal name.</p> <p>select LENGTH(ANIMAL) from PETRESCUE;</p> <p>Query B3: Enter a function that displays the animal name in each rescue in uppercase.</p> <p>select UCASE(ANIMAL) from PETRESCUE;</p> <p>Query B4: Enter a function that displays the animal name in each rescue in uppercase without duplications.</p> <p>`select DISTINCT(UCASE(ANIMAL)) from PETRESCUE;</p> <p>Query B5: Enter a query that displays all the columns from the PETRESCUE table, where the animal(s) rescued are cats. Use cat in lower case in the query.</p> <p>select * from PETRESCUE where LCASE(ANIMAL) = 'cat';</p> <p>Exercise 4 Solutions: Date and Time Functions Query C1: Enter a function that displays the day of the month when cats have been rescued.</p> <p>select DAY(RESCUEDATE) from PETRESCUE where ANIMAL = 'Cat';</p> <p>Query C2: Enter a function that displays the number of rescues on the 5th month.</p> <p>select SUM(QUANTITY) from PETRESCUE where MONTH(RESCUEDATE)='05';</p> <p>Query C3: Enter a function that displays the number of rescues on the 14th day of the month.</p> <p>select SUM(QUANTITY) from PETRESCUE where DAY(RESCUEDATE)='14';</p> <p>Query C4: Animals rescued should see the vet within three days of arrivals. Enter a function that displays the third day from each rescue.</p> <p>select (RESCUEDATE + 3 DAYS) from PETRESCUE;</p> <p>Query C5: Enter a function that displays the length of time the animals have been rescued; the difference between todays date and the rescue date.</p> <p>select (CURRENT DATE - RESCUEDATE) from PETRESCUE;</p>"},{"location":"database/DA_SQL_having/","title":"Grouping Result Sets","text":"<ul> <li>Eleminate duplicates from  a reult set</li> <li>How to restrict a result sets</li> </ul>"},{"location":"database/DA_SQL_having/#eliminating-duplicates-distinct-clause","title":"Eliminating Duplicates - DISTINCT clause","text":"<pre><code>%load_ext sql\n%sql sqlite:///bookstore.db\n\nselect country from author ORDER BY 1\n</code></pre> Country Argentina Australia Brazil Canada China Colombia France Germany India Italy Japan Mexico Netherlands Portugal Russia South Africa Spain UK USA USA"},{"location":"database/DA_SQL_having/#the-order-by-clause-sorts-the-result-set","title":"The order by clause sorts the result set","text":""},{"location":"database/DA_SQL_having/#the-authors-come-from-the-same-country-so-the-result-set-contains-duplicates","title":"the authors come from the same country, so the result set contains duplicates","text":"<pre><code>%%sql\n\nselect count(country) from author ORDER BY 1\n</code></pre> count(country) 20 <pre><code>%%sql\n\nselect Distinct(country) from author ORDER BY 1\n</code></pre> Country Argentina Australia Brazil Canada China Colombia France Germany India Italy Japan Mexico Netherlands Portugal Russia South Africa Spain UK USA <pre><code>%%sql\n\nselect count(Distinct(country)) from author ORDER BY 1\n</code></pre> count(Distinct(country)) 19"},{"location":"database/DA_SQL_having/#to-eliminate-duplicates-we-use-the-keyword-distinct","title":"To eliminate duplicates, we use the keyword distinct","text":"<pre><code>%%sql\n\nselect country, count(country) as count from author\nGroup BY country\n</code></pre> Country count Argentina 1 Australia 1 Brazil 1 Canada 1 China 1 Colombia 1 France 1 Germany 1 India 1 Italy 1 Japan 1 Mexico 1 Netherlands 1 Portugal 1 Russia 1 South Africa 1 Spain 1 UK 1 USA 2"},{"location":"database/DA_SQL_having/#the-group-by-clause-groups-a-result-into-subsets-that-has-matching-values-for-one-or-more-columns","title":"The \"group by\" clause groups a result into subsets that has matching values for one or more columns","text":"<pre><code>%%sql\n\nselect country, count(country) as count from author\nGroup BY country\nHaving count(country) &gt; 3;\n</code></pre> Country count USA 4"},{"location":"database/DA_SQL_having/#the-having-clause-is-used-in-combination-with-the-group-by-clause","title":"The \"having\" clause is used in combination with the \"group by\" clause","text":""},{"location":"database/DA_SQL_having/#the-having-clause-works-only-with-the-group-by-clause","title":"the \"having\" clause works only with the \"group by\" clause","text":""},{"location":"database/DA_SQL_limit_count/","title":"DA SQL limit count","text":"<p>%load_ext sql %sql sqlite:///DA.db</p> <p>%sql SELECT name FROM sqlite_master WHERE type='table';</p> <pre><code>%%sql\nCREATE TABLE Awards (\n    Awardee TEXT,\n    Country TEXT,\n    Award TEXT,\n    Year INTEGER\n);\n</code></pre> <pre><code>%%sql\nINSERT INTO Awards (Awardee, Country, Award, Year) VALUES\n('John', 'Canada', 'Gold', 2023),\n('Sam', 'India', 'Gold', 2023),\n('Peter', 'Canada', 'Silver', 2022),\n('Aby', 'Australia', 'Gold', 2023),\n('Richard', 'Canada', 'Bronze', 2023),\n('David', 'Canada', 'Gold', 2023),\n('Alice', 'India', 'Gold', 2023),\n('Tom', 'Australia', 'Silver', 2022),\n('Nancy', 'Canada', 'Gold', 2023),\n('Paul', 'India', 'Bronze', 2023),\n('Eve', 'Australia', 'Gold', 2022),\n('Liam', 'Canada', 'Silver', 2023),\n('Sophia', 'India', 'Gold', 2022),\n('James', 'Australia', 'Bronze', 2023),\n('Olivia', 'Canada', 'Gold', 2022),\n('Noah', 'India', 'Silver', 2023),\n('Emma', 'Australia', 'Gold', 2023),\n('Mason', 'Canada', 'Bronze', 2022),\n('Ava', 'India', 'Gold', 2022),\n('Logan', 'Australia', 'Silver', 2023),\n('Isabella', 'Canada', 'Gold', 2023),\n('Lucas', 'India', 'Bronze', 2022),\n('Mia', 'Australia', 'Gold', 2022),\n('Jackson', 'Canada', 'Silver', 2023),\n('Amelia', 'India', 'Gold', 2023),\n('Ethan', 'Australia', 'Bronze', 2022),\n('Harper', 'Canada', 'Gold', 2023),\n('Sebastian', 'India', 'Silver', 2023),\n('Avery', 'Australia', 'Gold', 2023),\n('Matthew', 'Canada', 'Bronze', 2022),\n('Ella', 'India', 'Gold', 2023),\n('Owen', 'Australia', 'Silver', 2022),\n('Zoe', 'Canada', 'Gold', 2023),\n('Landon', 'India', 'Bronze', 2023),\n('Charlotte', 'Australia', 'Gold', 2022),\n('Daniel', 'Canada', 'Silver', 2022),\n('Sofia', 'India', 'Gold', 2023),\n('Ryan', 'Australia', 'Bronze', 2023),\n('Mila', 'Canada', 'Gold', 2023),\n('Jameson', 'India', 'Silver', 2022),\n('Layla', 'Australia', 'Gold', 2023),\n('Gabriel', 'Canada', 'Bronze', 2023),\n('Riley', 'India', 'Gold', 2022),\n('Hunter', 'Australia', 'Silver', 2023),\n('Aiden', 'Canada', 'Gold', 2023);\n</code></pre> <pre><code>%%sql\nselect * from Awards\n</code></pre> Awardee Country Award Year John Canada Gold 2023 Sam India Gold 2023 Peter Canada Silver 2022 Aby Australia Gold 2023 Richard Canada Bronze 2023 David Canada Gold 2023 <pre><code>%%sql\nALTER TABLE Awards RENAME TO Medals;\n</code></pre>"},{"location":"database/DA_SQL_limit_count/#count","title":"Count","text":"<ol> <li>Count</li> </ol> <ul> <li>Built-in database fucnction</li> <li>retrives the number of rows</li> <li><code>select COUNT(*) from tablename</code></li> </ul> <pre><code>%%sql\nselect COUNT(COUNTRY) from MEDALS\n</code></pre> COUNT(COUNTRY) 6"},{"location":"database/DA_SQL_limit_count/#distinct","title":"Distinct","text":"<ol> <li>Distinct Removes duplicate values from a resultset. - Retrieves unique values in a column: - <code>select DISTINCT columnname from table</code></li> </ol> <pre><code>%%sql\nselect DISTINCT COUNTRY from MEDALS where Award= \"Gold\"\n</code></pre> Country Canada India Australia"},{"location":"database/DA_SQL_limit_count/#limit","title":"Limit","text":"<p>Retrieve just the first 10 rows in a table: - <code>select * from tablename LIMIT 10</code></p> <pre><code>%%sql\nselect * from medals where year = 2023 LIMIT 3\n</code></pre> Awardee Country Award Year John Canada Gold 2023 Sam India Gold 2023 Aby Australia Gold 2023 <pre><code>%%sql\nCREATE TABLE IF NOT EXISTS Awards (\n    Awardee TEXT,\n    Country TEXT,\n    Award TEXT,\n    Year INTEGER\n);\n</code></pre> <p>%reload_ext sql %sql sqlite:///sf-film-locations.db</p> name Title Director Writer Release Year Actors Production Company Distributor Film_Locations_in_San_Francisco Film_Locations_in_San_Francisco_fts Film_Locations_in_San_Francisco_fts_segments Film_Locations_in_San_Francisco_fts_segdir Film_Locations_in_San_Francisco_fts_docsize Film_Locations_in_San_Francisco_fts_stat <p>%%sql select * from Film_Locations_in_San_Francisco</p> Title Release Year Locations Fun Facts Production Company Distributor Director Writer Actor 1 Actor 2 Actor 3 1 1 Epic Roasthouse (399 Embarcadero) None 1 None 1 1 237 1 439 1 1 Mason &amp; California Streets (Nob Hill) None 1 None 1 1 237 1 439 1 1 Justin Herman Plaza None 1 None 1 1 237 1 439 1 1 200 block Market Street None 1 None 1 1 237 1 439 1 1 City Hall None 1 None 1 1 237 1 439 1 1 Polk &amp; Larkin Streets None 1 None 1 1 237 1 439 1 1 Randall Museum None 1 None 1 1 237 1 439 1 1 555 Market St. None 1 None 1 1 237 1 439 2 2 None None 2 1 2 None 238 None None 3 3 The Walden House, Buena Vista Park Established in 1867, Buena Vista Park is the oldest official park in San Francisco. 3 2 3 2 239 2 None 3 3 Caf\u00e9 Trieste (609 Vallejo) Francis Ford Coppola allegedly wrote large portions of \"The Godfather\" trilogy in Caf\u00e9 Trieste. 3 2 3 2 239 2 None 4 4 None None 4 3 4 3 19 3 440 5 5 Rainforest Caf\u00e9 (145 Jefferson Street) None 5 4 5 4 240 4 None 6 6 20th and Folsom Streets None 6 5 6 5 241 5 None 6 6 Golden Gate Park During San Francisco's Gold Rush era, the Park was part of an area designated as the \"Great Sand Waste\".  6 5 6 5 241 5 None 7 7 Embarcadero Freeway Embarcadero Freeway, which was featured in the film was demolished in 1989 because of structural damage from the 1989 Loma Prieta Earthquake) 7 6 7 6 242 6 None 7 7 Fairmont Hotel (950 Mason Street, Nob Hill) In 1945 the Fairmont hosted the United Nations Conference on International Organization as delegates arrived to draft a charter for the organization. The U.S. Secretary of State, Edward Stettinius drafted the charter in the hotel's Garden Room. 7 6 7 6 242 6 None 7 7 San Francisco Chronicle (901 Mission Street at 15th Street) The San Francisco Zodiac Killer of the late 1960s sent his notes and letters to the Chronicle's offices. 7 6 7 6 242 6 None 7 7 Broadway (North Beach) None 7 6 7 6 242 6 None 8 8 75 California Street None 4 3 8 7 243 7 None 9 8 Grace Cathedral Episcopal Church (1100 California Street) Grace Cathedral Episcopal Church is the West Coast's largest Episcopalian cathedral. 4 3 8 7 243 7 None 9 8 Hills Brothers Plaza (Embarcadero at Harrison Street) None 4 3 8 7 243 7 None 9 8 San Francisco International Airport SFO has a museum dedicated to aviation history.  4 3 8 7 243 7 None 10 9 City Hall The dome of SF's City Hall is almost a foot taller than that of the US Capitol Building. In 1954, Joe DiMaggio and Marilyn Monroe married at the Beaux Arts-style building. 8 7 9 8 244 8 441 10 9 Port of San Francisco  None 8 7 9 8 244 8 441 11 10 420 Jones St. at Ellis St. None 9 8 10 9 245 9 None 10 9 Lefty O' Doul Drawbridge/ 3rd Street Bridge (3rd Street, China Basin) This is SF's only drawbridge, and was named after Francis Joseph \"Lefty\" O'Doul, a local baseball hero. 8 7 9 8 244 8 441 10 9 Golden Gate Bridge With 23 miles of ladders and 300,000 rivets in each tower, the Golden Gate Bridge was the world's longest span when it opened in 1937. 8 7 9 8 244 8 441 10 9 Embarcadero Freeway Embarcadero Freeway, which was featured in the film, was demolished in 1989 because of structural damage from the 1989 Loma Prieta Earthquake) 8 7 9 8 244 8 441 10 9 Potrero Hill The most crooked street in San Francisco is actually Potrero Hill's Vermont Street between 20th St &amp; 22nd St. 8 7 9 8 244 8 441 10 9 City Hall The dome of SF's City Hall is almost a foot taller than that of the US Capitol Building. In 1954, Joe DiMaggio and Marilyn Monroe married at the Beaux Arts-style building. 8 7 9 8 244 8 441 10 9 Chinatown First established in the mid-19th Century, SF's Chinatown is the oldest and largest Chinatown in the US. 8 7 9 8 244 8 441 10 9 Burger Island (901 3rd Street, China Basin) None 8 7 9 8 244 8 441 10 9 Van Ness Avenue None 8 7 9 8 244 8 441 10 9 Taylor and Jefferson Streets (Fisherman's Wharf) None 8 7 9 8 244 8 441 12 11 Broderick from Fulton to McAlister None 10 9 11 10 246 10 None 12 11 Crissy Field None 10 9 11 10 246 10 None 12 11 Powell from Bush and Sutter None 10 9 11 10 246 10 None 13 12 Coit Tower The Tower was funded by a gift bequeathed by Lillie Hitchcock Coit, a socialite who reportedly liked to chase fires. Though the tower resembles a firehose nozzle, it was not designed this way. 8 10 12 11 247 11 432 14 10 Pier 50- end of the pier None 11 None 13 12 248 12 442 14 10 California @ Montgomery None 11 None 13 12 248 12 442 14 10 Montgomery/Green None 11 None 13 12 248 12 442 14 10 Driving various SF Streets None 11 None 13 12 248 12 442 14 10 Plate Shots SF streets various None 11 None 13 12 248 12 442 15 13 Filbert St. from Jones to Mason None 12 11 14 13 249 13 None 15 13 Leavenworth from Filbert &amp; Francisco St None 12 11 14 13 249 13 None 15 13 Chestnut St. from Larkin to Columbus None 12 11 14 13 249 13 None 15 13 Francisco St from Larkin to Polk None 12 11 14 13 249 13 None 15 13 Broadway from Mason to Taylor None 12 11 14 13 249 13 None 15 13 Taylor St. from Broadway to Filbert None 12 11 14 13 249 13 None 11 10 Broadway between Powell and Davis Driving shots 9 8 10 9 245 9 None 16 14 Cliff House (1090 Point Lobos Avenue) In 1887, the Cliff House was severely damaged when the schooner Parallel, abandoned and loaded with dynamite, ran aground on the rocks below. 13 12 15 14 250 14 443 16 14 San Francisco Bay None 13 12 15 14 250 14 443 16 14 Fairmont Hotel (950 Mason Street, Nob Hill) In 1945 the Fairmont hosted the United Nations Conference on International Organization as delegates arrived to draft a charter for the organization. The U.S. Secretary of State, Edward Stettinius drafted the charter in the hotel's Garden Room. 13 12 15 14 250 14 443 17 15 Curran Theater (445 Geary Street) Called the Shubert Theatre in the film.  14 13 16 15 251 15 444 18 16 Mel's Drive-In (Corner of Van Ness &amp; Mission Street, Mission District) This restaurant location was demolished; however another Mel's was reopened in 1986 on 3355 Geary Blvd.  15 14 17 16 252 16 445 18 16 3355 Geary Blvd. None 15 14 17 16 252 16 445 19 5 None None 16 None 18 17 253 17 None 20 10 St. Francis Episcopal Church (399 San Fernando Way) None 17 None 19 18 254 18 446 20 10 Romolo Place @ Fresno St. None 17 None 19 18 254 18 446 20 10 Palace of Fine Arts None 17 None 19 18 254 18 446 20 10 John Shelley Drive John McLaren Park None 17 None 19 18 254 18 446 20 10 Treasure Island None 17 None 19 18 254 18 446 20 10 The San Francisco School (300 Gavin St.) None 17 None 19 18 254 18 446 20 10 33 Spruce St None 17 None 19 18 254 18 446 20 10 Coi Restaurant (373 Broadway) None 17 None 19 18 254 18 446 20 10 Foreign Cinema (2534 Mission) None 17 None 19 18 254 18 446 20 10 Bernal Heights Park None 17 None 19 18 254 18 446 20 10 Jackson St. at Spruce None 17 None 19 18 254 18 446 20 10 679 Madrid St None 17 None 19 18 254 18 446 20 10 Roxie Theater (3117 16th St.) None 17 None 19 18 254 18 446 20 10 Variety Preview Room (582 Market St.) None 17 None 19 18 254 18 446 20 10 Laguna Honda Hospital; 375 Laguna Honda Blvd. None 17 None 19 18 254 18 446 20 10 3232 Jackson Ave. None 17 None 19 18 254 18 446 20 10 20th St and Illinois/Faxon St. and Kenwood/Glenbrook at Mt. Springs None 17 None 19 18 254 18 446 21 17 None None 18 3 4 3 3 19 None 11 10 Conzelman Rd at McCollough Rd and down Conzelman Rd. Aerial shots 9 8 10 9 245 9 None 11 10 Lombard at Hyde None 9 8 10 9 245 9 None 11 10 601 Buena Vista Ave West at Java St. None 9 8 10 9 245 9 None 11 10 Columbus between Bay and Washington Driving shots 9 8 10 9 245 9 None 11 10 California between Kearney and Davis Driving shots 9 8 10 9 245 9 None 11 10 Pine between Kearney and Davis Driving shots 9 8 10 9 245 9 None 11 10 Market between Stuart and Van Ness Driving shots 9 8 10 9 245 9 None 11 10 Grant between Bush and Broadway Driving shots 9 8 10 9 245 9 None 11 10 Intersection of Broadway at Kearney Driving shots 9 8 10 9 245 9 None 11 10 Intersection of California at Polk Driving shots 9 8 10 9 245 9 None 11 10 Treasure Island, Building #1, Ave of the Palms Aerial and exterior shots 9 8 10 9 245 9 None 22 18 Ocean Beach On Jan. 25, 1878, the King Philip ship crashed in Ocean Beach. Occasionally, the ship's wreckage may be found on the beach-- most recently it was seen in 2007.  19 15 20 19 255 None None 23 7 Hyde Street Cable Car SF Cable Cars are the only moving National Historical Landmark. 20 16 21 20 256 None None 24 19 None None 21 17 22 21 257 20 None 25 20 Fairmont Hotel (950 Mason Street, Nob Hill) None 22 18 23 22 258 21 447 25 20 Embarcadero around Rincon Park None 22 18 23 22 258 21 447 25 20 San Remo Hotel (2237 Mason) None 22 18 23 22 258 21 447 25 20 Huntington Park (California &amp; Taylor Streets, Nob Hill) None 22 18 23 22 258 21 447 25 20 Driving around Taylor/Pacific/Leavenworth None 22 18 23 22 258 21 447 25 20 California and Jones St. None 22 18 23 22 258 21 447 25 20 Another Caf\u00e9, 1191 Pine St at Leavenworth None 22 18 23 22 258 21 447 26 21 None None 23 19 24 23 259 22 448 27 22 Yerba Buena Center for the Arts None 24 20 25 24 245 23 449 27 22 Transbay Terminal (Mission Street at 1st Street) Built in 1939, the Terminal linked San Francisco, the East Bay, and Sacramento by rail for the first time. 24 20 25 24 245 23 449 27 22 Tosca Caf\u00e9 (242 Columbus Avenue) None 24 20 25 24 245 23 449 27 22 Steinhart Aquarium (California Academy of Sciences, Golden Gate Park) The Steinhart Aquarium is home to over 38,000 animals, which represent more than 900 species.  24 20 25 24 245 23 449 27 22 Raw Hide II (280 Seventh Street) None 24 20 25 24 245 23 449 27 22 Pier 7 (The Embarcadero) None 24 20 25 24 245 23 449 27 22 Kearney Street (Telegraph Hill) None 24 20 25 24 245 23 449 28 11 Nobles Alley None 25 21 26 25 260 24 450 27 22 Hall of Justice (850 Bryant Street) None 24 20 25 24 245 23 449 27 22 2930 Vallejo Street None 24 20 25 24 245 23 449 27 22 Chinatown First established in the mid-19th Century, SF's Chinatown is the oldest and largest Chinatown in the US. 24 20 25 24 245 23 449 27 22 Gibb Street (Chinatown) None 24 20 25 24 245 23 449 27 22 1158-70 Montgomery Street None 24 20 25 24 245 23 449 27 22 2104 Broadway None 24 20 25 24 245 23 449 29 23 None None 26 22 27 26 261 25 451 30 24 Divisadero between Broadway and Greenwich None 27 23 28 27 262 26 452 30 24 Ohloff Recovery Center (601 Steiner St) None 27 23 28 27 262 26 452 30 24 Haight at Masonic None 27 23 28 27 262 26 452 30 24 Tenderloin Neighborhood None 27 23 28 27 262 26 452 30 24 Olympic Flame Caf\u00e9, 555 Geary St None 27 23 28 27 262 26 452 30 24 18th St at San Bruno Ave. None 27 23 28 27 262 26 452 30 24 Wisconsin between 19th and 20th St None 27 23 28 27 262 26 452 31 25 1155 Filbert Street at Hyde None 14 13 29 28 263 27 None 31 25 Washington Square Park (Filbert, between Stockton and Powell) None 14 13 29 28 263 27 None 31 25 Vaillancourt Fountain (Justin Herman Plaza) Installed in 1975, the Vaillancourt Fountain is officially titled, \"Qu\u00e9bec Libre!\". The night before the sculpture's inauguration, artist Armand Vaillancourt inscribed \"Qu\u00e9bec libre!\" in red letters on the sculpture. The next day when he noticed that the note had been erased, Vaillancourt jumped on the statue to re-inscribe his message.  14 13 29 28 263 27 None 31 25 Montgomery &amp; Market Streets None 14 13 29 28 263 27 None 31 25 City Hall The dome of SF's City Hall is almost a foot taller than that of the US Capitol Building. In 1954, Joe DiMaggio and Marilyn Monroe married at the Beaux Arts-style building. 14 13 29 28 263 27 None 32 2 None None 28 24 30 29 264 28 None 33 26 City Hall The dome of SF's City Hall is almost a foot taller than that of the US Capitol Building. In 1954, Joe DiMaggio and Marilyn Monroe married at the Beaux Arts-style building. 29 25 31 30 265 None None 33 26 Golden Gate Bridge With 23 miles of ladders and 300,000 rivets in each tower, the Golden Gate Bridge was the world's longest span when it opened in 1937. 29 25 31 30 265 None None 33 26 Treasure Island An artificial island, Treasure Island was created for the 1939 Golden Gate International Exposition, and is named after the novel by Robert Louis Stevenson, a one-time San Francisco resident. 29 25 31 30 265 None None 33 26 Postcard Row, Alamo Square, Hayes Valley The 6 Victorian homes across from Alamo Square Park are among the few Victorians to survive the Great Fire. 29 25 31 30 265 None None 33 26 Grace Cathedral Episcopal Church (1100 California Street) Grace Cathedral Episcopal Church is the West Coast's largest Episcopalian cathedral. 29 25 31 30 265 None None 28 11 Caffe Trieste None 25 21 26 25 260 24 450 28 11 Palace of Fine Arts None 25 21 26 25 260 24 450 28 11 1101 Filbert St.  None 25 21 26 25 260 24 450 28 11 Saints Peter &amp; Paul Church None 25 21 26 25 260 24 450 28 11 Green St. &amp; Grant Ave. None 25 21 26 25 260 24 450 28 11 Filbert St. &amp; Leavenworth None 25 21 26 25 260 24 450 28 11 Pine St. &amp; Grant None 25 21 26 25 260 24 450 28 11 Way Faire Inn on Leidesdorff None 25 21 26 25 260 24 450 28 11 Harry's Bar on Fillmore None 25 21 26 25 260 24 450 34 27 Tosca Caf\u00e9 (242 Columbus Avenue, North Beach) None 30 None 32 31 266 29 453 35 28 None None 13 12 33 32 267 30 454 36 29 Alcatraz Island Alcatraz Island was a military fort before it became a prison. 31 19 34 33 268 31 455 36 29 Pier 43 1/2 None 31 19 34 33 268 31 455 37 30 Lands End Trail at Eagles Point/ Lincoln Park Golf Course The character of Steve McKee was based on actor Steve McQueen who studied with Bruce Lee in the later 60's. 32 26 35 34 269 32 456 37 30 Pier 45 - Jeremiah O'Brien Liberty Ship The SS Jeremiah O'Brien is a rare survivor of the invasion at Normandy on D-Day in WWII. 32 26 35 34 269 32 456 37 30 Leavenworth at Green None 32 26 35 34 269 32 456 37 30 Leavenworth at Union None 32 26 35 34 269 32 456 37 30 Hyde at Union None 32 26 35 34 269 32 456 37 30 California at Grant None 32 26 35 34 269 32 456 37 30 Grant between Bush and Broadway None 32 26 35 34 269 32 456 37 30 California at Mason None 32 26 35 34 269 32 456 37 30 Spofford between Clay and Washington None 32 26 35 34 269 32 456 37 30 Twin Peaks Blvd. None 32 26 35 34 269 32 456 37 30 Waverly Pl between Washington and Sacramento None 32 26 35 34 269 32 456 38 27 Jones &amp; Pacific None 33 27 36 35 270 33 457 38 27 Pacific &amp; Divisadero None 33 27 36 35 270 33 457 38 27 Lombard &amp; Hyde None 33 27 36 35 270 33 457 38 27 5546 Geary Ave None 33 27 36 35 270 33 457 38 27 2898 Broadway None 33 27 36 35 270 33 457 38 27 Motel Capri None 33 27 36 35 270 33 457 38 27 Marina Green None 33 27 36 35 270 33 457 38 27 Ocean Beach at Lincoln None 33 27 36 35 270 33 457 38 27 Heald College None 33 27 36 35 270 33 457 38 27 Marina Blvd from Laguna to Baker None 33 27 36 35 270 33 457 38 27 330 Santa Clara Ave. None 33 27 36 35 270 33 457 38 27 200 Post St.  None 33 27 36 35 270 33 457 38 27 2179 48th Ave None 33 27 36 35 270 33 457 38 27 The Ramp Restaurant None 33 27 36 35 270 33 457 38 27 303-305 S. Van Ness None 33 27 36 35 270 33 457 38 27 3563 20th St. None 33 27 36 35 270 33 457 38 27 Taylor &amp; Green St. None 33 27 36 35 270 33 457 38 27 Grant &amp; Washington St. None 33 27 36 35 270 33 457 38 27 2934 24th St. None 33 27 36 35 270 33 457 38 27 1138 Alabama St None 33 27 36 35 270 33 457 38 27 South Park None 33 27 36 35 270 33 457 38 27 2915 16th St. None 33 27 36 35 270 33 457 38 27 Trolley Car from Market and 11th None 33 27 36 35 270 33 457 38 27 Real Guitars None 33 27 36 35 270 33 457 38 27 Aub Zam Zam Bar None 33 27 36 35 270 33 457 38 27 790 Ulloa  None 33 27 36 35 270 33 457 38 27 SFO International Airport Terminal 3 None 33 27 36 35 270 33 457 38 27 2178 Palou Ave. None 33 27 36 35 270 33 457 39 25 1122 Folsom Street None 34 28 37 36 271 34 None 39 25 St. Peter &amp; Paul's Church (666 Filbert Street, Washington Square) Though Marilyn Monroe and Joe DiMaggio were not allowed to be married at the Church (DiMaggio had married his first wife at the Church but was divorced), the couple returned to the steps of the Church for photos, following their City Hall nuptials. 34 28 37 36 271 34 None 39 25 Golden Gate Bridge With 23 miles of ladders and 300,000 rivets in each tower, the Golden Gate Bridge was the world's longest span when it opened in 1937. 34 28 37 36 271 34 None 39 25 Fisherman's Wharf Supposedly, Mikhail S. Gorbachev has said that his favorite part of visiting America was touring Fisherman's Wharf. 34 28 37 36 271 34 None 39 25 Ferry Building Every hour and half-hour, the clock bell atop the Ferry Building chimes portions of the Westminster Quarters. 34 28 37 36 271 34 None 39 25 Coit Tower The Tower was funded by a gift bequeathed by Lillie Hitchcock Coit, a socialite who reportedly liked to chase fires. Though the tower resembles a firehose nozzle, it was not designed this way. 34 28 37 36 271 34 None 39 25 City Hall The dome of SF's City Hall is almost a foot taller than that of the US Capitol Building. In 1954, Joe DiMaggio and Marilyn Monroe married at the Beaux Arts-style building. 34 28 37 36 271 34 None 39 25 Lombard Street Lombard Street is not actually the most crooked in SF. That honor goes to Potrero Hill's Vermont Street between 22nd and 23rd. 34 28 37 36 271 34 None 39 25 Chinatown First established in the mid-19th Century, SF's Chinatown is the oldest and largest Chinatown in the US. 34 28 37 36 271 34 None 39 25 Aquatic Park (Jefferson Street) Located at one end of Fisherman's Wharf, Aquatic Park was built as part of FDR's Works Progress Administration Project. 34 28 37 36 271 34 None 39 25 Alcatraz Island Alcatraz Island was a military fort before it became a prison. 34 28 37 36 271 34 None 39 25 628 Cole Street None 34 28 37 36 271 34 None 40 19 Ina Coolbrith Park (1700 Taylor Street) None 35 None 38 37 None None None 40 19 0-100 block Halleck Street None 35 None 38 37 None None None 41 20 3050 24th Street None 36 29 39 38 272 35 458 41 20 3033 24th Street None 36 29 39 38 272 35 458 41 20 2937 24th Street None 36 29 39 38 272 35 458 41 20 1167 Alabama Street None 36 29 39 38 272 35 458 41 20 1641 York Street None 36 29 39 38 272 35 458 41 20 Bernal Heights Boulevard None 36 29 39 38 272 35 458 41 20 40 Prentiss Street None 36 29 39 38 272 35 458 41 20 500 Cortland Avenue None 36 29 39 38 272 35 458 41 20 Lucky Street None 36 29 39 38 272 35 458 41 20 1125 Guerrero Street None 36 29 39 38 272 35 458 41 20 Gough Street &amp; Clay Street None 36 29 39 38 272 35 458 41 20 2007 Franklin Street None 36 29 39 38 272 35 458 41 20 951 Hudson Avenue None 36 29 39 38 272 35 458 42 31 Bayshore Blvd near Cesar Chavez (Bayview) None 37 30 40 39 273 36 459 42 31 Taylor &amp; Vallejo Streets (Russian Hill) None 37 30 40 39 273 36 459 43 32 1627 Haight Street None 38 6 41 40 274 37 None 42 31 SF General Hospital Center (1001 Potrero Avenue, Potrero Hill) SF General Hospital is the only Level I Trauma Center serving San Francisco and northern San Mateo County.  37 30 40 39 273 36 459 42 31 McLaren Park (Visitacion  Valley) McLaren Park is the 2nd largest park in San Francisco, after Golden Gate Park. 37 30 40 39 273 36 459 42 31 Mark Hopkins Hotel (999 California Street) The Top of the Mark lounge and restaurant at the top of the hotel was formerly a penthouse suite. 37 30 40 39 273 36 459 42 31 Marina Green (Marina District) Before the 1906 earthquake, the land on which Marina Green sits was a tidal marsh, and rubble from the earthquake was dumped on the site. However, the site was filled in to provide land for the 1915 Panama-Pacific Exhibition.  37 30 40 39 273 36 459 42 31 Mansell &amp; University Streets (Visitacion  Valley) None 37 30 40 39 273 36 459 42 31 Larkin &amp; Francisco Streets (Russian Hill) None 37 30 40 39 273 36 459 42 31 Larkin &amp; Chestnut Streets (Russian Hill) None 37 30 40 39 273 36 459 42 31 Kennedy Hotel (226 Embarcadero at Howard Street) Hotel was destroyed in the 1989 Loma Prieta earthquake. Corporate headquarters for the Gap reside at the location today. 37 30 40 39 273 36 459 42 31 John Muir Drive (Lake Merced) None 37 30 40 39 273 36 459 42 31 Intersection of York &amp; Peralta (Bernal Heights) None 37 30 40 39 273 36 459 42 31 Filbert &amp; Taylor Streets (Russian Hill) None 37 30 40 39 273 36 459 42 31 Enrico's Caf\u00e9 (504 Broadway) None 37 30 40 39 273 36 459 42 31 Columbus &amp; Lombard Streets (North Beach) None 37 30 40 39 273 36 459 42 31 Cesar Chavez &amp; Mission Street (Mission) None 37 30 40 39 273 36 459 42 31 Candlestick Park Exit, Highway 101 None 37 30 40 39 273 36 459 42 31 Caf\u00e9 Cantata (2040 Union Street) None 37 30 40 39 273 36 459 42 31 Brocklebank Apartments (1000 Mason Street) None 37 30 40 39 273 36 459 42 31 Bay Bridge Before opening in 1936, the bridge was blessed by Cardinal Secretary of State Eugenio Pacelli, who later became Pope Pius XII.  37 30 40 39 273 36 459 42 31 2700 Vallejo Street (Pacific Heights) None 37 30 40 39 273 36 459 42 31 20th &amp; Vermont Streets (Potrero Hill) The most crooked street in San Francisco is actually Potrero Hill's Vermont Street between 20th St &amp; 22nd St. 37 30 40 39 273 36 459 42 31 1153-57 Taylor Street Embarcadero Freeway, which was featured in the film was demolished in 1989 because of structural damage from the 1989 Loma Prieta Earthquake) 37 30 40 39 273 36 459 43 32 California Academy of Sciences (Golden Gate Park) Founded in 1853, 3 years after California joined the United States, the Academy was originally named the California Academy of Natural Sciences and was the first institution of its kind in the United States. 38 6 41 40 274 37 None 43 32 Green Valley Restaurant (510 Green Street Near Grant) None 38 6 41 40 274 37 None 43 32 1400 18th Street None 38 6 41 40 274 37 None 44 33 The Lexington Club (3464 19th Street at Lexington) None 39 31 42 41 275 None None 44 33 Royan Hotel (405 Valencia Street, Mission District) None 39 31 42 41 275 None None 44 33 Department of Public Health (101 Grove Street at Polk, Civic Center) None 39 31 42 41 275 None None 45 34 101 Henry Adams Place None 40 32 43 42 276 38 460 46 10 3639 Taraval St None 41 None 44 43 277 39 461 46 10 1458 33rd Ave. None 41 None 44 43 277 39 461 46 10 Lyon at Chestnut St. None 41 None 44 43 277 39 461 46 10 1559 Underwood Avenue between Lane and Keith None 41 None 44 43 277 39 461 46 10 1465 Revere Avenue between Keith and Jennings None 41 None 44 43 277 39 461 46 10 1601 Lane St. None 41 None 44 43 277 39 461 46 10 420 Mason St. None 41 None 44 43 277 39 461 46 10 119 Utah None 41 None 44 43 277 39 461 46 10 100 Alemany Blvd. None 41 None 44 43 277 39 461 46 10 812 22nd St. and Tennessee None 41 None 44 43 277 39 461 47 35 Mission Dolores Park (Mission District) via J-Church MUNI Train The two land plots that comprise the Park were used as a Jewish cemetery until 1894 when San Francisco prohibited all burials within city limits. The graves were moved to Colma, CA. 5 4 45 44 278 40 None 48 4 Li Po (916 Grant Avenue at Washington, Chinatown) None 42 33 46 45 279 41 462 48 4 Golden Dragon Restaurant (816 Washington Street at Grant) None 42 33 46 45 279 41 462 49 30 Maiden Lane between Kearny and Grant None 43 34 47 46 280 42 463 49 30 The Drew School, 2901 California None 43 34 47 46 280 42 463 49 30 State Garage, 818 Leavenworth None 43 34 47 46 280 42 463 49 30 60 Leavenworth St. None 43 34 47 46 280 42 463 50 30 Harvey Milk Rec Center, 50 Scott St. None 43 34 48 47 280 42 463 50 30 66 Potomac None 43 34 48 47 280 42 463 50 30 Mario's Caf\u00e9, 566 Columbus None 43 34 48 47 280 42 463 50 30 Washington Square Park None 43 34 48 47 280 42 463 50 30 William Stout Architectural Books, 804 Montgomery St. None 43 34 48 47 280 42 463 50 30 1055 Montgomery St. None 43 34 48 47 280 42 463 50 30 60 Leavenworth St. None 43 34 48 47 280 42 463 50 30 Jefferson Square Park None 43 34 48 47 280 42 463 50 30 UN Plaza/ Civic Center Bart steps None 43 34 48 47 280 42 463 50 30 940 Powell St. None 43 34 48 47 280 42 463 50 30 Ellis and Jones St. None 43 34 48 47 280 42 463 50 30 Ellis Food Center, 398 Ellis None 43 34 48 47 280 42 463 50 30 Jonell's Bar, 401 Ellis None 43 34 48 47 280 42 463 50 30 State Garage, 818 Leavenworth None 43 34 48 47 280 42 463 50 30 Antonio Alley None 43 34 48 47 280 42 463 50 30 253 4th Ave. None 43 34 48 47 280 42 463 50 30 Warren's Antiques, 375 9th St. None 43 34 48 47 280 42 463 51 30 Private alley along 20th St. between Tennessee and Minnesota None 43 34 47 46 280 42 463 52 30 Mason and Pacific None 43 34 48 48 280 42 463 52 30 John St. between Powell and Mason None 43 34 48 48 280 42 463 52 30 Westin St. Francis None 43 34 48 48 280 42 463 52 30 Betelnut restaurant, 2030 Union St. None 43 34 48 48 280 42 463 52 30 Sutter Stockton Garage, 444 Stockton None 43 34 48 48 280 42 463 52 30 YWCA, 940 Powell None 43 34 48 48 280 42 463 52 30 Warren's Antiques, 375 9th St. None 43 34 48 48 280 42 463 52 30 Heron and Berwick Alleys None 43 34 48 48 280 42 463 52 30 Duboce St., Duboce Caf\u00e9 None 43 34 48 48 280 42 463 52 30 Potomac and Waller None 43 34 48 48 280 42 463 52 30 State Garage, 818 Leavenworth None 43 34 48 48 280 42 463 53 30 60 Leavenworth St. None 43 34 3 49 280 42 463 title release_year locations fun_facts production_company distributor director writer actor_1 actor_2 actor_3 state city point Nash Bridges 2021 Pier 45, San Francisco None Village NB Productions, LLC USA Nework Greg Beeman Carlton Cuse, Bill Chais Don Johnson Cheech Marin Joe Dinicol CA San Francisco POINT (-122.417428501 37.809873676) The OA Part II 2019 Ada Court at O'Farrell St None Lunar Mining LLC Netflix Zal Batmanglij Zal Batmanglij, Brit Marling Brit Marling Emory Cohen Patrick Gibson CA San Francisco POINT (-122.41568003 37.785469982) Looking \"Special\" 2016 1246 Folsom Street None Mission Street Productions, LLC HBO Andrew Haigh Michael Lannan Jonathan Groff Frankie Alvarez Murray Bartlett CA San Francisco POINT (-122.411002006 37.774595007) The Phone/Jexi 2019 Liberty St btwn Castro and Noe St None CBS Films Inc. Lionsgate Jon Lucas, Scott Moore Jon Lucas, Scott Moore Adam Devine Alexandra Shipp Michael Pena CA San Francisco POINT (-122.432399999 37.75702) Terminator - Genisys 2015 California at Larkin None T5 Productions LLC Paramount Pictures Alan Taylor James Cameron Arnold Schwarzenegger Jason Clarke None CA San Francisco POINT (-122.419039999 37.790790018) Murder in the First, Season 3 2016 600 Octavia Street None Turner North Center Productions Turner Network Television (TNT) Steven Bochcho Eric Lodal Taye Diggs Kathleen Robertson Ian Anthony Dale CA San Francisco POINT (-122.424684038 37.777814999) Ant-Man and the Wasp 2018 Bush St at Mason St VFX Plate Shots PYM Particles Productions II, LLC Walt Disney Studios Motion Pictures Peyton Reed Chris McKenna Paul Rudd Evangeline Lilly Michael Douglas CA San Francisco POINT (-122.410430025 37.78996) Dirty Harry 1971 Portsmouth Square (Chinatown) In 1847 the first public school in California was erected on what would become Portsmouth Square. The Malpaso Company Warner Brothers Don Siegel Harry Julian Fink Clint Eastwood Harry Guardino None CA San Francisco POINT (-122.40571 37.79479) 40 Days and 40 Nights 2002 Caf\u00e9 Trieste (609 Vallejo) Francis Ford Coppola allegedly wrote large portions of \"The Godfather\" trilogy in Caf\u00e9 Trieste. Miramax Films Miramax Films Michael Lehmann Robert Perez Josh Hartnett Shaynnyn Sossamon None CA San Francisco POINT (-122.407357973 37.798572992) Harold and Maude 1971 Sutro Baths (Point Lobos Avenue) None Mildred Lewis and Colin Higgins Productions Paramount Pictures Hal Ashby Colin Higgins Ruth Gordon Bud Cort None CA San Francisco POINT (-122.510031794 37.779832009) Time After Time 1979 Palace of Fine Arts (3301 Lyon Street) The original Palace was built for the 1915 Panama-Pacific Exposition, and completely destroyed in 1964. It was rebuilt in 1965. Orion Pictures Corp. Columbia Broadcasting System (CBS) Nicholas Meyer Karl Alexander Malcolm McDowell Mary Steenburgen David Warner CA San Francisco POINT (-122.44899 37.80288) Quitters 2015 Claire Lilienthal Elementary School None Frederick &amp; Ashbury, LLC. None Noah Pritzker Noah Pritzker Kara Hayward Mira Sorvino Saffron Burrows CA San Francisco POINT (-122.45796 37.7871) Quitters 2015 1536 Noe St. None Frederick &amp; Ashbury, LLC. None Noah Pritzker Noah Pritzker Kara Hayward Mira Sorvino Saffron Burrows CA San Francisco POINT (-122.431454017 37.744473004) The Dead Pool 1988 550 El Camino Del Mar (Seacliff) None Warner Bros. Pictures Warner Bros. Pictures Buddy Van Horn Harry Julian Fink Clint Eastwood Liam Neeson Patricia Clarkson CA San Francisco POINT (-122.489937992 37.787534989) The Princess Diaries 2001 2601 Lyon Street None Walt Disney Pictures Buena Vista Pictures Garry Marshall Gina Wendkos Julie Andrews Anne Hathway None CA San Francisco POINT (-122.447010997 37.794680981) Murder in the First, Season 1 2014 Ida B. Wells High School (1099 Hayes Street) Ida B. Wells High School is named after the African-American journalist, suffragist and early leader in the Civil Rights Movement Ida B. Wells Turner North Center Productions Turner Network Television (TNT) Steven Bochcho Eric Lodal Taye Diggs Kathleen Robertson Ian Anthony Dale CA San Francisco POINT (-122.434035978 37.775064017) Junior 1994 722 Steiner Street None Northern Lights Entertainment Universal Pictures Ivan Reitman Kevin Wade Arnold Schwarzenegger Danny DeVito Emma Thompson CA San Francisco POINT (-122.432784979 37.776451012) The Woman In Red 1984 Postcard Row (Alamo Square, Hayes Valley) The 6 Victorian homes across from Alamo Square Park are among the few Victorians to survive the Great Fire. Orion Pictures Corp. MGM Home Entertainment Gene Wilder Jean Loup Dabadie &amp; Yves Robert Gene Wilder Charles Grodin None CA San Francisco POINT (-122.43146 37.77722) The Bachelor 1999 Pacific Stock Exchange (301 Pine Street at Sansome) None George Street Pictures New Line Cinema Gary Sinyor Steve Cohen Chris O'Donnell Renee Zellweger None CA San Francisco POINT (-122.400920001 37.792099983) Final Analysis 1992 Bix Restaurant (56 Gold Street) None Warner Bros. Pictures Warner Bros. Pictures Phil Joanou Robert Berger Richard Gere Kim Basinger None CA San Francisco POINT (-122.402907 37.796864) Women is Losers 2020 2712 Bryant St None Look at the Moon Pictures None Lissette Feliciano Lissette Feliciano Lorenza Izzo Simu Liu Liza Weil CA San Francisco POINT (-122.409273992 37.750881011) Rent 2005 Treasure Island An artificial island, Treasure Island was created for the 1939 Golden Gate International Exposition, and is named after the novel by Robert Louis Stevenson, a one-time San Francisco resident. Rent Productions LLC Columbia Pictures Chris Columbus Stephen Chbosky Anthony Rapp Rosario Dawson None CA San Francisco POINT (-122.37087 37.82489) The Last Black Man in San Francisco 2019 Illinois St btwn Marin and Amador None LBMISF, LLC A45 Joe Talbot Joe Talbot, Jimmie Fails, Rob Richert Jimmie Fails Jonathan Majors Danny Glover CA San Francisco POINT (-122.386040027 37.745770019) Smile Again, Jenny Lee 2015 Europa Caf\u00e9 (4318 California St. and 5th Ave.) None Carlo Caldana/Marguery Films None Carlo Caldana Linda Demetrick Craig Tsuyumine Puneet Prasad Larry Kitagawa CA San Francisco POINT (-122.463499961 37.785130012) Sense8 2015 Market St. overpass Bicycle chase scene Unpronounceable Productions, LLC Netflix The Wachowskis The Wachowskis Jamie Clayton None None CA San Francisco POINT (-122.40001657 37.79039257) Tucker: The Man and His Dream 1988 City Hall The dome of SF's City Hall is almost a foot taller than that of the US Capitol Building. In 1954, Joe DiMaggio and Marilyn Monroe married at the Beaux Arts-style building. Lucasfilm Paramount Pictures Francis Ford Coppola Arnold Schulman Jeff Bridges Joan Allen Marin Landau CA San Francisco POINT (-122.290284937 38.004649955) Dirty Harry 1971 Kezar Stadium, Golden Gate Park The stadium was demolished and completely rebuilt after sustaining damages in the 1898 Loma Prieta earthquake. The Malpaso Company Warner Brothers Don Siegel Harry Julian Fink Clint Eastwood Harry Guardino None CA San Francisco POINT (-122.45472 37.7664) Nash Bridges 2021 2800 Pacific Avenue None Village NB Productions, LLC USA Nework Greg Beeman Carlton Cuse, Bill Chais Don Johnson Cheech Marin Joe Dinicol CA San Francisco POINT (-122.441781025 37.792684998) Terminator - Genisys 2015 Pier 14 None T5 Productions LLC Paramount Pictures Alan Taylor James Cameron Arnold Schwarzenegger Jason Clarke None CA San Francisco POINT (-122.3911 37.79366) The Phone/Jexi 2019 Tamarind Hall - 1268 Grant Ave None CBS Films Inc. Lionsgate Jon Lucas, Scott Moore Jon Lucas, Scott Moore Adam Devine Alexandra Shipp Michael Pena CA San Francisco POINT (-122.407001994 37.79864801) Tales of the City 2019 Mission District None Universal Television LLC Netflix Alan Poul, Silas Howard, Stacie Passon Armistead Maupin, Lauren Morelli, Hansol Jung, Marcus Gardley Laura Linney Ellen Page Murray Bartlett CA San Francisco POINT (-122.41914 37.75993) Nine to Five 1980 Albert S. Samuels Clock (856 Market Street between Powell and Stockton) None Twentieth Century Fox Film Corporation Twentieth Century Fox Film Corporation Colin Higgins Colin Higgins Jane Fonda Lily Tomlin Dolly Parton CA San Francisco POINT (-122.407105007 37.785159013) Shit and Champagne 2020 Leavenworth at Greenwich St None Shaboom Boom, LLC None D'Arcy Drollinger D'Arcy Drollinger D'Arcy Drollinger Matthew Martin Steven LeMay CA San Francisco POINT (-122.417790006 37.801250004) Ant-Man 2015 Intersection of California at Polk Driving shots PYM Particles Productions, LLC Walt Disney Studios Motion Pictures Peyton Reed Gabriel Ferrari Michael Douglas Paul Rudd None CA San Francisco POINT (-122.420680003 37.790569993) Pacific Heights 1990 Texas &amp; 19th Streets (Potrero Hill) None Morgan Creek Productions Twentieth Century Fox Film Corporation John Schlesinger Daniel Pyne Melanie Griffith Matthew Modine None CA San Francisco POINT (-122.395449971 37.761369998) Interview With The Vampire 1994 Golden Gate Bridge With 23 miles of ladders and 300,000 rivets in each tower, the Golden Gate Bridge was the world's longest span when it opened in 1937. Geffen Pictures Geffen Pictures Neil Jordan Anne Rice Brad Pitt Christian Slater Tom Cruise CA San Francisco POINT (-122.47847 37.81914) Bitter Melon 2018 3189 16th St None Bitter Melon Film LLC/Mammoth Pictures ABS-CBN, Gravitas Ventures H.P. Mendoza H.P. Mendoza Jon Norman Schneider Patrick Epino Brian Rivera CA San Francisco POINT (-122.423608975 37.764560989) Chance Season 2 2017 Lombard St between Hyde and Larkin St None TVM Productions Inc. Hulu Rozann Dawson Alexandra Cunningham Hugh Laurie Greta Lee Ethan Suplee CA San Francisco POINT (-122.421249972 37.801779992) Dawn of the Planet of the Apes 2014 Filbert St. from Hyde to Leavenworth None Fox Louisiana Productions, LLC Twentieth Century Fox Matt Reeves Rick Jaffa Gary Oldman Keri Russell Andy Serkis CA San Francisco POINT (-122.412683593 37.800975612) Hulk 2003 Golden Gate Bridge With 23 miles of ladders and 300,000 rivets in each tower, the Golden Gate Bridge was the world's longest span when it opened in 1937. Universal Pictures Universal Pictures Ang Lee Stan Lee Eric Bana Jennifer Connelly None CA San Francisco POINT (-122.47847 37.81914) Venom 2018 Grant Ave btwn Washington and Jackson None L.O.Z. Productions, Inc. Columbia Pictures, Sony Pictures Releasing Ruben Fleischer Jeff Pinkner, Scott Rosenberg Tom Hardy Michelle Wiliams Riz Ahmed CA San Francisco POINT (-122.406630005 37.796030006) Surface 2022 Jackson Street between Stockton and Grant None Apple Studios, LLC Apple TV+ Sam Miller, Kevin Rodney Sullivan, Jennifer Morrison, Tucker Gates Veronica West, Erica L. Anderson,Tony Saltzman, Glenise Mullins, Leigh Ann Biety, Dan Lee West, Leigh Ann Biety &amp; Raven Jackson, Mart\u00edn Zimmerman Gugu Mbatha-Raw Oliver Jackson-Cohen Ari Graynor CA San Francisco POINT (-122.406630005 37.796030006) Sudden Impact 1983 The Embarcadero/Ferry Building Every hour and half-hour, the clock bell atop the Ferry Building chimes portions of the Westminster Quarters. Warner Bros. Pictures Warner Bros. Pictures Clint Eastwood Harry Julian Fink Clint Eastwood Sondra Locke Pat Hingle CA San Francisco POINT (-122.39343 37.79553) Looking Season 2 ep 204 2015 970 Geary Street None Mission Street Productions, LLC HBO Andrew Haigh Michael Lannan Jonathan Groff Frankie Alvarez Murray Bartlett CA San Francisco POINT (-122.419180983 37.786153987) Etruscan Smile 2017 3rd Street between Market &amp; Harrison None Po Valley Productions, LLC TBD Oded Binnun/ Michel Brezis Sarah Bellwood, Michal Lali Kagan, Michael McGowan Amital Stern, Jose Luis Sampedro Brian Cox Roseanne Arquette Thora Birch CA San Francisco POINT (-122.397389963 37.78255002) Summertime 2015 Buena Vista East &amp; Duboce; Buena Vista East &amp; Haight None Creative Monster Productions, Inc. 5 Distribution Gabriele Muccino Gabriele Muccino Jessica Rothe Scott Bakula Matilda Anna Ingrid Lutz CA San Francisco POINT (-122.440319975 37.770850015) Always Be My Maybe 2019 Pier 7 None Isla Productions, LLC Netflix Nahnatchka Khan Michael Golamco, Randall Park, Ali Wong Ali Wong Randall Park Keanu Reeves CA San Francisco POINT (-122.397409995 37.799364998) San Andreas 2015 Hyde St. at Greenwich and Hyde St. at Lombard Characters walk to get a vantage point for Coit tower. 250 actors walking \"fleeing\" the city after earthquake Upside Down Productions, Inc. Warner Bros. Brad Peyton Allan Loeb Dwayne Johnson None None CA San Francisco POINT (-122.419430009 37.801070003) Birth of the Dragon 2016 Pier 45 - Jeremiah O'Brien Liberty Ship The SS Jeremiah O'Brien is a rare survivor of the invasion at Normandy on D-Day in WWII. BOTD U.S. Productions, Inc. Kylin Pictures George Nolfi Christopher Wilkinson, Stephen J. Rivele Philip Ng Billy Magnussen Yu Xia CA San Francisco POINT (-122.417428501 37.809873676) The Rock 1996 Fairmont Hotel (950 Mason Street, Nob Hill) In 1945 the Fairmont hosted the United Nations Conference on International Organization as delegates arrived to draft a charter for the organization. The U.S. Secretary of State, Edward Stettinius drafted the charter in the hotel's Garden Room. Hollywood Pictures Buena Vista Pictures Michael Bay David Weisberg Sean Connery Nicolas Cage None CA San Francisco POINT (-122.41075 37.79232) Sense8 2015 18th Street between Guerrero and Valencia Streets Re-enactment of \"Dyke's on Bikes\" and \"Dyke March\" Unpronounceable Productions, LLC Netflix The Wachowskis The Wachowskis Jamie Clayton None None CA San Francisco POINT (-122.453869992 37.492129983) So I Married an Axe Murderer 1993 Vesuvio Caf\u00e9 (255 Columbus Avenue) Jack Kerouac was a regular at the caf\u00e9. TriStar Pictures TriStar Pictures Thomas Schlamme Robbie Fox Mike Myers Nancy Travis None CA San Francisco POINT (-122.406458 37.797505) Blue Jasmine 2013 Taylor &amp; Green St. None Perdido Productions Sony Pictures Classics Woody Allen Woody Allen Cate Blanchett Alec Baldwin Peter Sarsgaard CA San Francisco POINT (-122.413929972 37.798900012) The Maltese Falcon 1941 Burritt Alley (Off Bush Street, between Powell and Stockton Streets) None Warner Bros. Pictures Warner Bros. Pictures John Huston John Huston Humphrey Bogart Mary Astor Gladys George CA San Francisco POINT (-122.407150018 37.790380017) Surface 2022 Merchant Road Trail at Presidio None Apple Studios, LLC Apple TV+ Sam Miller, Kevin Rodney Sullivan, Jennifer Morrison, Tucker Gates Veronica West, Erica L. Anderson,Tony Saltzman, Glenise Mullins, Leigh Ann Biety, Dan Lee West, Leigh Ann Biety &amp; Raven Jackson, Mart\u00edn Zimmerman Gugu Mbatha-Raw Oliver Jackson-Cohen Ari Graynor CA San Francisco POINT (-122.474540017 37.806720013) Chance- Season 1 ep106 2016 2 Rowland None TVM Productions HULU Sara Gran Dan Attias Hugh Laurie Gretchen Mol Ethan Suplee CA San Francisco POINT (-122.404530038 37.797715741) Chance - Season 1 Pilot 2016 UN Plaza/ Civic Center Bart steps None TVM Productions HULU Lenny Abrahamson Alexandra Cunningham and Kem Nunn Hugh Laurie Gretchen Mol Ethan Suplee CA San Francisco POINT (-122.41362 37.77964) Goliath- Season 4 2021 Grant and Commercial None Picrow, Inc. Amazon Studios Billy Bob Thornton, Lawrence Trilling, Derek Johansen David E. Kelley, Jonathan Shapiro Billy Bob Thornton Nina Arianda Tania Raymonde CA San Francisco POINT (-122.406179981 37.793839983) Groove 2000 435 23rd Street at Illinois None 415 Productions Sony Pictures Classics Greg Harrison Greg Harrison Chris Ferreira Elizabeth Sun None CA San Francisco POINT (-122.387090028 37.755429995) Chance Season 2 2017 Duboce between Buena Vista East and Alpine St None TVM Productions Inc. Hulu Rozann Dawson Alexandra Cunningham Hugh Laurie Greta Lee Ethan Suplee CA San Francisco POINT (-122.437487857 37.768721005) The Last Black Man in San Francisco 2019 900 Innes Ave Boat dock LBMISF, LLC A26 Joe Talbot Joe Talbot, Jimmie Fails, Rob Richert Jimmie Fails Jonathan Majors Danny Glover CA San Francisco POINT (-122.375759958 37.732206005) Heart Beat 1980 Washington Square Bar &amp; Grill (1707 Powell) None Orion Pictures Corporation Orion Pictures Corporation John Byrum John Byrum Nick Nolte Sissy Spacek John Heard CA San Francisco POINT (-122.409689986 37.794750006) Shit and Champagne 2020 La Ferrera Terrace at Kearny St None Shaboom Boom, LLC None D'Arcy Drollinger D'Arcy Drollinger D'Arcy Drollinger Matthew Martin Steven LeMay CA San Francisco POINT (-122.406639979 37.803949983) DEVS 2020 Harrison at 25th St None Minim Productions FX Network Alex Garland Alex Garland Sonoya Mizuno Nick Offerman Jin Ha CA San Francisco POINT (-122.411780014 37.75104999) Smile Again, Jenny Lee 2015 333 Pacheco St at Lopez Ave. None Carlo Caldana/Marguery Films None Carlo Caldana Linda Demetrick Craig Tsuyumine Puneet Prasad Larry Kitagawa CA San Francisco POINT (-122.462650036 37.74842) Edtv 1999 Castro Theatre (429 Castro Street, The Castro) The original Castro Theatre was built in 1910, a few doors down from the current theatre. The original theatre was converted into retail space, and the current theatre was built in the 1920s. Imagine Entertainment MCA / Universal Pictures Ron Howard Lowell Ganz Matthew McConaughey Jenna Elfman None CA San Francisco POINT (-122.4346 37.76188) Looking Season 2 ep 207 2015 770 Haight Street None Mission Street Productions, LLC HBO Andrew Haigh Michael Lannan Jonathan Groff Frankie Alvarez Murray Bartlett CA San Francisco POINT (-122.434883976 37.771797002) Chance Season 2 2017 Scott St between Jackson and Clay St None TVM Productions Inc. Hulu Rozann Dawson Alexandra Cunningham Hugh Laurie Greta Lee Ethan Suplee CA San Francisco POINT (-122.439139971 37.790079987) Nash Bridges 2021 Alameda Street between Vermont and San Bruno None Village NB Productions, LLC USA Nework Greg Beeman Carlton Cuse, Bill Chais Don Johnson Cheech Marin Joe Dinicol CA San Francisco POINT (-122.405759963 37.768499981) Flubber 1997 Treasure Island An artificial island, Treasure Island was created for the 1939 Golden Gate International Exposition, and is named after the novel by Robert Louis Stevenson, a one-time San Francisco resident. Walt Disney Pictures Buena Vista Pictures Les Mayfield Samuel W. Taylor Robin Williams Marcia Gay Harden None CA San Francisco POINT (-122.37087 37.82489) The Phone/Jexi 2019 Texas at 17th St None CBS Films Inc. Lionsgate Jon Lucas, Scott Moore Jon Lucas, Scott Moore Adam Devine Alexandra Shipp Michael Pena CA San Francisco POINT (-122.395820032 37.765190009) Murder in the First, Season 1 2014 AT&amp;T Park None Turner North Center Productions Turner Network Television (TNT) Steven Bochcho Eric Lodal Taye Diggs Kathleen Robertson Ian Anthony Dale CA San Francisco POINT (-122.38951 37.77849) A Taiwanese Tale of Two Cities 2018 Steiner St at Fulton St None Envision Productions Inc. Netflix Tien-Lun Yeh Ling-Hui Chen, Nancy Chen, Chih-Chi Fan, Chia-Hui Lin Tammy Cheng Peggy Tseng Shen-Hao Wen CA San Francisco POINT (-122.433210026 37.777489991) Nine Months 1995 St. Peter &amp; Paul's Church (666 Filbert Street, Washington Square) Though Marilyn Monroe and Joe DiMaggio were not allowed to be married at the Church (DiMaggio had married his first wife at the Church but was divorced), the couple returned to the steps of the Church for photos, following their City Hall nuptials. 1492 Pictures Twentieth Century Fox Film Corp. Chris Columbus Chris Columbus Hugh Grant Julianne Moore Robin Williams CA San Francisco POINT (-122.410437987 37.801430005) Sense8 2015 Atlas Caf\u00e9, 3049 20th St. Dialogue scene inside the caf\u00e9 Unpronounceable Productions, LLC Netflix The Wachowskis The Wachowskis Jamie Clayton None None CA San Francisco POINT (-122.411413 37.758937) Bullitt 1968 2700 Vallejo Street (Pacific Heights) None Warner Brothers / Seven Arts Seven Arts Warner Brothers Peter Yates Alan R. Trustman Steve McQueen Jacqueline Bisset Robert Vaughn CA San Francisco POINT (-122.442026028 37.794603993) Summertime 2015 Turk St between Lyon and Baker St None Creative Monster Productions, Inc. 4 Distribution Gabriele Muccino Gabriele Muccino Jessica Rothe Scott Bakula Matilda Anna Ingrid Lutz CA San Francisco POINT (-122.442059974 37.779259997) Chance - Season 1 Pilot 2016 Washington Square Park None TVM Productions HULU Lenny Abrahamson Alexandra Cunningham and Kem Nunn Hugh Laurie Gretchen Mol Ethan Suplee CA San Francisco POINT (-122.41089 37.80051) Copycat 1995 82 &amp; 67 Rico Way (Marina District) None Regency Enterprises Warner Bros. Pictures Jon Amiel Ann Biderman Sigourney Weaver Holly Hunter None CA San Francisco POINT (-122.439788982 37.805006019) Clickbait 2021 Jackson between Front and Davis None MasterKey Studios, Inc. Netflix Brad Anderson, Emma Freeman, Cherie Nowlan, Ben Young Tony Ayres, Christian White Zoe Kavan Betty Gabriel Adrian Grenier CA San Francisco POINT (-122.398329993 37.797080007) Sense8 - Season 2 2016 67-69 Deming St. None Unpronounceable Productions, LLC Netflix Wachowski Siblings J. Michael Straczynski, Wachowiski Siblings Jamie Clayton Daryl Hannah Naveen Andrews CA San Francisco POINT (-122.445766033 37.760332989) The Matrix Resurrections 2021 Pine between Front and Montgomery None Adobe Pictures, Inc. Warner Brothers Lana Wachowski Lana Wachowski, David Mitchell, Aleksander Hemon Keanu Reeves Keanu Reeves Neil Patrick Harris CA San Francisco POINT (-122.40255003 37.791919982) Age of Adaline 2015 Pier 50- end of the pier None Lionsgate / Sidney Kimmel Entertainment / Lakeshore Entertainment None Lee Toland Krieger J. Mills Goodloe Blake Lively Harrison Ford Ellen Burstyn CA San Francisco POINT (-122.383916975 37.773631005) Ballers Season 3 2017 Huntington Park (California &amp; Taylor Streets, Nob Hill) None Chori Perros Productions, LLC HBO Julian Farino Stephen Levinson Dwayne Johnson John David Washington Omar Benson Miller CA San Francisco POINT (-122.412460038 37.791610019) God is a Communist?* (show me heart universe) 2010 Sacramento &amp; Washington Streets None Trismegistus Productions None Jon Poznanter Jon Poznanter John Wynn None None CA San Francisco POINT (-122.422048977 37.793165556) Tales of the City 2019 Market and Noe St None Universal Television LLC Netflix Alan Poul, Silas Howard, Stacie Passon Armistead Maupin, Lauren Morelli, Hansol Jung, Marcus Gardley Laura Linney Ellen Page Murray Bartlett CA San Francisco POINT (-122.433140037 37.764240004) Dirty Harry 1971 Hall of Justice (850 Bryant Street) None The Malpaso Company Warner Brothers Don Siegel Harry Julian Fink Clint Eastwood Harry Guardino None CA San Francisco POINT (-122.404281982 37.775144986) Chance- Season 1 ep110 2016 18 Urbano None TVM Productions HULU Alexandra Cunningham and Kem Nunn Michael Lehmann Hugh Laurie Gretchen Mol Ethan Suplee CA San Francisco POINT (-122.463112968 37.724702986) Ballers Season 3 2017 Embarcadero around Rincon Park None Chori Perros Productions, LLC HBO Julian Farino Stephen Levinson Dwayne Johnson John David Washington Omar Benson Miller CA San Francisco POINT (-122.410722671 37.808306105) Bedazzled 2000 1155 Filbert Street at Hyde None Twentieth Century Fox Film Corp. Twentieth Century Fox Film Corp. Harold Ramis Harold Ramis Brendan Fraser Elizabeth Hurley None CA San Francisco POINT (-122.418469024 37.800035005) It Came From Beneath the Sea 1955 Golden Gate Bridge With 23 miles of ladders and 300,000 rivets in each tower, the Golden Gate Bridge was the world's longest span when it opened in 1937. Clover Productions Columbia Pictures Robert Gordon George Worthing Yates Kenneth Tobey Faith Domergue Donald Curtis CA San Francisco POINT (-122.47847 37.81914) GirlBoss 2017 Mission Thrift, 2330 Mission St. None Hippolyta Productions, LLC Netflix Jamie Babbit, Amanda Brotchie, Steven K. Tsuchida, Christian Ditter, John Riggi Kay Cannon Britt Robertson Ellie Reed Amanda Rea CA San Francisco POINT (-122.41957904 37.759416009) Dirty Harry 1971 St. Peter &amp; Paul's Church (666 Filbert Street, Washington Square) Though Marilyn Monroe and Joe DiMaggio were not allowed to be married at the Church (DiMaggio had married his first wife at the Church but was divorced), the couple returned to the steps of the Church for photos, following their City Hall nuptials. The Malpaso Company Warner Brothers Don Siegel Harry Julian Fink Clint Eastwood Harry Guardino None CA San Francisco POINT (-122.410437987 37.801430005) Cardinal X 2015 812 22nd St. and Tennessee None Fire Horse Film Productions LLC None Annie Wang Annie Wang Annie Q Francesca Eastwood Pierson Fode CA San Francisco POINT (-122.389249961 37.75789) Looking 2014 Folsom Street Fair on Folsom St. None Mission Street Productions, LLC Home Box Office (HBO) Andrew Haigh Michael Lannan Jonathan Groff Frankie J. Alvarez Murray Bartlett CA San Francisco POINT (-122.393953862 37.787720205) Looking Season 2 ep 206 2015 770 Haight Street None Mission Street Productions, LLC HBO Andrew Haigh Michael Lannan Jonathan Groff Frankie Alvarez Murray Bartlett CA San Francisco POINT (-122.434883976 37.771797002) Dim Sum: A Little Bit of Heart 1985 San Francisco International Airport SFO has a museum dedicated to aviation history. CIM Orion Classics Wayne Wang Terrel Seltzer Laureen Chew Kim Chew Victor Wong CA San Francisco POINT (-122.39169 37.61479) Venom 2018 Embarcadero at Harrison St None L.O.Z. Productions, Inc. Columbia Pictures, Sony Pictures Releasing Ruben Fleischer Jeff Pinkner, Scott Rosenberg Tom Hardy Michelle Wiliams Riz Ahmed CA San Francisco POINT (-122.388610003 37.789500001) The Phone/Jexi 2019 135 Mississippi St None CBS Films Inc. Lionsgate Jon Lucas, Scott Moore Jon Lucas, Scott Moore Adam Devine Alexandra Shipp Michael Pena CA San Francisco POINT (-122.394533997 37.76473198) Looking 2014 Valencia St. from 16th to 17th None Mission Street Productions, LLC Home Box Office (HBO) Andrew Haigh Michael Lannan Jonathan Groff Frankie J. Alvarez Murray Bartlett CA San Francisco POINT (-122.420961108 37.755218654) The OA Part II 2019 Cameron House - 920 Sacramento St None Lunar Mining LLC Netflix Zal Batmanglij Zal Batmanglij, Brit Marling Brit Marling Emory Cohen Patrick Gibson CA San Francisco POINT (-122.408437981 37.793371979) Surface 2022 Powell Street at Geary None Apple Studios, LLC Apple TV+ Sam Miller, Kevin Rodney Sullivan, Jennifer Morrison, Tucker Gates Veronica West, Erica L. Anderson,Tony Saltzman, Glenise Mullins, Leigh Ann Biety, Dan Lee West, Leigh Ann Biety &amp; Raven Jackson, Mart\u00edn Zimmerman Gugu Mbatha-Raw Oliver Jackson-Cohen Ari Graynor CA San Francisco POINT (-122.408209994 37.787360017) Time After Time 1979 Lombard &amp; Broderick Streets (Marina District) None Orion Pictures Corp. Columbia Broadcasting System (CBS) Nicholas Meyer Karl Alexander Malcolm McDowell Mary Steenburgen David Warner CA San Francisco POINT (-122.444329961 37.798800016) The Dead Pool 1988 San Francisco General Hospital Medical Center (1001 Potrero Avenue, Potrero Hill) SF General Hospital is the only Level I Trauma Center serving San Francisco and northern San Mateo County. Warner Bros. Pictures Warner Bros. Pictures Buddy Van Horn Harry Julian Fink Clint Eastwood Liam Neeson Patricia Clarkson CA San Francisco POINT (-122.40523 37.75518) Golden Gate 1994 University of California Hastings College of the Law None Metro-Goldwyn-Mayer (MGM) Metro-Goldwyn-Mayer (MGM) Howard Deutch David Henry Hwang Matt Dillon Joan Chen None CA San Francisco POINT (-122.41554 37.78073) Chance- Season 1 ep102 2016 Sutter Stockton Garage, 444 Stockton None TVM Productions HULU Lenny Abrahamson Alexandra Cunningham Hugh Laurie Gretchen Mol Ethan Suplee CA San Francisco POINT (-122.40648 37.79044) Copycat 1995 Treasure Island An artificial island, Treasure Island was created for the 1939 Golden Gate International Exposition, and is named after the novel by Robert Louis Stevenson, a one-time San Francisco resident. Regency Enterprises Warner Bros. Pictures Jon Amiel Ann Biderman Sigourney Weaver Holly Hunter None CA San Francisco POINT (-122.37087 37.82489) Women is Losers 2020 26 Edna St None Look at the Moon Pictures None Lissette Feliciano Lissette Feliciano Lorenza Izzo Simu Liu Liza Weil CA San Francisco POINT (-122.446353018 37.727060983) Steve Jobs 2015 California St. from Jones St. to Mason St. None RDF Productions LLC Universal Pictures Danny Boyle Aaron Sorkin Michael Fassbender Kate Winslet Seth Rogen CA San Francisco POINT (-122.463695489 37.785102054) Nine Months 1995 Star's Caf\u00e9 (55 Golden Gate Avenue at Van Ness) None 1492 Pictures Twentieth Century Fox Film Corp. Chris Columbus Chris Columbus Hugh Grant Julianne Moore Robin Williams CA San Francisco POINT (-122.420559974 37.781010013) Bullitt 1968 Kennedy Hotel (226 Embarcadero at Howard Street) Hotel was destroyed in the 1989 Loma Prieta earthquake. Corporate headquarters for the Gap reside at the location today. Warner Brothers / Seven Arts Seven Arts Warner Brothers Peter Yates Alan R. Trustman Steve McQueen Jacqueline Bisset Robert Vaughn CA San Francisco POINT (-122.391200011 37.792329983) Final Analysis 1992 Westin St. Francis Hotel (335 Powell Street, Union Square) The hotel was originally supposed to be named the Crocker Hotel, after Charles Founder the railroad magnate who founded it. However, the hotel took the name the St. Francis after one of the earliest Gold Rush hotels. Warner Bros. Pictures Warner Bros. Pictures Phil Joanou Robert Berger Richard Gere Kim Basinger None CA San Francisco POINT (-122.40833 37.78788) I Remember Mama 1948 The Ferry Building Every hour and half-hour, the clock bell atop the Ferry Building chimes portions of the Westminster Quarters. RKO Radio Pictures RKO Radio Pictures George Stevens DeWitt Bodeen Irene Dunne Barbara Bel Geddes Oskar Homolka CA San Francisco POINT (-122.393945 37.795319996) Hemingway &amp; Gelhorn 2011 Muni Metro East (501 Cesar Chavez) None Attaboy Films, For Whom Productions, Home Box Office (HBO) Home Box Office (HBO) Philip Kaufman Jerry Stahl &amp; Barbara Turner Nicole Kidman Clive Owen None CA San Francisco POINT (-122.382777036 37.750036995) Milk 2008 Grace Cathedral Episcopal Church (1100 California Street) Grace Cathedral Episcopal Church is the West Coast's largest Episcopalian cathedral. Focus Features Focus Features Gus Van Sant Dustin Lance Black Sean Penn Emile Hirsch None CA San Francisco POINT (-122.41347 37.79183) Sense8 2015 Dolores Park, 20th St. between Church &amp; Dolores St. group of friends have a heated argument, then flashback of pre-argument Unpronounceable Productions, LLC Netflix The Wachowskis The Wachowskis Jamie Clayton None None CA San Francisco POINT (-122.425296449 37.752457311) Looking 2014 Jawbone at 99 Rhode Island St. None Mission Street Productions, LLC Home Box Office (HBO) Andrew Haigh Michael Lannan Jonathan Groff Frankie J. Alvarez Murray Bartlett CA San Francisco POINT (-122.402485992 37.768911993) When We Rise 2017 Castro St. between 17th and 18th St. None Film 49 Productions Amercian Broadcasting Company Gus Van Sant Dustin Lance Black Guy Pierce Mary-Louise Parker Michael Kenneth Williams CA San Francisco POINT (-122.278570031 37.810609992) Goliath- Season 4 2021 Mountain Spring Avenue at Glenbrook Avenue None Picrow, Inc. Amazon Studios Billy Bob Thornton, Lawrence Trilling, Derek Johansen David E. Kelley, Jonathan Shapiro Billy Bob Thornton Nina Arianda Tania Raymonde CA San Francisco POINT (-122.44953001 37.758189988) The Pursuit of Happyness 2006 Glide Memorial Church (434 Ellis St) None Columbia Pictures Corporation Columbia Pictures Steven Conrad Gabriele Muccino Will Smith Jayden C. Smith None CA San Francisco POINT (-122.41346704 37.785046989) Chance- Season 1 ep109 2016 850 Bryant- 6th floor County Jail The former County Jail on the 6th floor was re-created to resemble a Mexican jail for the scene TVM Productions HULU Sara Gran and Pete Begler Dan Attias Hugh Laurie Gretchen Mol Ethan Suplee CA San Francisco POINT (-122.404281982 37.775144986) Super Pumped: The Battle for Uber 2022 Alameda St. between Vermont St. &amp; San Bruno Ave. None Possible Productions Showtime Allen Coulter, Daniel Gray Longino, John Dahl, Zetna Fuentes Brian Koppelman &amp; David Levien, Sarah Acosta, Stephen Schiff, Emily Hornsby, Safie M. Dirie, Beth Schacter Joseph Gordon-Levitt Kyle Chandler Kerry Bish\u00e9 CA San Francisco POINT (-122.405759963 37.768499981) The Towering Inferno 1974 2898 Vallejo Street None Irwin Allen Productions Twentieth Century - Fox John Guillermin Stirling Silliphant Steve McQueen Paul Newman William Holden CA San Francisco POINT (-122.444880988 37.79423498) Common Threads: Stories From the Quilt 1989 The Castro From 1910-1920 the Castro was called \"Little Scandinavia\" because of its high concentration of residents of Scandinavian ancestry. Home Box Office (HBO) Direct Cinema Limited Rob Epstein Jeffrey Friedman Sara Lewinstein David Mandell None CA San Francisco POINT (-122.43486 37.75921) Herbie Rides Again 1974 Sheraton Palace Hotel (639 Market Street) The hotel was destroyed in the 1906 earthquake and fire, had to be rebuilt, and was reopened in 1909. Walt Disney Productions Buena Vista Distribution Robert Stevenson Bill Walsh Helen Hayes Ken Berry Stefanie Powers CA San Francisco POINT (-122.402183833 37.788545667) DEVS 2020 Corona Heights - 16th at Flint St None Minim Productions FX Network Alex Garland Alex Garland Sonoya Mizuno Nick Offerman Jin Ha CA San Francisco POINT (-122.436530014 37.763990014) The Net 1995 Moscone Convention Center None Columbia Pictures Corp. Columbia Pictures Irwin Winkler John Brancato Sandra Bullock Jeremy Northam None CA San Francisco POINT (-122.40053 37.78354) Venom: Let There Be Carnage 2021 Sutter Stockton Garage None SM Film Productions Sony Pictures Andy Serkis Kelly Marcel Tom Hardy Michelle Wiliams Woody Harrelson CA San Francisco POINT (-122.40648 37.79044) Terminator - Genisys 2015 Embarcadero between Pier 2 and Harrison None T5 Productions LLC Paramount Pictures Alan Taylor James Cameron Arnold Schwarzenegger Jason Clarke None CA San Francisco POINT (-122.39517999 37.784330001) Ant-Man and the Wasp 2018 Saint Louis Alley at Jackson None PYM Particles Productions II, LLC Walt Disney Studios Motion Pictures Peyton Reed Chris McKenna Paul Rudd Evangeline Lilly Michael Douglas CA San Francisco POINT (-122.407099978 37.795960017) The Presidio 1988 Presidio (Golden Gate National Recreation Area) In 1776, Spain made the Presidio a fortified area. The area was then given to Mexico, but then given to the US in 1848. The 1994 demilitarization of the area in 1994 marked the end of its 219 years of military use. Paramount Pictures Paramount Pictures Peter Hyams Larry Ferguson Sean Connery Mark Harmon Meg Ryan CA San Francisco POINT (-122.4283 37.80576) Ant-Man 2015 Intersection of Broadway at Kearney Driving shots PYM Particles Productions, LLC Walt Disney Studios Motion Pictures Peyton Reed Gabriel Ferrari Michael Douglas Paul Rudd None CA San Francisco POINT (-122.405489982 37.798019996) Murder in the First, Season 3 2016 Howard Street at Steuart Street None Turner North Center Productions Turner Network Television (TNT) Steven Bochcho Eric Lodal Taye Diggs Kathleen Robertson Ian Anthony Dale CA San Francisco POINT (-122.391639977 37.79202002) Surface 2022 Jackson Street between Ross and Wentworh None Apple Studios, LLC Apple TV+ Sam Miller, Kevin Rodney Sullivan, Jennifer Morrison, Tucker Gates Veronica West, Erica L. Anderson,Tony Saltzman, Glenise Mullins, Leigh Ann Biety, Dan Lee West, Leigh Ann Biety &amp; Raven Jackson, Mart\u00edn Zimmerman Gugu Mbatha-Raw Oliver Jackson-Cohen Ari Graynor CA San Francisco POINT (-122.406219962 37.796069988) Cardinal X 2015 3639 Taraval St None Fire Horse Film Productions LLC None Annie Wang Annie Wang Annie Q Francesca Eastwood Pierson Fode CA San Francisco POINT (-122.505325993 37.741575003) Murder in the First, Season 2 2015 Columbus Avenue between Washington and Bay Streets None Turner North Center Productions Turner Network Television (TNT) Steven Bochcho Eric Lodal Taye Diggs Kathleen Robertson Ian Anthony Dale CA San Francisco POINT (-121.959150034 37.532909996) The Matrix Resurrections 2021 California at Grant Ave None Adobe Pictures, Inc. Warner Brothers Lana Wachowski Lana Wachowski, David Mitchell, Aleksander Hemon Keanu Reeves Keanu Reeves Neil Patrick Harris CA San Francisco POINT (-122.405889967 37.792459986) The Right Stuff 1983 Cow Palace Supposedly, the Cow Palace's name derives from a newspaper editorial in which the writer wonders whether the soon-to-be-built structure for livestock was a \"palace for cows\". The Ladd Company The Ladd Company Philip Kaufman Philip Kaufman Sam Shepard Scott Glenn Ed Harris CA San Francisco POINT (-122.41967 37.70716) So I Married an Axe Murderer 1993 305 Hugo Street None TriStar Pictures TriStar Pictures Thomas Schlamme Robbie Fox Mike Myers Nancy Travis None CA San Francisco POINT (-122.46114589 37.765128612) Red Widow 2013 California &amp; Davis St None Beyond Pix American Broadcasting Company (ABC) Alon Aranya Melissa Rosenberg Radha Mitchell Sterling Beaumon Clifton Collins Jr. CA San Francisco POINT (-122.39763002 37.793500013) Venom 2018 Larkin St btwn Post and Geary None L.O.Z. Productions, Inc. Columbia Pictures, Sony Pictures Releasing Ruben Fleischer Jeff Pinkner, Scott Rosenberg Tom Hardy Michelle Wiliams Riz Ahmed CA San Francisco POINT (-122.418110027 37.786109982) Sister Act 2: Back in the Habit 1993 St. Peter &amp; Paul's Church (666 Filbert Street, Washington Square) Though Marilyn Monroe and Joe DiMaggio were not allowed to be married at the Church (DiMaggio had married his first wife at the Church but was divorced), the couple returned to the steps of the Church for photos, following their City Hall nuptials. Touchstone Pictures Buena Vista Pictures Bill Duke Joseph Howard Whoopi Goldberg Maggie Smith None CA San Francisco POINT (-122.410437987 37.801430005) Etruscan Smile 2017 Treasure Island None Po Valley Productions, LLC TBD Oded Binnun/ Michel Brezis Sarah Bellwood, Michal Lali Kagan, Michael McGowan Amital Stern, Jose Luis Sampedro Brian Cox Roseanne Arquette Thora Birch CA San Francisco POINT (-122.37087 37.82489) Vertigo 1958 San Francisco Drydock (20th and Illinois Streets) None Alfred J. Hitchcock Productions Paramount Pictures Alfred Hitchcock Alec Coppel James Stewart Kim Novak Barbara Bel Geddes CA San Francisco POINT (-122.387580035 37.760560013) Shang-Chi and the Legend of the Ten Rings 2021 Post between Van Ness and Kearny None Freelance Restorations LLC Disney/Marvel Destin Daniel Cretton Dave Callaham, Destin Daniel Cretton, Andrew Lanham Simu Liu Tony Chiu-Wai Leung Awkwafina CA San Francisco POINT (-122.403659961 37.788899982) The Doors 1991 None None Bill Graham Films TriStar Pictures Oliver Stone J. Randal Johnson Val Kilmer Meg Ryan None CA San Francisco POINT (-122.41965999999996 37.777120000000025) Magnum Force 1973 San Francisco International Airport SFO has a museum dedicated to aviation history. The Malpaso Company Warner Bros. Pictures Ted Post John Milius Clint Eastwood Hal Holbrook Mitchell Ryan CA San Francisco POINT (-122.39169 37.61479) The Game 1997 Harrison Street (The Embarcadero) None Polygram Filmed Entertainment Polygram Filmed Entertainment David Fincher John Brancato Michael Douglas Sean Penn Deborah Kara Unger CA San Francisco POINT (-122.38837 37.7896) The Phone/Jexi 2019 3419 16th St None CBS Films Inc. Lionsgate Jon Lucas, Scott Moore Jon Lucas, Scott Moore Adam Devine Alexandra Shipp Michael Pena CA San Francisco POINT (-122.429533974 37.764234011) Looking Season 2 ep 209 2015 Muddy Waters, 521 Valencia Street None Mission Street Productions, LLC HBO Andrew Haigh Michael Lannan Jonathan Groff Frankie Alvarez Murray Bartlett CA San Francisco POINT (-122.421581979 37.764504998) The Last Thing He Told Me 2023 2698 Pacific Avenue None 20th Television Apple TV+ Olivia Newman, Deniz Gamze Erg\u00fcven, Daisy Von Scherler Mayer, Lila Neugebauer Laura Dave Jennifer Garner Angourie Rice Aisha Tyler CA San Francisco POINT (-122.439501985 37.79299999) The Diary of a Teenage Girl 2015 Ocean Beach at Point Lobos None Diary the Movie, LLC Sony Pictures Classics Marielle Heller Marielle Heller Alexander Skarsgard Kristen Wiig Christopher Meloni CA San Francisco POINT (-122.492864995 37.502360012) The Phone/Jexi 2019 Elixir - 3200 16th St None CBS Films Inc. Lionsgate Jon Lucas, Scott Moore Jon Lucas, Scott Moore Adam Devine Alexandra Shipp Michael Pena CA San Francisco POINT (-122.42433 37.764993) Venom: Let There Be Carnage 2021 238 Columbus None SM Film Productions Sony Pictures Andy Serkis Kelly Marcel Tom Hardy Michelle Wiliams Woody Harrelson CA San Francisco POINT (-122.40588278 37.7974432) Looking 2014 Tiburon Hiking Trail, Tiburon, CA None Mission Street Productions, LLC Home Box Office (HBO) Andrew Haigh Michael Lannan Jonathan Groff Frankie J. Alvarez Murray Bartlett CA San Francisco POINT (-122.301192503 37.509261066) DEVS 2020 Alamo Square Park None Minim Productions FX Network Alex Garland Alex Garland Sonoya Mizuno Nick Offerman Jin Ha CA San Francisco POINT (-122.43146 37.77722) Patch Adams 1998 Treasure Island An artificial island, Treasure Island was created for the 1939 Golden Gate International Exposition, and is named after the novel by Robert Louis Stevenson, a one-time San Francisco resident. Bungalow 78 Productions Universal Pictures Tom Shadyac Steve Oedekerk Robin Williams Philip Seymour Hoffman None CA San Francisco POINT (-122.37087 37.82489) Blue Jasmine 2013 2179 48th Ave None Perdido Productions Sony Pictures Classics Woody Allen Woody Allen Cate Blanchett Alec Baldwin Peter Sarsgaard CA San Francisco POINT (-122.507259027 37.745555987) Heart and Souls 1993 2810 Pacific Avenue None Universal Pictures Electric Parc Tomas Gislason Tomas Gislason Jorgen Leth None None CA San Francisco POINT (-122.442088976 37.792703019) Junior 1994 Postcard Row (Alamo Square, Hayes Valley) The 6 Victorian homes across from Alamo Square Park are among the few Victorians to survive the Great Fire. Northern Lights Entertainment Universal Pictures Ivan Reitman Kevin Wade Arnold Schwarzenegger Danny DeVito Emma Thompson CA San Francisco POINT (-122.43146 37.77722) Basic Instinct 1992 1158-70 Montgomery Street None Carolco Pictures TriStar Pictures Paul Verhoeven Joe Eszterhas Michael Douglas Sharon Stone George Dzundza CA San Francisco POINT (-122.40397202 37.799987019) Bitter Melon 2018 66 Danton St None Bitter Melon Film LLC/Mammoth Pictures ABS-CBN, Gravitas Ventures H.P. Mendoza H.P. Mendoza Jon Norman Schneider Patrick Epino Brian Rivera CA San Francisco POINT (-122.432654976 37.731292) Chance- Season 1 ep107 2016 145 Barlett St. None TVM Productions HULU Alexandra Cunningham and Kem Nunn Michael Lehmann Hugh Laurie Gretchen Mol Ethan Suplee CA San Francisco POINT (-122.419537968 37.754663009) Budding Prospects, Pilot 2017 500 Cortland Avenue None Picrow Streaming Inc. Amazon Terry Zwigoff Melissa Axelrod, T. C. Boyle (based on the book by) Adam Rose Will Sasso Joel David Moore CA San Francisco POINT (-122.416142962 37.738855997) Dr. Dolittle 2 2001 Sacramento St., Between Pierce &amp; Broderick Streets None Twentieth Century Fox Film Corp. Twentieth Century Fox Film Corp. Steve Carr Larry Levin Eddie Murphy Kristen Wilson None CA San Francisco POINT (-122.442289974 37.788790012) The Last Black Man in San Francisco 2019 Shotwell St btwn 20th and 21st St None LBMISF, LLC A41 Joe Talbot Joe Talbot, Jimmie Fails, Rob Richert Jimmie Fails Jonathan Majors Danny Glover CA San Francisco POINT (-122.383780015 37.759840008) San Andreas 2015 Water work in SF Bay Characters drive in a high speed picture boat to see different views of the city. Upside Down Productions, Inc. Warner Bros. Brad Peyton Allan Loeb Dwayne Johnson None None CA San Francisco POINT (-122.402654 37.767865) Blue Jasmine 2013 Jones &amp; Pacific None Perdido Productions Sony Pictures Classics Woody Allen Woody Allen Cate Blanchett Alec Baldwin Peter Sarsgaard CA San Francisco POINT (-122.415000006 37.795889987) Freebie and the Bean 1974 Twin Peaks The 2nd highest point in SF after Mt. Davidson, Twin Peaks sit at the geographic center of SF. The native Ohlone people called the area \"called the area \u201cLos Pechos de la Chola\u201d or \"Breasts of the Indian Maiden,\" but in the 19th Century when America took over the area, it was renamed \"Twin Peaks\". Warner Bros. Pictures American Broadcasting Company (ABC) Richard Rush Robert Kaufman Alan Arkin James Caan Loretta Swit CA San Francisco POINT (-122.44224 37.75669) Looking Season 2 ep 204 2015 Urban Flowers, 4029 18th Street None Mission Street Productions, LLC HBO Andrew Haigh Michael Lannan Jonathan Groff Frankie Alvarez Murray Bartlett CA San Francisco POINT (-122.433364 37.760813) Looking \"...(truncated)   ### We want to count the number of locations of the films. But we also want to restrict the output result set so that we only retrieve the number of locations of the films written by a certain writer  <pre><code>%%sql\nSELECT COUNT(Locations) FROM FilmLocations WHERE Writer=\"James Cameron\";\n</code></pre> COUNT(Locations) 24   ## Using DISTINCT statement  ### Assume that we want to retrieve the titles of all films in the table so that duplicates will be discarded in the output result set  <pre><code>%%sql\nSELECT DISTINCT Title FROM FilmLocations;\n</code></pre> title Nash Bridges The OA Part II Looking \"Special\" The Phone/Jexi Terminator - Genisys Murder in the First, Season 3 Ant-Man and the Wasp Dirty Harry 40 Days and 40 Nights Harold and Maude Time After Time Quitters The Dead Pool The Princess Diaries Murder in the First, Season 1 Junior The Woman In Red The Bachelor Final Analysis Women is Losers Rent The Last Black Man in San Francisco Smile Again, Jenny Lee Sense8 Tucker: The Man and His Dream Tales of the City Nine to Five Shit and Champagne Ant-Man Pacific Heights Interview With The Vampire Bitter Melon Chance Season 2 Dawn of the Planet of the Apes Hulk Venom Surface Sudden Impact Looking Season 2 ep 204 Etruscan Smile Summertime Always Be My Maybe San Andreas Birth of the Dragon The Rock So I Married an Axe Murderer Blue Jasmine The Maltese Falcon Chance- Season 1 ep106 Chance - Season 1 Pilot Goliath- Season 4 Groove Heart Beat DEVS Edtv Looking Season 2 ep 207 Flubber A Taiwanese Tale of Two Cities Nine Months Bullitt Copycat Clickbait Sense8 - Season 2 The Matrix Resurrections Age of Adaline Ballers Season 3 God is a Communist?* (show me heart universe) Chance- Season 1 ep110 Bedazzled It Came From Beneath the Sea GirlBoss Cardinal X Looking Looking Season 2 ep 206 Dim Sum: A Little Bit of Heart Golden Gate Chance- Season 1 ep102 Steve Jobs I Remember Mama Hemingway &amp; Gelhorn Milk When We Rise The Pursuit of Happyness Chance- Season 1 ep109 Super Pumped: The Battle for Uber The Towering Inferno Common Threads: Stories From the Quilt Herbie Rides Again The Net Venom: Let There Be Carnage The Presidio Murder in the First, Season 2 The Right Stuff Red Widow Sister Act 2: Back in the Habit Vertigo Shang-Chi and the Legend of the Ten Rings The Doors Magnum Force The Game Looking Season 2 ep 209 The Last Thing He Told Me The Diary of a Teenage Girl Patch Adams Heart and Souls Basic Instinct Chance- Season 1 ep107 Budding Prospects, Pilot Dr. Dolittle 2 Freebie and the Bean Flower Drum Song Chance- Season 1 ep104 Hard to Hold The Bridge Sonic the Hedgehog I\u2019m A Virgo Sweet November Looking Season 2 ep 202 When a Man Loves a Woman Godzilla Swing Chance- Season 1 ep103 Fearless Pushing Dead Live Nude Girls Unite The Lady from Shanghai Invasion of the Body Snatchers Americana Alexander's Ragtime Band Big Eyes I Am Michael The Enforcer Petulia A Smile Like Yours Jagged Edge Play it Again, Sam Woman on the Run Experiment in Terror Happy Gilmore Star Trek IV: The Voyage Home They Call Me MISTER Tibbs Patty Hearst The Wedding Planner San Francisco My Big Fat Chinese Christmas Pal Joey Getting Even with Dad Foul Play A View to a Kill The Conversation Vegas in Space Ant-Man and the Wasp: Quantumania Dying Young Haiku Tunnel Twisted Doctor Dolittle 48 Hours Mrs. Doubtfire The Lineup Need For Speed Looking Season 2 ep 210 Rollerball Looking Season 2 ep 203 Alive Looking Season 2 ep 205 Chance - Season 1 ep105 The Last of the Gladiators Burglar Dark Passage Take the Money and Run What the Bleep Do We Know High Anxiety D.O.A Beautiful Boy 50 First Dates Alcatraz Looking Season 2 ep 208 Hereafter Jade Boys and Girls Pleasure of His Company All About Eve Guess Who's Coming to Dinner The Sweetest Thing The Competition Sneakers A Night Full of Rain What's Up Doc? Pretty Woman Serendipity James and the Giant Peach Bicentennial Man Chef Dynasty: House of Fang High Crimes On the Road Innerspace This Is Us Kamikaze Hearts Night of Henna Casualties of War Joy Luck Club The Matrix The Assassination of Richard Nixon Point Blank American Graffiti The Caine Mutiny The House on Telegraph Hill Sphere 180 The Times of Harvey Milk Birdman of Alcatraz Family Plot Dopamine The Birds Another 48 Hours Chance - Season 1ep105 The Internship Superman George of the Jungle Chance- Season 1 ep108 The Fan By Hook or By Crook Seven Girlfriends Love &amp; Taxes Swingin' Along CSI: NY- episode 903 Marnie Serial Sausalito Class Action Mother Desperate Measures Bee Season Maxie Dream with the Fishes Parks and Recreation Memoirs of an Invisible Man Chu Chu and the Philly Flash Cherish A Jitney Elopement About a Boy Homeward Bound II: Lost in San Francisco House of Sand and Fog Knife Fight Mission (aka City of Bars) Blindspotting (Season 2) The Nightmare Before Christmas Nina Takes a Lover Metro Romeo Must Die The Love Bug Gentleman Jim To the Ends of the Earth Sudden Fear American Yearbook The Candidate After the Thin Man Tweek City Fat Man and Little Boy Star Trek II : The Wrath of Khan Silicon Valley Season 4 Broken-A Modern Love Story Big Sur Julie and Jack Dream for an Insomniac Street Music Crackers The Fog of War Midnight Lace The Other Sister Until the End of the World Zodiac Panther Susan Slade Big Trouble in Little China Sister Act Yours, Mine and Ours Thief of Hearts Tin Cup Days of Wine and Roses Mona Lisa Smile Playing Mona Lisa Good NeighborSam Woman on Top 24 Hours on Craigslist Greed Escape From Alcatraz Down Periscope Shattered Chan is Missing True Believer The Doctor Fathers' Day Attack of the Killer Tomatoes Around the Fire Babies Just One Night Stigmata The Californians Nora Prentiss The Organization Raising Cain Just Like Heaven Confessions of a Burning Man Under the Tuscan Sun Forrest Gump Phenomenon The Jazz Singer Beaches The Laughing Policeman Psych-Out Red Diaper Baby Star Trek VI: The Undiscovered Country Never Die Twice How Stella Got Her Groove Back Jack I's The Parent Trap The Graduate Quicksilver The Ten Commandments Can't Stop the Music City of Angels Faces of Death On the Beach Earth Mama Shoot the Moon Shadow of the Thin Man Fandom What Dreams May Come Barbary Coast The Core Hello Frisco, Hello Indiana Jones and the Last Crusade The Master The Zodiac   ## Using LIMIT statement ### Retrieve only the first 25 rows from the table so that rows other than those are not in the output result set.  <pre><code>%%sql \nSELECT * FROM FilmLocations LIMIT 25;\n</code></pre> title release_year locations fun_facts production_company distributor director writer actor_1 actor_2 actor_3 state city point Nash Bridges 2021 Pier 45, San Francisco None Village NB Productions, LLC USA Nework Greg Beeman Carlton Cuse, Bill Chais Don Johnson Cheech Marin Joe Dinicol CA San Francisco POINT (-122.417428501 37.809873676) The OA Part II 2019 Ada Court at O'Farrell St None Lunar Mining LLC Netflix Zal Batmanglij Zal Batmanglij, Brit Marling Brit Marling Emory Cohen Patrick Gibson CA San Francisco POINT (-122.41568003 37.785469982) Looking \"Special\" 2016 1246 Folsom Street None Mission Street Productions, LLC HBO Andrew Haigh Michael Lannan Jonathan Groff Frankie Alvarez Murray Bartlett CA San Francisco POINT (-122.411002006 37.774595007) The Phone/Jexi 2019 Liberty St btwn Castro and Noe St None CBS Films Inc. Lionsgate Jon Lucas, Scott Moore Jon Lucas, Scott Moore Adam Devine Alexandra Shipp Michael Pena CA San Francisco POINT (-122.432399999 37.75702) Terminator - Genisys 2015 California at Larkin None T5 Productions LLC Paramount Pictures Alan Taylor James Cameron Arnold Schwarzenegger Jason Clarke None CA San Francisco POINT (-122.419039999 37.790790018) Murder in the First, Season 3 2016 600 Octavia Street None Turner North Center Productions Turner Network Television (TNT) Steven Bochcho Eric Lodal Taye Diggs Kathleen Robertson Ian Anthony Dale CA San Francisco POINT (-122.424684038 37.777814999) Ant-Man and the Wasp 2018 Bush St at Mason St VFX Plate Shots PYM Particles Productions II, LLC Walt Disney Studios Motion Pictures Peyton Reed Chris McKenna Paul Rudd Evangeline Lilly Michael Douglas CA San Francisco POINT (-122.410430025 37.78996) Dirty Harry 1971 Portsmouth Square (Chinatown) In 1847 the first public school in California was erected on what would become Portsmouth Square. The Malpaso Company Warner Brothers Don Siegel Harry Julian Fink Clint Eastwood Harry Guardino None CA San Francisco POINT (-122.40571 37.79479) 40 Days and 40 Nights 2002 Caf\u00e9 Trieste (609 Vallejo) Francis Ford Coppola allegedly wrote large portions of \"The Godfather\" trilogy in Caf\u00e9 Trieste. Miramax Films Miramax Films Michael Lehmann Robert Perez Josh Hartnett Shaynnyn Sossamon None CA San Francisco POINT (-122.407357973 37.798572992) Harold and Maude 1971 Sutro Baths (Point Lobos Avenue) None Mildred Lewis and Colin Higgins Productions Paramount Pictures Hal Ashby Colin Higgins Ruth Gordon Bud Cort None CA San Francisco POINT (-122.510031794 37.779832009) Time After Time 1979 Palace of Fine Arts (3301 Lyon Street) The original Palace was built for the 1915 Panama-Pacific Exposition, and completely destroyed in 1964. It was rebuilt in 1965. Orion Pictures Corp. Columbia Broadcasting System (CBS) Nicholas Meyer Karl Alexander Malcolm McDowell Mary Steenburgen David Warner CA San Francisco POINT (-122.44899 37.80288) Quitters 2015 Claire Lilienthal Elementary School None Frederick &amp; Ashbury, LLC. None Noah Pritzker Noah Pritzker Kara Hayward Mira Sorvino Saffron Burrows CA San Francisco POINT (-122.45796 37.7871) Quitters 2015 1536 Noe St. None Frederick &amp; Ashbury, LLC. None Noah Pritzker Noah Pritzker Kara Hayward Mira Sorvino Saffron Burrows CA San Francisco POINT (-122.431454017 37.744473004) The Dead Pool 1988 550 El Camino Del Mar (Seacliff) None Warner Bros. Pictures Warner Bros. Pictures Buddy Van Horn Harry Julian Fink Clint Eastwood Liam Neeson Patricia Clarkson CA San Francisco POINT (-122.489937992 37.787534989) The Princess Diaries 2001 2601 Lyon Street None Walt Disney Pictures Buena Vista Pictures Garry Marshall Gina Wendkos Julie Andrews Anne Hathway None CA San Francisco POINT (-122.447010997 37.794680981) Murder in the First, Season 1 2014 Ida B. Wells High School (1099 Hayes Street) Ida B. Wells High School is named after the African-American journalist, suffragist and early leader in the Civil Rights Movement Ida B. Wells Turner North Center Productions Turner Network Television (TNT) Steven Bochcho Eric Lodal Taye Diggs Kathleen Robertson Ian Anthony Dale CA San Francisco POINT (-122.434035978 37.775064017) Junior 1994 722 Steiner Street None Northern Lights Entertainment Universal Pictures Ivan Reitman Kevin Wade Arnold Schwarzenegger Danny DeVito Emma Thompson CA San Francisco POINT (-122.432784979 37.776451012) The Woman In Red 1984 Postcard Row (Alamo Square, Hayes Valley) The 6 Victorian homes across from Alamo Square Park are among the few Victorians to survive the Great Fire. Orion Pictures Corp. MGM Home Entertainment Gene Wilder Jean Loup Dabadie &amp; Yves Robert Gene Wilder Charles Grodin None CA San Francisco POINT (-122.43146 37.77722) The Bachelor 1999 Pacific Stock Exchange (301 Pine Street at Sansome) None George Street Pictures New Line Cinema Gary Sinyor Steve Cohen Chris O'Donnell Renee Zellweger None CA San Francisco POINT (-122.400920001 37.792099983) Final Analysis 1992 Bix Restaurant (56 Gold Street) None Warner Bros. Pictures Warner Bros. Pictures Phil Joanou Robert Berger Richard Gere Kim Basinger None CA San Francisco POINT (-122.402907 37.796864) Women is Losers 2020 2712 Bryant St None Look at the Moon Pictures None Lissette Feliciano Lissette Feliciano Lorenza Izzo Simu Liu Liza Weil CA San Francisco POINT (-122.409273992 37.750881011) Rent 2005 Treasure Island An artificial island, Treasure Island was created for the 1939 Golden Gate International Exposition, and is named after the novel by Robert Louis Stevenson, a one-time San Francisco resident. Rent Productions LLC Columbia Pictures Chris Columbus Stephen Chbosky Anthony Rapp Rosario Dawson None CA San Francisco POINT (-122.37087 37.82489) The Last Black Man in San Francisco 2019 Illinois St btwn Marin and Amador None LBMISF, LLC A45 Joe Talbot Joe Talbot, Jimmie Fails, Rob Richert Jimmie Fails Jonathan Majors Danny Glover CA San Francisco POINT (-122.386040027 37.745770019) Smile Again, Jenny Lee 2015 Europa Caf\u00e9 (4318 California St. and 5th Ave.) None Carlo Caldana/Marguery Films None Carlo Caldana Linda Demetrick Craig Tsuyumine Puneet Prasad Larry Kitagawa CA San Francisco POINT (-122.463499961 37.785130012) Sense8 2015 Market St. overpass Bicycle chase scene Unpronounceable Productions, LLC Netflix The Wachowskis The Wachowskis Jamie Clayton None None CA San Francisco POINT (-122.40001657 37.79039257)   ### Now, we want to retrieve 15 rows from the table starting from row 11.  <pre><code>%%sql\nSELECT * FROM FilmLocations LIMIT 15 OFFSET 10;\n</code></pre> title release_year locations fun_facts production_company distributor director writer actor_1 actor_2 actor_3 state city point Time After Time 1979 Palace of Fine Arts (3301 Lyon Street) The original Palace was built for the 1915 Panama-Pacific Exposition, and completely destroyed in 1964. It was rebuilt in 1965. Orion Pictures Corp. Columbia Broadcasting System (CBS) Nicholas Meyer Karl Alexander Malcolm McDowell Mary Steenburgen David Warner CA San Francisco POINT (-122.44899 37.80288) Quitters 2015 Claire Lilienthal Elementary School None Frederick &amp; Ashbury, LLC. None Noah Pritzker Noah Pritzker Kara Hayward Mira Sorvino Saffron Burrows CA San Francisco POINT (-122.45796 37.7871) Quitters 2015 1536 Noe St. None Frederick &amp; Ashbury, LLC. None Noah Pritzker Noah Pritzker Kara Hayward Mira Sorvino Saffron Burrows CA San Francisco POINT (-122.431454017 37.744473004) The Dead Pool 1988 550 El Camino Del Mar (Seacliff) None Warner Bros. Pictures Warner Bros. Pictures Buddy Van Horn Harry Julian Fink Clint Eastwood Liam Neeson Patricia Clarkson CA San Francisco POINT (-122.489937992 37.787534989) The Princess Diaries 2001 2601 Lyon Street None Walt Disney Pictures Buena Vista Pictures Garry Marshall Gina Wendkos Julie Andrews Anne Hathway None CA San Francisco POINT (-122.447010997 37.794680981) Murder in the First, Season 1 2014 Ida B. Wells High School (1099 Hayes Street) Ida B. Wells High School is named after the African-American journalist, suffragist and early leader in the Civil Rights Movement Ida B. Wells Turner North Center Productions Turner Network Television (TNT) Steven Bochcho Eric Lodal Taye Diggs Kathleen Robertson Ian Anthony Dale CA San Francisco POINT (-122.434035978 37.775064017) Junior 1994 722 Steiner Street None Northern Lights Entertainment Universal Pictures Ivan Reitman Kevin Wade Arnold Schwarzenegger Danny DeVito Emma Thompson CA San Francisco POINT (-122.432784979 37.776451012) The Woman In Red 1984 Postcard Row (Alamo Square, Hayes Valley) The 6 Victorian homes across from Alamo Square Park are among the few Victorians to survive the Great Fire. Orion Pictures Corp. MGM Home Entertainment Gene Wilder Jean Loup Dabadie &amp; Yves Robert Gene Wilder Charles Grodin None CA San Francisco POINT (-122.43146 37.77722) The Bachelor 1999 Pacific Stock Exchange (301 Pine Street at Sansome) None George Street Pictures New Line Cinema Gary Sinyor Steve Cohen Chris O'Donnell Renee Zellweger None CA San Francisco POINT (-122.400920001 37.792099983) Final Analysis 1992 Bix Restaurant (56 Gold Street) None Warner Bros. Pictures Warner Bros. Pictures Phil Joanou Robert Berger Richard Gere Kim Basinger None CA San Francisco POINT (-122.402907 37.796864) Women is Losers 2020 2712 Bryant St None Look at the Moon Pictures None Lissette Feliciano Lissette Feliciano Lorenza Izzo Simu Liu Liza Weil CA San Francisco POINT (-122.409273992 37.750881011) Rent 2005 Treasure Island An artificial island, Treasure Island was created for the 1939 Golden Gate International Exposition, and is named after the novel by Robert Louis Stevenson, a one-time San Francisco resident. Rent Productions LLC Columbia Pictures Chris Columbus Stephen Chbosky Anthony Rapp Rosario Dawson None CA San Francisco POINT (-122.37087 37.82489) The Last Black Man in San Francisco 2019 Illinois St btwn Marin and Amador None LBMISF, LLC A45 Joe Talbot Joe Talbot, Jimmie Fails, Rob Richert Jimmie Fails Jonathan Majors Danny Glover CA San Francisco POINT (-122.386040027 37.745770019) Smile Again, Jenny Lee 2015 Europa Caf\u00e9 (4318 California St. and 5th Ave.) None Carlo Caldana/Marguery Films None Carlo Caldana Linda Demetrick Craig Tsuyumine Puneet Prasad Larry Kitagawa CA San Francisco POINT (-122.463499961 37.785130012) Sense8 2015 Market St. overpass Bicycle chase scene Unpronounceable Productions, LLC Netflix The Wachowskis The Wachowskis Jamie Clayton None None CA San Francisco POINT (-122.40001657 37.79039257)   ## Practice exercises COUNT  ### Retrieve the number of locations of the films which are directed by Woody Allen.  <pre><code>%%sql\nSELECT COUNT(Locations) FROM FilmLocations WHERE Director=\"Woody Allen\";\n</code></pre> COUNT(Locations) 31   ### Retrieve the number of films shot at Russian Hill.  <pre><code>%%sql\nSELECT Count(Title) FROM FilmLocations WHERE Locations=\"Russian Hill\";\n</code></pre> Count(Title) 1   ### Retrieve the number of rows having a release year older than 1950 from the \"FilmLocations\" table.  <pre><code>%%sql\nSELECT Count(*) FROM FilmLocations WHERE Release_Year&lt;1950;\n</code></pre> Count(*) 31   ### DISTINCT #### Retrieve the names of all unique films released in the 21st century and onwards, along with their release years.  <pre><code>%%sql\nSELECT DISTINCT Title, Release_Year FROM FilmLocations WHERE Release_Year&gt;=2001;\n</code></pre> title release_year Nash Bridges 2021 The OA Part II 2019 Looking \"Special\" 2016 The Phone/Jexi 2019 Terminator - Genisys 2015 Murder in the First, Season 3 2016 Ant-Man and the Wasp 2018 40 Days and 40 Nights 2002 Quitters 2015 The Princess Diaries 2001 Murder in the First, Season 1 2014 Women is Losers 2020 Rent 2005 The Last Black Man in San Francisco 2019 Smile Again, Jenny Lee 2015 Sense8 2015 Tales of the City 2019 Shit and Champagne 2020 Ant-Man 2015 Bitter Melon 2018 Chance Season 2 2017 Dawn of the Planet of the Apes 2014 Hulk 2003 Venom 2018 Surface 2022 Looking Season 2 ep 204 2015 Etruscan Smile 2017 Summertime 2015 Always Be My Maybe 2019 San Andreas 2015 Birth of the Dragon 2016 Blue Jasmine 2013 Chance- Season 1 ep106 2016 Chance - Season 1 Pilot 2016 Goliath- Season 4 2021 DEVS 2020 Looking Season 2 ep 207 2015 A Taiwanese Tale of Two Cities 2018 Clickbait 2021 Sense8 - Season 2 2016 The Matrix Resurrections 2021 Age of Adaline 2015 Ballers Season 3 2017 God is a Communist?* (show me heart universe) 2010 Chance- Season 1 ep110 2016 GirlBoss 2017 Cardinal X 2015 Looking 2014 Looking Season 2 ep 206 2015 Chance- Season 1 ep102 2016 Steve Jobs 2015 Hemingway &amp; Gelhorn 2011 Milk 2008 When We Rise 2017 The Pursuit of Happyness 2006 Chance- Season 1 ep109 2016 Super Pumped: The Battle for Uber 2022 Venom: Let There Be Carnage 2021 Murder in the First, Season 2 2015 Red Widow 2013 Shang-Chi and the Legend of the Ten Rings 2021 Looking Season 2 ep 209 2015 The Last Thing He Told Me 2023 The Diary of a Teenage Girl 2015 Chance- Season 1 ep107 2016 Budding Prospects, Pilot 2017 Dr. Dolittle 2 2001 Chance- Season 1 ep104 2016 The Bridge 2006 Sonic the Hedgehog 2020 I\u2019m A Virgo 2023 Sweet November 2001 Looking Season 2 ep 202 2015 Godzilla 2014 Swing 2003 Chance- Season 1 ep103 2016 Pushing Dead 2016 Americana 2015 Big Eyes 2014 I Am Michael 2015 The Wedding Planner 2001 My Big Fat Chinese Christmas 2022 Ant-Man and the Wasp: Quantumania 2023 Haiku Tunnel 2001 Twisted 2004 Need For Speed 2014 Looking Season 2 ep 210 2015 Rollerball 2002 Looking Season 2 ep 203 2015 Alive 2020 Looking Season 2 ep 205 2015 Chance - Season 1 ep105 2016 What the Bleep Do We Know 2004 Beautiful Boy 2018 50 First Dates 2004 Alcatraz 2012 Looking Season 2 ep 208 2015 Hereafter 2010 The Sweetest Thing 2002 Serendipity 2001 Chef Dynasty: House of Fang 2022 High Crimes 2002 On the Road 2012 This Is Us 2022 Night of Henna 2005 The Assassination of Richard Nixon 2004 180 2011 Dopamine 2003 Chance - Season 1ep105 2016 The Internship 2013 Chance- Season 1 ep108 2016 By Hook or By Crook 2001 Love &amp; Taxes 2014 CSI: NY- episode 903 2012 Bee Season 2005 Parks and Recreation 2014 Cherish 2002 About a Boy 2014 House of Sand and Fog 2003 Knife Fight 2013 Mission (aka City of Bars) 2001 Blindspotting (Season 2) 2023 American Yearbook 2004 Tweek City 2005 Silicon Valley Season 4 2017 Broken-A Modern Love Story 2010 Nash Bridges 2022 Big Sur 2013 Julie and Jack 2003 The Fog of War 2003 Zodiac 2007 Mona Lisa Smile 2003 24 Hours on Craigslist 2005 Babies 2010 The Californians 2005 Just Like Heaven 2005 Confessions of a Burning Man 2003 Under the Tuscan Sun 2003 Red Diaper Baby 2004 Never Die Twice 2001 I's 2011 Earth Mama 2023 Fandom 2004 The Core 2003 The Master 2012 The Zodiac 2005   #### Retrieve the directors' names and their distinct films shot at City Hall.  <pre><code>%%sql\nSELECT DISTINCT Title, Director FROM FilmLocations WHERE Locations=\"City Hall\";\n</code></pre> title director Tucker: The Man and His Dream Francis Ford Coppola Jagged Edge Richard Marquand Bedazzled Harold Ramis Foul Play Colin Higgins Milk Gus Van Sant Final Analysis Phil Joanou The Right Stuff Philip Kaufman The Enforcer James Fargo Class Action Michael Apted Boys and Girls Robert Iscove Knife Fight Bill Guttentag Dawn of the Planet of the Apes Matt Reeves A View to a Kill John Glen Bicentennial Man Chris Columbus 180 Jayendra San Francisco W.S. Van Dyke Smile Again, Jenny Lee Carlo Caldana The Wedding Planner Adam Shankman Magnum Force Ted Post The Rock Michael Bay When We Rise Gus Van Sant Invasion of the Body Snatchers Philip Kaufman    #### Retrieve the number of distributors who distributed films with the 1st actor, Clint Eastwood.  <pre><code>%%sql\nSELECT COUNT(DISTINCT Distributor) FROM FilmLocations WHERE Actor_1=\"Clint Eastwood\"; \n</code></pre> COUNT(DISTINCT Distributor) 3   ### LIMIT  #### Retrieve the names of the first 50 films.  <pre><code>%%sql\nSELECT DISTINCT Title FROM FilmLocations LIMIT 50\n</code></pre> title Nash Bridges The OA Part II Looking \"Special\" The Phone/Jexi Terminator - Genisys Murder in the First, Season 3 Ant-Man and the Wasp Dirty Harry 40 Days and 40 Nights Harold and Maude Time After Time Quitters The Dead Pool The Princess Diaries Murder in the First, Season 1 Junior The Woman In Red The Bachelor Final Analysis Women is Losers Rent The Last Black Man in San Francisco Smile Again, Jenny Lee Sense8 Tucker: The Man and His Dream Tales of the City Nine to Five Shit and Champagne Ant-Man Pacific Heights Interview With The Vampire Bitter Melon Chance Season 2 Dawn of the Planet of the Apes Hulk Venom Surface Sudden Impact Looking Season 2 ep 204 Etruscan Smile Summertime Always Be My Maybe San Andreas Birth of the Dragon The Rock So I Married an Axe Murderer Blue Jasmine The Maltese Falcon Chance- Season 1 ep106 Chance - Season 1 Pilot   #### Retrieve the first 10 film names released in 2015.  <pre><code>%%sql\nSELECT DISTINCT Title FROM FilmLocations WHERE Release_Year=2015 LIMIT 10;\n</code></pre> title Terminator - Genisys Quitters Smile Again, Jenny Lee Sense8 Ant-Man Looking Season 2 ep 204 Summertime San Andreas Looking Season 2 ep 207 Age of Adaline   #### Retrieve the next 3 film names that follow after the first 5 films released in 2015.   <pre><code>%%sql\nSELECT DISTINCT Title FROM FilmLocations WHERE Release_Year=2015 LIMIT 3 OFFSET 5;\n</code></pre> title Looking Season 2 ep 204 Summertime San Andreas"},{"location":"database/equi/","title":"SQL","text":""},{"location":"database/equi/#join","title":"JOIN","text":""},{"location":"database/equi/#equi-join-4th-video","title":"EQUI JOIN -&gt; 4th video","text":"<pre><code>SELECT e.name, e.sal, e.job, d.name, d.loc, i.*\n       FROM emp e, dept d, incr i\n       WHERE e.job = 'MANAGER' AND I.INGD = 'i3'\n       AND e.dptno = d.depno\n</code></pre> <ul> <li>INCR table not related to othere table that why we cannot apply INNER JOIN, So we are using EQUI JOIN</li> </ul>"},{"location":"database/equi/#inner-join","title":"INNER JOIN","text":"<pre><code> SELECT e.name, e.sal, e.job, d.*\n FROM emp e INNER JOIN dept d\n WHERE e.job = 'CLERK'`\n</code></pre> <ul> <li><code>WHERE</code> clase is used to write filter condion and <code>ON</code> close is used to write join condtion.</li> <li>we are use JOIN &amp; WHERE both in INNER JOIN</li> </ul>"},{"location":"database/equi/#self-join","title":"SELF JOIN","text":"<p>Q. Who is working like martin</p> <pre><code>SELECT e2.ename, e2.sal, e2.job, e.deptno\nFROM emp e1, emp e2\nAND\ne1.job == e2.job\n</code></pre>"},{"location":"database/equi/#q-display-emp-data-who-is-working-in-department-whew-sumit-is-working","title":"Q Display emp data Who is working in department whew sumit is working?","text":"<pre><code>SELECT b.* FROM emp a, emp b\nWHERE a.ename = 'SMITH'\nAND\na.deptno = b.dept.no\n</code></pre> <ul> <li>if we select <code>a.*</code> (first table) it display duplicate data</li> </ul>"},{"location":"database/equi/#inner-join-vs-equi","title":"Inner join vs equi","text":"<ul> <li>INNER JOIN is similar to EQUI JOIN</li> <li>In case of INNER JOIN query in between two tables we should specify INNER JOIN keyword</li> <li>the <code>JOIN</code> condtion you should specify by using <code>ON</code> Clause</li> <li>If you want to specify filter conditions we should specify under <code>WHERE</code> Close at the end of query</li> </ul>"},{"location":"database/equi/#q-which-case-we-should-use-inner-join","title":"Q. Which case we should use INNER JOIN","text":"<p>IF you want to use EQUI-JOIN output in Outer JOIN query we need EQUI JOIN OUTPUT in OUTTER JOIN query in such case Dont not use EQUI JOIN query becaouse EQUI JOIN support</p> <ul> <li>WHERE CLAUSE and OUTTER JOIN SUPPORT ON CLAUSE so both aare incompatible</li> <li>If you need INNER JOIN along with OUTTER JOIN or EQUI JOIN output along with OUTTER JOIN</li> <li>We should use INNER JOIN only becaouse INNER JOIN Support <code>ON</code> CLAUSE and OUTTER JOIN alse support <code>ON</code> CLAUSE</li> </ul>"},{"location":"database/equi/#outter-join","title":"OUTTER JOIN","text":"<ul> <li>Display all data from one table and only matched data from other table</li> </ul>"},{"location":"database/equi/#three-types-of-outter-join","title":"Three types of OUTTER JOIN","text":"<ol> <li>LEFT OUTTER JOIN OR LEF JOIN<ul> <li>All data from left table + only matched data from right table.</li> </ul> </li> <li>RIGHT OUTTER JOIN OR RIGHT JOIN<ul> <li>All data from Right table + only matched data from left table</li> </ul> </li> <li> <p>FULL OUTER JOIN (OR) FULL JOIN</p> <ul> <li>Matched data from both tables + unmatched data from left table, unmatched data from Right table</li> </ul> </li> </ol> <ul> <li>Join condition should be specified byusing <code>ON</code> Clouse</li> <li>getting all the data from both table</li> </ul> <p>Syntax ----------;</p> <pre><code>SELECT Col .......\nFROM table1\nON &lt;JOIN Cond&gt;\nWHERE &lt;FILTER COND&gt;\nORDER BY ......\n</code></pre> <ul> <li>company_table -&gt; compid, compname</li> <li>prod -&gt; pid,pname,cost,msg,disk,compid</li> </ul>"},{"location":"database/equi/#join-queries","title":"JOIN queries","text":"<pre><code>SELECT p.pid, p.name, c.pid,c.compname\nFROM prod p INNER JOIN\ncomp c\nON p.compid = c.compid\nADD output image here\n\n--  LEFT JOIN\nSELECT p.pid, p.name, c.*\nFROM prod p LEFT JOIN comp c\nON p.compid = c.compid\nadd output here\n\n-- RIGHT JOIN\nSELECT p.pid, p.name, c.compid \nFROM prod p RIGHT JOIN\ncom c\nON p.compid = c.compid\n\n-- FULL JOIN \nSELECT p.pid, p.name, c.*\nFROM prod p FULL JOIN comp c\nON p.comid = c.comid\n\n--\nCREATE table deptcp\nAS\nSELECT * FROM dept;\n\n-- \nUPDATE empcp SET depno = null\nWHERE depno = 30;\ncommit\n</code></pre>"},{"location":"database/equi/#lter-table-empcp-drop-column-colmuns","title":"lter table empcp drop column colmuns","text":"<pre><code>SELECT e.ename, e.sal, e.deptno, d.deptno, d.name\nFROM empcp e INNER JOIN deptcp d\nON e.deptno = d.deptno;\n\n----------------------------------------\n\nSELECT e.ename, e.sal, e.deptno, d.deptno, d.dname\nFROM empcp e LEFT JOIN deptcp d\nON e.deptnp= d.deptno;\n</code></pre>"},{"location":"database/indexes/","title":"indexes praticle","text":"<ul> <li>if you define a primary key on your table oravle engin internally maintains a default index on each primary key.</li> <li>as a developer we have not created any index explicitly til now.</li> <li>to select how many tables are there write <code>select * from tab;</code></li> <li>to check that whater primary key is ablable in colunm or not     <code>select constraint_name from user_constraints where table_name = 'CUST_ACT_DTLS'</code></li> <li></li> <li>to clear screen use cl scr;</li> </ul>"},{"location":"database/indexes/#to-check-index-information","title":"To check index information","text":"<ul> <li>in oracle each catogary of objects shoild be maintained under one system define table</li> <li>all tables information is maintained under user_tables</li> <li>all views information is maintained under user_views</li> <li>simlarly all index information is maintained under user_indexes.</li> </ul>"},{"location":"database/indexes/#what-are-columns-in-the-system-define-tables-user_indexes","title":"What are columns in the system define tables user_indexes","text":"<p><code>desc user_indexes</code></p>"},{"location":"database/interview_pratical/","title":"Interview prepration","text":""},{"location":"database/interview_pratical/#create-a-table-with-some-value","title":"create a table with some value","text":"<pre><code>- Create the table\n        CREATE TABLE Employees (\n            ID INT PRIMARY KEY,\n            FirstName VARCHAR(50),\n            LastName VARCHAR(50),\n            Gender VARCHAR(10),\n            Salary DECIMAL(10,2)\n        );\n\n- Insert the data\n    INSERT INTO Employees (ID, FirstName, LastName, Gender, Salary) VALUES\n    (1001, 'Emily', 'Johnson', 'Female', 55000.00),\n    (1002, 'David', 'Smith', 'Male', 62500.00),\n    (1003, 'Sarah', 'Brown', 'Female', 48000.00),\n    (1004, 'Michael', 'Davis', 'Male', 70200.00),\n    (1005, 'Amanda', 'Wilson', 'Female', 42800.00),\n    (1006, 'Christopher', 'Martinez', 'Male', 58300.00),\n    (1007, 'Jessica', 'Thompson', 'Female', 51700.00),\n    (1008, 'Matthew', 'Garcia', 'Male', 65900.00),\n    (1009, 'Ashley', 'White', 'Female', 47600.00),\n    (1010, 'Daniel', 'Miller', 'Male', 53400.00);\n</code></pre> <ol> <li>How to find nth highest salary in SQL?</li> </ol> <ul> <li>There are several ways of finding the nth highest salary.</li> <li>HOW to find nth highest salary in SQL Server using a Sub-Query</li> <li>How to find nth higest salary in SQ: Derver using CTE</li> <li>How to find the 2nd,3rd or 15th highest salary</li> </ul>"},{"location":"database/interview_pratical/#find-the-highest-salary-straight-forward","title":"Find the highest salary straight forward","text":"<ol> <li> <p>Simply use Max() function as shown below.</p> <pre><code>SELECT max(Salary) FROM Employees\n</code></pre> <p></p> </li> <li> <p>To find the Second highest salary use a sub query along with Max() function as shown below</p> <pre><code>    - SELECT max(Salary) FROM Employees \nWHERE Salary &lt; (SELECT max(Salary) FROM Employees)\n</code></pre> <p></p> </li> </ol> <ul> <li>SELECT DISTINCT TOP 2 Salary from Employees ORDER BY Salary DESC; in SQL server</li> <li>SELECT DISTINCT Salary from Employees ORDER BY Salary DESC LIMIT 2;</li> </ul>"},{"location":"database/interview_pratical/#2nd-highest-salary","title":"2nd highest salary","text":""},{"location":"database/interview_pratical/#to-find-nth-highest-salary-using-sub-query","title":"To find  nth highest salary using Sub-Query","text":"<pre><code>  SELECT salary from (SELECT DISTINCT Salary from Employees ORDER BY Salary DESC LIMIT 2) Result ORDER by Salary LIMIT 1;\n</code></pre> <pre><code>  WITH Result AS (SELECT Salary, dense_rank() over(order by Salary DESC) AS DENSERANK FROM Employees)SELECT Salary FROM Result WHERE Result.DENSERANK = 2 limit 1\n</code></pre> <p>How to find nth  higest salary in SQL Please Note: On many of the websites, you have seen that, the following query can be used to get nth higest salary. The below query query will only work if there are no dublicates.</p> <pre><code>  WITH Result AS \n  (SELECT Salary, row_number() over(order by Salary DESC) AS ROWNUM\n  FROM Employees)\n\n  SELECT Salary\n  FROM Result\n  WHERE Result.ROWNUM = 2;\n</code></pre> <p></p> <ol> <li>Employees table contains EmployeeId, EMployeeName&amp; ManagerID cloumns</li> <li>If an EMployeeID is passed, the query should list doun the entire organsiztion hierarchy i.e who is the manager of the EmployeeID passed and who is managers manger and so on till hull hierarchy is listed. </li> </ol>"},{"location":"database/interview_theory/","title":"Interview prepration theory part","text":""},{"location":"database/interview_theory/#what-is-dbms","title":"What is DBMS","text":"<p>DBMS stand for DataBase Managment System and is used to store, reterive and update data in  computer system</p> <p>There are 2 types of DBMS</p> <ol> <li>RDBMS: Relational DBMS eg. MYSQLmMSQL, PostgreSQL</li> <li>NOSQL: Non Relational DBMS eg MongoDB, Cassandra</li> </ol>"},{"location":"database/interview_theory/#sql-statement-to-create-a-table","title":"SQl Statement to create a table","text":"<pre><code>CREATE TABLE persion(\npersonID int NOTNULL,\npersonName varchar(50) NOT NULL,\nage int,\nPRIMARY KEY(persopnID)\n);\n</code></pre>"},{"location":"database/interview_theory/#what-is-foreign-key","title":"What is foreign Key","text":"<ul> <li>A foreign kwy is a key used to link two table togather</li> <li>It is a field(or collection of fields) in one table that refer to the PRIMARY KEY in another table</li> </ul> <pre><code>CREATE TABLE order(\n    orderID int not null,\n    prderNumber int not null,\n    customerID int,\n    PRIMARY KEY(orderID),\n    FOREIGN KEY(customerID) REFERENCE persson(persionID)\n)\n</code></pre>"},{"location":"database/interview_theory/#primary-key-vs-unique-key","title":"Primary key vs unique key","text":"sno primary key unique key 1 Only one primary key in a row Multiple unique key in a row 2 Cannot accept null values Can accept one null value 3 Create clustered index create non-clustered index <pre><code>CREATE TABLE persion(\npersonID int NOTNULL,\npersonName varchar(50) NOT NULL,\npersonLastName varchar(50) NOT NULL,\nage int,\nPRIMARY KEY(persopnID),\nUNIQUE(customerID)\n</code></pre>"},{"location":"database/interview_theory/#supper-key","title":"Supper key","text":"<p>Super key is an attribute (or set of attributes) that is used to uniqely identifies all attributes in a relation</p>"},{"location":"database/interview_theory/#candidate-key","title":"Candidate key","text":"<p>Candidate key is set of attribute which unique identify</p>"},{"location":"database/interview_theory/#delete-vs-drop-vs-truncate","title":"DELETE vs DROP vs Truncate","text":"<ul> <li> <p>DELETE</p> <p>It is used to delete one or more rows of a table based on a condition</p> <pre><code>DELETE FROM customer WHERE customerName='XYZ';\n</code></pre> </li> <li> <p>DROP (drop table/ drop database)</p> <p>It is used to delete the complete table or database schema is also remove</p> <pre><code>DROP TABLE logs;\nDROP DATABASE logsDB;\n</code></pre> </li> <li> <p>Truncate</p> <p>It is used to clear the data inside the table.The table schema intract</p> <pre><code>TRUNCATE TABLE logs;\n</code></pre> </li> </ul>"},{"location":"database/interview_theory/#union-vs-unioun-all","title":"UNION vs UNIOUN ALL","text":"<ul> <li>UNION</li> </ul> <p>The sql SUNION clause/operator is used to combine the result of two or more select statement without any dublicate rows</p> <p>A,B UNION A,C = A,B,C</p> <ul> <li>UNIOUN ALL</li> </ul> <p>The unioun all operater is used to combinethe result of twol SELECT statements including dublicate rows</p> <p>eg A,B unioun all A,C = A,A,B,C</p>"},{"location":"database/interview_theory/#acid-property","title":"ACID Property","text":"<ul> <li>A: Atomicity</li> <li>C: Consistency</li> <li>I: Isolation</li> <li>D: Durabilty</li> </ul> <ol> <li>Atomicity    Entire transaction take place at once or do not happen at all.</li> </ol> <p>eg</p> <pre><code> a = 15000\n b = 5000\n a = a - 5000 =&gt; 10000\n b = b + 5000 =&gt; 10000\n</code></pre> <ol> <li> <p>Consistency  The database must be consistent before and after the transaltion</p> </li> <li> <p>Isolation  Multiple transation happen independently without interfering with onr another. The intermediate state of a transation is invisble to other transation</p> </li> <li> <p>Durability    Once a transation has happended, the change stay there if a system failure occurance after words.</p> </li> </ol>"},{"location":"database/interview_theory/#repositery","title":"Repositery","text":"<p>A central place in which an aggrate of is kept and maintained in an organization way usially in compute stage</p>"},{"location":"database/interview_theory/#aggreate","title":"Aggreate","text":"<p>In db managment aggrate function is function when the value of multiple rows are grouped togather as input on certain creria to form a single value of more significant mening. like sum(), count(), avg(), min(), max()</p> <p>eg</p> <pre><code>Select age, COUNT(Roll_No) as no_of_std from student GROUP BY agr HAVING COUNT(Roll_No)&gt;1\n</code></pre>"},{"location":"database/interview_theory/#group-by","title":"GROUP BY","text":"<p>is used to group row that have the same value</p>"},{"location":"database/interview_theory/#statement","title":"Statement","text":"<p>Use this general pupose access to your database. Useful when you are using staic SQL staement at runtime</p>"},{"location":"database/interview_theory/#primary-vs-forgin-key","title":"Primary  vs Forgin key","text":"primary key forgin key Basic it used to identify each records into db table unqely It is used to link two table togather. It means forgin key in one table refer to the primary key of another Null The primary key column value can never be null The korgin column can accept a null value Dublicate The primary key is unique attribute there cannot store dubblicate value in column Wecan store dublicate value in the column Relationship It cannot create parent-child relationsip in a table It can make a parent child relationship Deletion Parimary key cannot be removeded from table if you want to delete it thrn make the refering frogin key doe not create its value The forgin value removied from the table bothering thatit refer to primary key value of"},{"location":"database/interview_theory/#where-class-vs-having-close","title":"Where class vs  Having close","text":"sno Where clause Having claouse 1 Where clause is used to filter the records from the table based on the specificed condition Having clause is used to filter records from the groups based on condition 2 Where clause can be used without GROUP BY clause Having clause cannot be used withoud GROUP BY clause 3 Where clasuse implements in row operations Having Clause implements in column operation 4 Where clause cannot contain aggreate function Having clause can only control aggratr dunction 5 Where clause can be used with SELECT, UPDATE, DELETE statent. Having clause can only be used with SELECT statent 6 WHERE clause is used before GROUP BY clause Having clause is used after GROUP BY clause 7 Where clause is used with single row function like UPPER, LOWER etc Having clause is used with multiple row function like SUN,Count"},{"location":"database/interview_theory/#joins","title":"JOINs","text":"<ul> <li>INNER JOIN</li> </ul> <p>Return records that have matching values in both tables</p> <ul> <li>LEFT</li> </ul> <p>Return all records from the left table and the match recordes from right table</p> <ul> <li>RIGHT JOIN</li> </ul> <p>Return all records from right table and matched records from left table</p> <ul> <li>FULL JOIN</li> </ul> <p>Return all records when there is not a mater in left or right tabl. THis is a UNION of LEFT and RIGHT JOIN.</p>"},{"location":"database/interview_theory/#normalization","title":"Normalization","text":"<p>Dublicay == Redundancy</p> <ul> <li> <p>Normalization is the process of organizating the data in the database</p> </li> <li> <p>The normal form is used to reduce redundancy/ mutliple copies from the database, table or relation</p> </li> <li> <p>To remove insertion, updation and deletion Anomales</p> </li> <li>It divides the larger table into the smaller table and link them using relationship</li> </ul>"},{"location":"database/interview_theory/#functional-dependency","title":"Functional Dependency","text":"<ul> <li> <p>The attributes of table is said to be dependent on each other when an atteibute of a table unqiely identifies another attribute of same table.</p> </li> <li> <p>The function depency is a relationship that exists between two attributes. it typically exists between primary ley and non- key attributs with in table</p> </li> </ul> <p>eg id search name</p> id:x name:y 1 A 2 B <p>x-&gt; Y determent dependent</p> <p>Y is functionaly depend on x beacuse we find value of y with the help of x</p>"},{"location":"database/interview_theory/#1nf","title":"1NF","text":"<ul> <li>A relation will be 1NF if it container an atomic value</li> <li>It state that an attribute of table cannot hold multiple value it must held only single value attribute</li> <li>Fist normal form dissallow the multi value attribute compossite attribute and their combination.</li> </ul> id name mobile 1 A 123,123 id name mobile 1 A 123 1 A 123"},{"location":"database/interview_theory/#2nf","title":"2NF","text":"<ul> <li>Relation must be 1NF</li> <li>Relation must not contain any partail depency</li> <li>When no non-prime attribute is dependent on any proper subset of any candidate key of the table is called partailed dependcy</li> </ul> id no fee 1 c1 100 2 c2 200 3 c3 100 <p>t1</p> id no 1 c1 2 c2 id fee c1 100 c2 200"},{"location":"database/interview_theory/#3nf","title":"3NF","text":"<ul> <li>Relation will be in 3NF it is in 2NF</li> <li>It contain any transitive depency</li> <li>3NF is used to achive the data integity</li> </ul>"},{"location":"database/interview_theory/#trnsitive-depency","title":"Trnsitive Depency","text":"<p>If a non price attribute functely dependence on on-prime attribute</p>"},{"location":"database/interview_theory/#nand-as-universal-gate","title":"NAND as Universal gate","text":"<p>AND OR &amp; NOT are sufficient to implemnt an digital system</p> <ul> <li>if we can convert NAND or NOR tothe these three we can say that any cicuit can be implemented by NAND or NOR</li> </ul> <p>Q1. Difference between DBMS and RDBMS</p> <p>RDBms</p> <ol> <li> <p>What is the difference between a primary key and a unique key? Both primary and unique keys uniquely identify records in a table. However, a primary key doesn\u2019t allow NULL values, whereas a unique key can accept NULL values.</p> </li> <li> <p>What is a constraint, and why use constraints? SQL constraints are a set of rules applied to a column or table to maintain data integrity. SQL consists of many constraints, which are as follows:</p> </li> </ol> <p>DEFAULT: It sets a default value for a column. UNIQUE: It ensures all values are unique. NOT NULL: It prevents NULL values. PRIMARY KEY: It enables the unique identification of each record in a table. We can say that it combines NOT NULL and UNIQUE. FOREIGN KEY: Links records in two tables.</p>"},{"location":"database/interview_theory/#3-what-is-the-coalesce-function","title":"3. What is the COALESCE function?","text":""},{"location":"database/interview_theory/#4-what-are-union-minus-and-intersect-in-sql","title":"4. What are UNION, MINUS, and INTERSECT in SQL?","text":"<p>In SQL, UNION, MINUS, and INTERSECT are set operators used to combine or compare results from multiple SELECT queries:</p> <p>UNION: Combines the results of two SELECT statements and removes duplicate rows. Use when you want to merge datasets without duplicates. MINUS: Returns rows from the first SELECT that are not found in the second. Used to identify differences between two datasets. INTERSECT: Returns only the rows that are common to both SELECT statements. Use when you need data that appears in both datasets.</p>"},{"location":"database/interview_theory/#5-what-is-a-view-in-sql-and-what-are-its-types","title":"5. What is a view in SQL, and what are its types?","text":"<p>A view is a virtual table representing data from one or more tables without physically storing it. It can simplify complex queries.</p> <p>There are four types of views in SQL:</p> <p>Simple View: It is a view based on a single table and does not have a GROUP BY clause or other SQL features. Complex View: This is a view built from several tables and includes a GROUP BY clause as well as functions. Inline View: It is a view built on a subquery in the FROM clause, which provides a temporary table and simplifies a complicated query. Materialised View: This is a view that saves both the definition and the details. It builds data replicas by physically preserving them.</p> <ol> <li>What do you understand about a temporary table? Write a query to create it. A temporary table is a table that is created to store data temporarily during a session. It exists only while the session is active or until it is dropped manually.</li> </ol> <p>It\u2019s useful for storing intermediate results when working with complex queries or large data.</p> <p>Example:</p> <p>-- Create a temporary table named 'TempEmployees' CREATE TEMPORARY TABLE TempEmployees (     ID INT,    -- Define a column 'ID' of integer type     Name VARCHAR(50)    -- Define a column 'Name' that can store up to 50 characters );</p> <ol> <li>How would you optimize a slow-moving SQL query? List the SQL optimization techniques. You can optimize a slow-moving SQL query by using specific performance tuning techniques.</li> </ol> <p>There are several SQL query optimization techniques listed below:</p> <p>Use indexes on frequently filtered or joined columns. Avoid SELECT *; select only the required columns. Filter early with proper WHERE clauses. Analyse the query with EXPLAIN to find bottlenecks. Replace correlated subqueries with joins or CTEs. Limit results using LIMIT or pagination. Ensure efficient joins and avoid unnecessary sorting. These steps help improve performance by reducing data scanned and optimising execution.</p> <ol> <li>What are the different types of JOINs in SQL? There are six different types of JOINs in SQL, which are:</li> </ol> <p>INNER JOIN: An INNER JOIN is used to return records of the same value in two tables. LEFT JOIN: LEFT JOIN is used to join all the rows in the left table with matching rows in the right table. RIGHT JOIN: RIGHT JOIN is used to join all the rows in the right table with the corresponding rows in the left table. FULL JOIN: A FULL JOIN is used to return all records from two tables, if there are matching records in each table. SELF JOIN: A SELF JOIN is a join used to join a table to itself. SELF JOINS treats one table as two tables. CARTESIAN JOIN: A CARTESIAN Integral is used to multiply the number of rows in the first table by the number of rows in the second table. It is also called a CROSS JOIN.</p> <ol> <li>Given a Supervision table with employee_id and manager_id, write a query to detect if there is a cycle in the reporting hierarchy. -- Use a recursive CTE to traverse the supervision hierarchy WITH RECURSIVE Hierarchy AS ( SELECT employee_id, manager_id, employee_id AS root FROM Supervision UNION ALL SELECT H.employee_id, S.manager_id, H.root FROM Hierarchy H JOIN Supervision S ON H.manager_id = S.employee_id -- Avoid immediate cycles in a single step WHERE H.root &lt;&gt; S.manager_id )</li> </ol> <p>-- After building the hierarchy, detect cycles SELECT root FROM Hierarchy GROUP BY root</p> <p>-- If the number of manager_id values is different from the number of distinct ones, it means a manager was repeated in the path, which indicates a cycle HAVING COUNT(DISTINCT manager_id) &lt;&gt; COUNT(manager_id);</p>"},{"location":"database/interview_theory/#queryset","title":"Queryset","text":""},{"location":"database/interview_theory/#write-an-update-query-to-set-the-total_sales-to-the-sum-of-individual-sales-amounts-for-each-employee-in-the-employee-table","title":"Write an UPDATE query to set the total_sales to the sum of individual sales amounts for each employee in the employee table","text":"<p>-- Update the total_sales column in the employee table UPDATE Intellipaat_Emp e SET total_sales = (</p> <p>-- Subquery to calculate the sum of sales for the specific employee SELECT SUM(sale_amount) FROM sales s WHERE s.employee_id = e.employee_id )</p> <p>-- Only update if the employee has sales entries WHERE EXISTS ( SELECT 1 FROM sales s WHERE s.employee_id = e.employee_id );</p>"},{"location":"database/interview_theory/#11-what-are-acid-properties","title":"11. What are ACID properties?","text":"<p>ACID stands for atomicity, consistency, isolation, and durability. These properties ensure the reliable processing of database transactions.</p> <ol> <li>What is the difference between the WHERE clause and the HAVING clause? Aspect WHERE Clause HAVING Clause Purpose Filters rows before grouping Filters groups after grouping Used With SELECT, UPDATE, DELETE Only with SELECT (usually with GROUP BY) Works On Individual rows Aggregate/grouped data Aggregate Functions Cannot be used with aggregate functions Can be used with aggregate functions Execution Order Evaluated before GROUP BY Evaluated after GROUP BY Example WHERE salary &gt; 50000 HAVING COUNT(*) &gt; 3</li> </ol>"},{"location":"database/interview_theory/#when-will-you-use-the-distinct-keyword","title":"When will you use the DISTINCT keyword?","text":"<p>DISTINCT is used to eliminate duplicate rows. SELECT COUNT (DISTINCT Table_name). This can be used to count the unique records. However, using it multiple times can impact the table\u2019s performance.</p>"},{"location":"database/interview_theory/#how-will-you-prevent-sql-injection","title":"How will you prevent SQL injection?","text":"<p>SQL injection can be prevented very efficiently if we use parameterized queries or prepared statements instead of dynamic SQL, where we concatenate strings.</p> <p>So instead of writing:</p> <p>\"SELECT * FROM users WHERE id = \" + user_input; You should write:</p> <p>\"SELECT * FROM users WHERE id = %s\" Now, user input is only data, no matter how the code is executed. This method makes sure that even if the user decides to insert some illegal SQL commands, they will not be executed. Prepared statements are available in most SQL libraries of today, and they are regarded as the most suitable method for implementing application security against SQL injection attacks.</p>"},{"location":"database/interview_theory/#16-what-is-the-difference-between-the-drop-vs-delete-commands","title":"16. What is the difference between the Drop vs Delete commands?","text":"<p>The DROP and DELETE commands in SQL are used for removing data, but they differ significantly:</p> <p>DROP: The DROP command is a DDL command. It completely removes a table or database, including its structure and all data from the database. DELETE: Delete is a DML command. It removes specific rows of data from a table based on a given condition.</p>"},{"location":"database/interview_theory/#17-what-is-a-trigger","title":"17. What is a trigger?","text":"<p>The trigger is used to do an automatic process when a particular event happens in the database or table. It helps in maintaining the integrity of the table and associated tables. The trigger can be activated when SQL commands like insert, update, and delete are fired. The syntax used to generate the trigger function is as follows:</p> <p><code>CREATE TRIGGER trigger_name</code> 18. What is normalization? Explain its types. Normalization is used to reduce data redundancy and improve data integrity. Normalization splits the big table into multiple subtables and ensures that database integrity constraints are intact in their relationship with each other. It is a process of decomposing tables to eliminate data redundancy.</p> <p>Types of normalization:</p> <p>1NF: Ensures that each column contains only atomic (indivisible) values. 2NF: Remove partial dependencies. 3NF: Remove transitive dependencies. BCNF: Ensures that every determinant is a candidate key.</p>"},{"location":"database/interview_theory/#19-what-is-the-difference-between-the-between-and-in-operators-in-sql","title":"19. What is the difference between the BETWEEN and IN operators in SQL?","text":"<p>The BETWEEN operator is employed to identify rows that fall within a specified range of values, encompassing numerical, textual, or date values. It returns the count of values that exist between the two defined boundaries.</p> <p>On the other hand, the IN operator serves as a condition operator used for searching values within a predetermined range. When multiple values are available for selection, the IN operator is utilised.</p> <ol> <li> <p>What are DDL, DML, DCL, TCL, and DQL in SQL? DDL: Data Definition Language is used to create, modify, and drop the schema of database objects. CREATE, ALTER TABLE, DROP, TRUNCATE, and ADD COLUMN are DDL commands. DML: Data Manipulation Language allows for changing or manipulating the existing data of the tables. UPDATE, DELETE, and INSERT are DML commands. DCL: Data Control Language allows the administrator of the database to manage the rights and permissions of the users in the database. GRANT and REVOKE are DCL commands. TCL: Transaction Control Language is used to maintain the SQL operations within the database. It also allows the changes to be saved, which are made by the DML commands. COMMIT, SET TRANSACTION, ROLLBACK, and SAVEPOINT are examples of TCL commands. DQL: Data Query Language is used to retrieve data from databases using the SELECT statement.</p> </li> <li> <p>What is AUTO_INCREMENT? AUTO_INCREMENT is used in SQL to automatically generate a unique number whenever a new record is inserted into a table. This is mainly used in scenarios where individual columns or groups of columns cannot be used as primary keys.</p> </li> </ol> <p>For Example:</p> <p>-- Create a table named 'Employee' CREATE TABLE Employee (</p> <p>-- Use AUTO_INCREMENT to automatically generate a unique ID for each new record Employee_id INT NOT NULL AUTO_INCREMENT, Employee_name VARCHAR(255) NOT NULL, Employee_designation VARCHAR(255), Age INT,</p> <p>-- Set 'Employee_id' as the AUTO_INCREMENT Primary Key of the table PRIMARY KEY (Employee_id) );</p> <ol> <li>How do window functions work? Window functions perform calculations across related rows without collapsing them like GROUP BY.</li> </ol> <p>Example: RANK() OVER (PARTITION BY department ORDER BY salary DESC) ranks salaries within each department. They\u2019re powerful for running totals, rankings, and moving averages while preserving original rows.</p> <ol> <li> <p>What is a subquery? A subquery is a query nested within another query, enabling more complex data retrieval.</p> </li> <li> <p>Explain the difference between a correlated subquery and a nested subquery. Correlated Subquery: References data from the outer query in its WHERE clause. Nested Subquery: This can be placed anywhere in the outer query and does not directly reference the outer table. Intermediate SQL Interview Questions In this section, we have listed the intermediate-level interview questions for the candidates who are looking to master their ability to think critically, optimize queries, and handle moderate database complexities with confidence</p> </li> <li> <p>What is a function in SQL, and why do we use functions? A function is a database object that encapsulates a set of SQL statements that perform operations and return a specific result. SQL functions are used to increase the readability and reusability of code.</p> </li> <li> <p>What is the difference between the UNION and UNION ALL operators? The UNION and UNION ALL operators are both used to combine the output of two or more SELECT queries, but they differ in handling duplicate rows:</p> </li> </ol> <p>UNION: UNION operators combine the results of multiple SELECT queries and remove duplicate rows. It returns only distinct values across all queries. UNION ALL: The UNION ALL operator combines the output of multiple SELECT queries, including duplicates. 27. What is a stored procedure? A stored procedure is a set of SQL statements stored in the database that can be reused, promoting modular programming.</p> <ol> <li>Explain the GROUP BY and HAVING clauses GROUP BY: GROUP BY aggregates data into groups based on specified columns (like department or date).</li> </ol> <p>HAVING: HAVING filters these groups after aggregation, similar to WHERE for individual rows.</p> <p>Example: SELECT department, AVG(salary) FROM employees GROUP BY department HAVING AVG(salary) &gt; 80000 shows only departments with an average salary above 60k.</p> <ol> <li>What are the different types of SQL commands? SQL commands are broadly classified into five categories: DDL (Data Definition Language), DML (Data Manipulation Language), DCL (Data Control Language), TCL (Transaction Control Language), and DQL (Data Query Language).</li> </ol> <p>DDL consists of commands such as CREATE, ALTER, and DROP. DML consists of INSERT, UPDATE, and DELETE. DCL consists of GRANT and REVOKE. TCL consists of COMMIT, ROLLBACK, and SAVEPOINT. DQL is mainly the SELECT command. The SQL command types are various ways to handle the database structure, perform data operations, and regulate access.</p> <ol> <li> <p>What is the difference between SQL and NoSQL databases? SQL databases are relational, table-based, and normally utilize the Structured Query Language for the purposes of defining and manipulating data. Usually, they allow ACID features and are quite suitable for structured data as well as for complex queries. In contrast, NoSQL databases are non-relational, which by nature allows key-value, document, columnar, or graph formats. They are typically designed for high scalability and match unstructured or semi-structured data, thus being ideal for big data and real-time web applications.</p> </li> <li> <p>What are aggregate functions in SQL? Aggregate functions in SQL carry out a computation over a collection of values and produce a single outcome. Typical instances encompass:</p> </li> </ol> <p>COUNT(): Returns the number of rows. SUM(): Returns the total sum. AVG(): Returns the average value. MIN() / MAX(): Return the minimum or maximum value, respectively. 32. What are indexed views? An indexed view is a view in SQL that has a unique clustered index created on it, thus only the data of the view result is physically stored on the disk. In comparison to traditional views, indexed views improve performance by calculating the joins and aggregations before execution. Indexed views are most beneficial in SQL Server to improve performance in OLAP scenarios.</p> <ol> <li>What are the different isolation levels in SQL? SQL supports five isolation levels to handle concurrency in transactions:</li> </ol> <p>Read Uncommitted: Allows dirty reads. Read Committed: Default in most databases, and it avoids dirty reads. Repeatable Read: Prevents dirty and non-repeatable reads. Serializable: Highest isolation in order to prevent phantom reads. Snapshot: Maintains versioned data to avoid locking. These levels balance between data consistency and performance in SQL</p> <ol> <li> <p>What is SQL Server Integration Services (SSIS)? SQL Server Integration Services (SSIS) is a platform developed by Microsoft to carry out ETL (Extract, Transform, Load) functions. It generally allows data migration, transformation, and workflow automation across various data sources. Typically, SSIS is very useful for building data warehouses, which makes it essential for Business Intelligence(BI) projects.</p> </li> <li> <p>What are the applications of SQL? SQL is a popular language in various sectors and career roles. Its most important applications are:</p> </li> </ol> <p>Handling and searching in relational databases Carrying out data analysis and generating reports Creating backend logic in apps Helping ETL pipelines in data warehousing Maintaining data integrity and setting up access control SQL flexibility turns it into a fundamental skill that data analysts, software developers, DBAs, and BI professionals all have in common.</p> <ol> <li>What are SQL dialects? SQL dialects are generally the variations of standard SQL syntax and features that are implemented by different database vendors. Examples include:</li> </ol> <p>T-SQL for Microsoft SQL Server PL/SQL for Oracle pgSQL for PostgreSQL MySQL\u2019s extended SQL Though the main SQL syntax is still fairly the same, these dialects bring in proprietary functions, procedural abilities, and performance features that are designed specifically for particular systems.</p> <ol> <li>What are the different types of SQL operators? SQL supports several operator categories:</li> </ol> <p>Arithmetic Operators: +, -, *, / (perform calculations) Comparison Operators: =, &lt;, &gt;, &lt;=, &gt;=, &lt;&gt; (used in WHERE clauses) Logical Operators: AND, OR, NOT (combine multiple conditions) Set Operators: UNION, INTERSECT, EXCEPT (combine result sets) Understanding how to use these operators is crucial for writing efficient and readable SQL queries.</p> <ol> <li>How to select all columns from a table? In SQL, to get all the columns from a table, you can use the wildcard character asterisk (*)</li> </ol> <p>SELECT * FROM table_name; The above query retrieves all the columns of a table. Although it is a good practice during development, in production, it is advisable to explicitly mention the columns to be retrieved so as to increase performance and readability.</p> <ol> <li>What are scalar functions in SQL? Scalar functions in SQL are built-in functions that take one or more inputs and return a single value. Some of the common Scalar functions.</li> </ol> <p>UPPER() / LOWER() \u2013 Converts text to uppercase or lowercase, respectively LEN() \u2013 Returns the number of characters in a string ROUND() \u2013 Rounds a numeric value to the specified number of decimal places GETDATE() \u2013 Retrieves the current system date and time These functions are useful for data formatting, transformation, and validation within SQL queries.</p> <ol> <li>What is the difference between SQL and PL/SQL? SQL is a declarative language that is used for defining as well as manipulating data in relational databases. It is mainly used for writing queries, inserting records, and managing the schema. Meanwhile, PL/SQL (Procedural Language/SQL) is Oracle\u2019s extension to SQL that permits procedural features such as variables, loops, and conditional statements.</li> </ol> <p>Although SQL is centered on data operations, PL/SQL is intended for programming logic and stored procedures; thus, it is more appropriate for the development of complicated business logic within Oracle databases.</p> <ol> <li>What is the difference between on-premise SQL and cloud SQL? On-premise SQL databases are installed on local servers, and internal teams take care of their maintenance, whereas cloud SQL services operate on cloud platforms such as AWS RDS, Google Cloud SQL, or Azure SQL, and the providers take care of management for them.</li> </ol> <p>Criteria On-Premise SQL Cloud SQL Infrastructure Local servers Cloud-managed infrastructure Scalability Limited and manual Seamless and elastic Maintenance Handled in-house Managed by the cloud provider Cost Model Upfront hardware + licensing costs Pay-as-you-go pricing 42. Name two advantages of using cloud SQL services.</p> <p>The two advantages of using cloud SQL services are:</p> <p>High Availability and Automatic Backups: Cloud SQL services generally offer built-in redundancy, failover, and automated backups in order to ensure better reliability without manual effort. Scalability and Cost Efficiency: With the cloud SQL service, you can easily scale storage and compute resources as needed and pay only for what you use, which simply reduces the overall infrastructure costs. SQL Interview Questions for Experienced (3- 5 Years) Now, with this section, we have listed the top SQL interview questions and answers for experienced professionals that will help you to prepare for mid to senior-level roles.</p> <ol> <li> <p>Explain the concept of database partitioning and its benefits. Database partitioning divides a large table into smaller segments based on a chosen key. This improves the performance of the SQL queries by allowing queries to run on the specific partitions and reducing I/O operations.</p> </li> <li> <p>What third-party tools are used in SQL Server? The following is the list of third-party tools that are used in SQL Server:</p> </li> </ol> <p>SQL CHECK SQL DOC 2 SQL Backup 5 SQL Prompt Litespeed 5.0 45. What is SQL JOIN? The SQL JOIN component joins rows from one or more tables in a relational database. Create sets that can be stored in tabular form or used routinely. JOIN is to combine columns from one table or multiple tables using the same value.</p> <ol> <li>What is the difference between INNER JOIN and SELF JOIN? The most important difference between INNER and SELF JOIN is:</li> </ol> <p>INNER JOIN is used to return the records that are present in both tables. In contrast, a self-join is a type of INNER JOIN where a table is joined with itself.</p> <ol> <li>Explain the difference between horizontal and vertical partitioning. Horizontal: Splits a table by rows (e.g., by date ranges)</li> </ol> <p>Vertical: Splits a table by columns (e.g., separating frequently vs rarely accessed fields) Use horizontal for distributed querying, vertical for security/performance optimization.</p> <ol> <li> <p>What is the difference between the RIGHT JOIN and the LEFT JOIN? Both RIGHT JOIN and LEFT JOIN do the same thing: They return the result of a query that contains all the records in the table. The only difference is that the LEFT JOIN returns all the records from the left table of the query, whereas the RIGHT JOIN returns all the records from the right table.</p> </li> <li> <p>Is SELF JOIN an INNER JOIN or OUTER JOIN? The SELF JOIN can be an INNER JOIN, OUTER JOIN, or a CROSS JOIN. SELF JOIN is used to link tables automatically based on columns that contain duplicate data in multiple rows.</p> </li> <li> <p>What is the difference between a FULL JOIN and a CARTESIAN JOIN? The combination of the LEFT and the RIGHT OUTER JOIN is called a FULL JOIN. If the ON condition cannot be satisfied, it returns all rows in both tables that match the WHERE clause with a NULL value. Whereas, a CARTESIAN or CROSS JOIN creates a cross-product between the two tables. For all rows, it returns a possible sequence.</p> </li> <li> <p>What is NATURAL JOIN? A NATURAL JOIN in SQL is a kind of join that automatically combines two tables only by the common columns that have the same name and compatible data types. Unlike INNER JOIN or EQUI JOIN, a NATURAL JOIN doesn\u2019t require an explicit join condition using the ON clause.</p> </li> </ol> <p>It implicitly matches columns with identical names in both tables and returns rows where the values in those columns are equal.</p> <ol> <li>What is an EQUI JOIN? An EQUI JOIN is a type of join operation in a database that combines rows from two or more tables based on a matching condition using the equality operator (=). It is used to retrieve data where values in specified columns are equal.</li> </ol> <p>Here is an example of the syntax for an EQUI JOIN:</p> <p>SELECT column_name(s) FROM table1 JOIN table2</p> <p>-- Matches rows where values in the specified columns are equal ON table1.column_name = table2.column_name. 53. Can you join a table to itself in SQL? Yes, in SQL, it is possible to join a table to itself, which is known as a self-join. By using table aliases, you can treat the same table as two separate entities and perform a join operation on them based on specified conditions. Self-joins are used when you need to retrieve information by comparing rows within the same table.</p> <ol> <li>How are JOINs different from the UNION clause? A JOIN can be used if two tables share at least one attribute. The length of the retrieved rows is greater than the length of the rows in the corresponding tables.</li> </ol> <p>Whereas in the case of UNION, a JOIN can be used if the query has the same number of columns and the corresponding attributes are the same. The number of rows returned is greater than the number of rows in each table in the query.</p> <ol> <li>How would you track changes to sensitive data for auditing? -- Create a table named 'audit_log' to track changes in data CREATE TABLE audit_log (   change_time TIMESTAMP,     -- Timestamp of when the change occurred   user_id INT,     -- Id of the user who made the change   old_value JSONB,     -- Previous state of the data stored as JSONB   new_value JSONB     -- Updated state of the data stored as JSONB ); Use triggers or CDC (Change Data Capture) to populate this table.</li> <li> <p>What is a HASH JOIN? A HASH JOIN requires two inputs, an INNER table and an OUTER table. HASH JOINS involve using a HASH table to identify matching rows between two tables. HASH JOINS are an option when other joins are not recommended. When joining large data sets that are unsorted or non-indexed, HASH JOINS are better.</p> </li> <li> <p>What is MERGE JOIN? MERGE JOIN is one of the most important join types in SQL Server. In MERGE JOIN, your query plan is effective, and you don\u2019t need to make many changes to improve query performance because the MERGE JOIN operator uses ordered data entry, it can use two large data sets.</p> </li> <li> <p>Can you explain NESTED JOIN in SQL? In SQL, a Nested Join (also referred to as a Nested Loop Join) is the basic method that most relational databases employ for connecting two tables. It is the default approach that database engines frequently use for joining small or medium datasets.</p> </li> </ol> <p>In a Nested Join, one table is treated as the outer table, and for each row in this outer table, the system searches for matching rows in the inner table. This process repeats until all matching combinations are found.</p> <ol> <li> <p>Explain Common Table Expressions in SQL. In general, a Common Table Expressions (CTEs) is a temporary, named result set that can be used to refer to an UPDATE, INSERT, SELECT, or DELETE statement. A CTE can be specified by adding WITH before an UPDATE, INSERT, DELETE, SELECT, or MERGE statement. Multiple CTEs can be used in the WITH clause by separating them with commas.</p> </li> <li> <p>What is a recursive CTE? A recursive CTE (Common Table Expression) is a SQL construct that enables a query to refer to itself in order to carry out iterative tasks. Generally, it is used to handle hierarchical or tree-like data, such as employee-management hierarchies or category-subcategory structure</p> </li> </ol> <p>Example syntax:</p> <p>WITH RECURSIVE employee_hierarchy AS (     SELECT id, name, manager_id     FROM employees     WHERE manager_id IS NULL     UNION ALL     SELECT e.id, e.name, e.manager_id     FROM employees e     INNER JOIN employee_hierarchy eh ON e.manager_id = eh.id ) SELECT * FROM employee_hierarchy; Understand how hierarchical recursive queries work in MySQL through this blog.</p> <ol> <li>How will you structure data to perform a JOIN Operation in a one-to-many relationship situation? To create a one-to-many relationship, you need to add the primary key from one side to many sides as a column. To create a many-to-many relationship, you need a middle table that contains the primary keys from the many-to-many tables.</li> </ol> <p>SQL Query Interview Questions and Answers In this section, we\u2019ve covered essential SQL query interview questions and answers that are crucial for demonstrating your practical SQL skills in technical interviews. These SQL coding questions will help you tackle complex data challenges with confidence in your next interview.</p> <ol> <li>Write an SQL syntax for joining 3 tables. select tab1.col1, tab2.col2,tab3.col3 (columns to display) from table1 Join     -- Any type of join table2 on tab1.col1 = tab2.col1     -- Any matching columns Join     -- Any type of join table3 on tab 2.col1 = tab 3.col1     -- Any matching columns</li> <li>Write a query to select specific columns, say name and age, from a table called Employees. SELECT name, age     -- Select specific columns FROM Intellipaat_Emp;     -- Table name</li> <li>Write a query to get employees older than 35 and working in the operations department. SELECT * FROM Intellipaat_Emp     -- Table name WHERE age &gt; 35     -- Age is greater than 35 AND department = 'operation';</li> <li>Write a query to find the average salary for each department. SELECT department, AVG(salary) AS avg_salary     -- Calculate the average salary FROM Intellipaat_Emp GROUP BY department;     -- Group the results by department to get one average per group</li> <li>Write a query to find employees whose names start with \u2018Int\u2019. SELECT * FROM employees</li> </ol> <p>-- Filter rows where the employee name starts with 'Int' WHERE employee_name LIKE 'Int%'; 67. Write a query to add a new employee record. INSERT INTO Intellipaat_Emp (name, age, department, salary) VALUES ('John Doe', 28, 'Marketing', 50000); 68. Write a query to retrieve the last five records from the Employees table based on the ID column. SELECT * FROM Intellipaat_Emp</p> <p>-- Order the results by 'id' in descending order</p> <p>ORDER BY id DESC</p> <p>-- Return only the top 5 rows</p> <p>LIMIT 5; 69. Write a query to label employees with salaries above 5000 as \u201cHigh Salary.\u201d SELECT name, salary, CASE     -- Use CASE to create a new column 'salary_category' based on salary value</p> <p>-- If salary is greater than 5000, label as 'High Salary' WHEN salary &gt; 5000 THEN 'High Salary' ELSE 'Low Salary'     -- Otherwise label as \u2018Low Salary\u2019 END AS salary_category     -- Name the resulting column as 'salary_category' FROM Intellipaat_Emp 70. Write a query to get all employees and their project names, showing NULL if an employee is not assigned a project. SELECT Employees. name,Projects.project_name FROM Intellipaat_Emp AS Employees LEFT JOIN Projects     -- Use LEFT JOIN to include all employees ON Employees.project_id = Projects.id; 71. Write an SQL query to display each department along with the name of any employee who works in that department. If a department has no employees, show the department with NULL for the employee\u2019s name. SELECT dept.DepartmentName,int_emp.Name FROM Employees AS int_emp RIGHT JOIN Departments AS dept     -- Use RIGHT JOIN to include all departments ON int_emp.DepartmentID = dept.DepartmentID; 72. Write a query to increase the salary of all employees in the \u2018HR\u2019 department by 10%. UPDATE Intellipaat_Emp SET salary = salary * 1.1     -- Increase salary by 10% (multiply by 1.1) WHERE department = 'HR';     -- Apply this change to employees in the 'HR' department 73. Write a query to fetch unique employee names where duplicate names exist in the Employees table. SELECT name FROM Intellipaat_Emp GROUP BY name HAVING COUNT() = 1; 74. Find all duplicate rows in the table Employees, considering all columns. SELECT * FROM Intellipaat_Emp GROUP BY name, age, department, salary     -- Group by all columns to detect identical rows HAVING COUNT() &gt; 1;     -- Only include duplicate groups. 75. How will you calculate the total sales in each category of a product sales table? To calculate the total sales in each category of a product sales table, we can use the aggregate function (SUM) with the sales amount column and group it by the category column.</p> <p>SELECT category, SUM(sales_amt) AS Total_Sales     -- Calculate total sales amount per category and name the result as 'Total_Sales' FROM sales GROUP BY category;     -- Group results by category to get totals for each one 76. How can you copy data from one table to another table? --We can use the INSERT INTO SELECT operator. INSERT INTO employee_duplicate SELECT * FROM employees; 77. Write a query to fetch employees who earn more than the average salary. SELECT* FROM Intellipaat_Emp</p> <p>-- Compare each employee's salary to the average salary WHERE salary &gt; (SELECT AVG(salary) FROM Intellipaat_Emp); 78. How would you find the 2nd-highest salary from a table called Employees? SELECT MAX(salary)     -- Filter out the top salary FROM Intellipaat_Emp WHERE salary &lt; (SELECT MAX(salary)     -- Filter out the top salary FROM Intellipaat_Emp); For the Nth highest salary, replace MAX with LIMIT:</p> <p>SELECT DISTINCT salary FROM Intellipaat_Emp ORDER BY salary DESC     -- Sort salaries from highest to lowest LIMIT N-1, 1;     -- Skip the top (N-1) salaries and return the Nth highest one 79. Write a query to select only even or odd rows from a table based on an ID field. -- Even rows SELECT * FROM Intellipaat_Emp WHERE id % 2 = 0;     -- IDs divisible by 2 are even</p> <p>-- Odd rows SELECT * FROM Intellipaat_Emp WHERE id % 2 = 1; 80. Write a query to select the top 2 salaries from each department in the Employees table. SELECT* FROM ( SELECT name, department, salary, ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary DESC) AS rank FROM Intellipaat_Emp ) AS ranked WHERE rank &lt;= 2; 81. If you have an ID column with sequential numbers but some values are missing, write a query to find the missing numbers. SELECT id + 1 AS missing_id     -- Predict the next ID and label it as 'missing_id' FROM Intellipaat_Emp WHERE (id + 1) NOT IN (SELECT id FROM Intellipaat_Emp);     -- Check if the next ID is missing and get all existing IDs 82. Write a query to swap the values in a column, for example, changing all \u2018Male\u2019 to \u2018Female\u2019 and vice versa in the column gender. UPDATE Intellipaat_Emp SET gender = CASE WHEN gender = 'Male' THEN 'Female'     -- If gender is 'Male', change it to 'Female' ELSE 'Male'     -- Otherwise (Female), change to 'Male' END; 83. Write a query to find pairs of employees who have the same salary. SELECT A.name AS employee1, B.name AS employee2, A.salary FROM Intellipaat_Emp A</p> <p>-- Self-join and Match employees with the same salary. JOIN Intellipaat_Emp B ON A.salary = B.salary AND A.name &lt; B.name;     -- Avoid duplicate pairs and self-matches 84. Write a query to find the number of days an employee has been with the company. -- Difference in days between today and joining date SELECT name, DATEDIFF(CURDATE(), joining_date) AS days_with_company FROM Intellipaat_Emp; 85. Find pairs of employees who were hired on the same day. SELECT A.name AS employee1, B.name AS employee2, A.joining_date FROM Intellipaat_Emp A, Employees B WHERE A.joining_date = B.joining_date AND A.name &lt; B.name;     -- Avoid duplicate and pair 86. Write a query to find the median salary in each department from the Employee table. Hint: You may use ROW_NUMBER() or PERCENT_RANK() to determine median values.</p> <p>WITH RankedSalaries AS ( SELECT department, salary,</p> <p>-- Ascending rank ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary) AS rn_asc,</p> <p>-- Descending rank ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary DESC) AS rn_desc FROM Intellipaat_Emp ) SELECT department, AVG(salary) AS median_salary FROM RankedSalaries WHERE rn_asc = rn_desc OR rn_asc + 1 = rn_desc GROUP BY department; 87. Write a query to get the top 10% of employees by salary. Hint: Use PERCENT_RANK() to filter out top percentages.</p> <p>SELECT * FROM ( SELECT name, salary,</p> <p>-- Rank employees by descending salary PERCENT_RANK() OVER (ORDER BY salary DESC) AS pct_rank FROM Intellipaat_Emp ) AS Ranked WHERE pct_rank &lt;= 0.1;     -- Select only the top 10% 88. Write a query to calculate the cumulative salary (running total) within each department. SELECT department, name, salary, SUM(salary) OVER (PARTITION BY department     -- Restart the running total for each department  ORDER BY name     -- Running total is ordered by employee name ) AS cumulative_salary FROM Intellipaat_Emp; 89. Write a query to calculate the time gap (in hours) between consecutive logins for each user. SELECT user_id, login_time, TIMESTAMPDIFF(HOUR, LAG(login_time) OVER ( PARTITION BY user_id     -- Reset tracking for each user  ORDER BY login_time),     -- Compare each login with the previous one chronologically login_time)     -- Current login time  AS hours_since_last_login FROM Logins;</p>"},{"location":"database/interview_theory/#90-write-a-query-to-get-a-full-list-of-products-including-products-that-have-no-sales-by-performing-a-full-outer-join-between-product_dim-and-sales_fact","title":"90. Write a query to get a full list of products, including products that have no sales, by performing a full outer join between product_dim and sales_fact","text":"<pre><code>SELECT p.product_id, p.product_name, SUM(s.sale_amount) AS total_sales\nFROM product_dim p\nLEFT JOIN sales_fact s ON p.product_id = s.product_id\nGROUP BY p.product_id, p.product_name\n\nUNION\n\n-- Set sales to 0 explicitly for products with no sales\nSELECT p.product_id, p.product_name, 0 AS total_sales\nFROM product_dim p\nWHERE NOT EXISTS (\nSELECT 1\nFROM sales_fact s\n\n-- Check if the product exists in the sales table\nWHERE p.product_id = s.product_id  \n);\n</code></pre>"},{"location":"database/interview_theory/#91-write-a-query-to-calculate-the-year-to-date-ytd-sales-for-each-product-up-to-the-current-date-in-the-sales_fact-table","title":"91. Write a query to calculate the year-to-date (YTD) sales for each product up to the current date in the sales_fact table","text":"<pre><code>SELECT product_id,\nSUM(sale_amount) OVER (PARTITION BY product_id\nORDER BY sale_date\nROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ytd_sales\nFROM sales_fact\nWHERE sale_date &lt;= CURRENT_DATE\nORDER BY product_id;\n</code></pre>"},{"location":"database/interview_theory/#92-how-would-you-find-the-second-highest-salary-from-a-table","title":"92. How would you find the second-highest salary from a table?","text":"<pre><code>SELECT * FROM employee;\nSELECT MAX(e_salary)\nFROM employee\nWHERE e_salary NOT IN (SELECT MAX(e_salary) FROM employee);\n</code></pre>"},{"location":"database/interview_theory/#93-how-will-you-fetch-the-most-recent-entries-in-a-database","title":"93. How will you fetch the most recent entries in a database?","text":"<p>We can fetch the most recent entries in a database by using the ORDER BY clause along with the timestamp column in descending order.</p> <pre><code>SELECT *\nFROM table_name\nORDER BY timestamp_column DESC;     -- Sort by timestamp in descending order\n</code></pre> <ol> <li>How will you find the IDs or details where there have been no entries in terms of sales? To find the IDs or details where there have been no entries in terms of sales, we can use the LEFT JOIN or NOT EXISTS clause.</li> </ol> <p>Assume we have two tables: product with product details and sales with sales data.</p> <p>Left Joins:</p> <pre><code>SELECT p.product_id, p.product_name\nFROM product p\nLEFT JOIN sales s ON p.product_id = s.product_id\nWHERE s.product_id IS NULL;\n</code></pre> <p>Here, the WHERE s.product_id is NULL condition helps us filter out the rows where a match in the sales table is not found.</p> <p>Not Exists:</p> <pre><code>SELECT p.product_id, p.product_name\nFROM products p\nWHERE NOT EXISTS (\nSELECT 1\nFROM sales s\nWHERE s.product_id = p.product_id\n);\n</code></pre>"},{"location":"database/interview_theory/#95-suppose-there-is-a-database-where-information-about-the-employees-in-various-verticals-is-stored-your-task-is-to-find-the-average-salary-of-each-vertical-and-the-highest-salary-among-the-lot","title":"95. Suppose there is a database where information about the employees in various verticals is stored. Your task is to find the average salary of each vertical and the highest salary among the lot","text":"<p>To find the average salary of each vertical and the highest salary among the employees, we can use the group by clause along with the aggregate functions (AVG and MAX).</p> <pre><code>SELECT vertical,     -- Grouping by vertical\nAVG(salary) AS average_salary,     -- Calculate average salary for each vertical\nMAX(salary) AS highest_salary     -- Find the highest salary in each vertical\nFROM employees\nGROUP BY vertical;     -- Group the results by vertical\nWhere,\n</code></pre> <p>vertical: column that you want to group salary: column in the table employees: table name</p>"},{"location":"database/interview_theory/#96-given-data-on-where-the-store-inventory-is-stored-your-task-is-to-find-the-top-3-products-in-each-category-in-terms-of-price","title":"96. Given data on where the store inventory is stored, your task is to find the top 3 products in each category in terms of price","text":"<p>To find the top 3 products in each category in terms of price, we can group by clause along with the aggregate function (MAX) with the price column, and set the limit as 3 in descending order.</p> <pre><code>SELECT category,\nproduct_name,\nMAX(price) AS max_price\nFROM inventory\nGROUP BY category, product_name\nORDER BY category, max_price DESC\nLIMIT 3;\n</code></pre>"},{"location":"database/interview_theory/#97-write-an-sql-query-to-find-the-month-on-month-sales-of-a-specific-product-in-a-store","title":"97. Write an SQL query to find the month-on-month sales of a specific product in a store","text":"<p>To calculate the month-on-month sales of a specific product in a store, we can use a combination of date functions and aggregate functions.</p> <p>\u2014 Extract year and month from the sale date</p> <pre><code>SELECT EXTRACT(YEAR_MONTH FROM sale_date) AS year_month,\nSUM(quantity_sold) AS total_sales     -- Calculate total quantity sold for each month\nFROM sales\nWHERE product_id = 'your_product_id'     -- Filter by the specific product\nGROUP BY year_month     -- Group data by year and month\nORDER BY year_month;     -- Sort results by year and month\n</code></pre>"},{"location":"database/interview_theory/#98-suppose-in-an-organisation-employees-are-mapped-under-managers-write-an-sql-query-that-will-fetch-you-the-managers-and-employees-working-under-them","title":"98. Suppose in an organisation, employees are mapped under managers. Write an SQL query that will fetch you the managers and employees working under them","text":"<p>To fetch the managers and employees working under them, we can use a self-join to fetch the managers and the employees working under them.</p> <pre><code>SELECT M.manager_id AS manager_id,     -- Manager's ID\nM.manager_name AS manager_name,     -- Manager's name\nE.employee_id AS employee_id,     -- Employee's ID\nE.employee_name AS employee_name     -- Employee's name\nFROM employees E\nJOIN employees M ON E.manager_id = M.employee_id\nORDER BY M.manager_id, E.employee_id;     -- Sort by manager ID first, Then sort by employee ID\n</code></pre>"},{"location":"database/interview_theory/#99-in-a-store-inventory-your-task-is-to-fetch-the-total-quantity-of-the-top-product-purchased-by-the-customers","title":"99. In a store inventory, your task is to fetch the total quantity of the top product purchased by the customers","text":"<p>To fetch the total quantity of the top product purchased by the customers, we can use a group by clause along with the limit in descending order.</p> <pre><code>SELECT product_id,\n\n-- Calculate total quantity purchased for each product\nSUM(quantity_purchased) AS total_quantity_purchased\nFROM purchases\nGROUP BY product_id     -- Group the data by product to aggregate purchase quantities\nORDER BY total_quantity_purchased DESC     -- Sort in descending order\nLIMIT 1;     -- Return the top product\n</code></pre>"},{"location":"database/interview_theory/#100-you-need-to-create-a-materialised-view-to-store-the-monthly-total-sales-by-product-for-faster-reporting-write-the-sql-to-create-this-view","title":"100. You need to create a materialised view to store the monthly total sales by product for faster reporting. Write the SQL to create this view","text":"<p>CREATE MATERIALIZED VIEW mv_monthly_sales AS</p> <pre><code>SELECT\nproduct_id,\nYEAR(sale_date) AS year,     -- Extract the year from sale_date\nMONTH(sale_date) AS month,     -- Extract the month from sale_date\nSUM(sale_amount) AS total_sales     -- Total sales amount per product per month\nFROM sales_fact\n\n-- Grouping to get monthly totals\nGROUP BY product_id, YEAR(sale_date), MONTH(sale_date);\n</code></pre>"},{"location":"database/interview_theory/#101-write-a-query-that-detects-missing-dates-in-a-sequence-from-a-sales-table-the-sales-table-contains-sale_date-and-sale_amount-and-you-need-to-find-any-missing-dates-between-the-earliest-and-latest-sales-dates","title":"101. Write a query that detects missing dates in a sequence from a sales table. The sales table contains sale_date and sale_amount, and you need to find any missing dates between the earliest and latest sales dates","text":"<pre><code>WITH DateSeries AS (\n\n-- Earliest date in the sales table , latest date in the sales table\nSELECT MIN(sale_date) AS start_date, MAX(sale_date) AS end_date\nFROM sales\n)\n\n-- Generate date by adding seq days to start_date\nSELECT DATE_ADD(start_date, INTERVAL seq DAY) AS missing_date\nFROM DateSeries,\n(SELECT @rownum := @rownum + 1 AS seq\nFROM sales,\n(SELECT @rownum := 0) AS r) AS seq_numbers     -- Initialize row number\n\n-- Ensure the generated date is within the range\nWHERE DATE_ADD(start_date, INTERVAL seq DAY) &lt;= end_date\nAND DATE_ADD(start_date, INTERVAL seq DAY) NOT IN (SELECT sale_date FROM sales)\nORDER BY missing_date;\n</code></pre>"},{"location":"database/interview_theory/#102-you-have-an-order-table-with-millions-of-rows-and-you-frequently-run-a-query-that-filters-it-by-customer_id-order_date-and-status-what-indexes-would-you-create-to-optimize-this-query-and-why","title":"102. You have an order table with millions of rows, and you frequently run a query that filters it by customer_id, order_date, and status. What indexes would you create to optimize this query, and why?","text":"<p>We need to create a composite index on columns that are frequently used for filtering.</p> <pre><code>CREATE INDEX idx_orders_customer_date_status\nON orders (customer_id, order_date, status);\n</code></pre> <ol> <li>Write a query using a Common Table Expression (CTE) to rank customers by total purchase amount and return the top 10 customers.</li> </ol> <pre><code>WITH RankedCustomers AS (\n-- Calculate total purchases for each customer\nSELECT customer_id, SUM(purchase_amount) AS total_spent,\n\n--Rank customers by spending (highest first)\nRANK() OVER (ORDER BY SUM(purchase_amount) DESC) AS rank\nFROM orders\nGROUP BY customer_id     -- Group by customer id\n)\nSELECT customer_id, total_spent\nFROM RankedCustomers\nWHERE rank &lt;= 10;     -- Filter to return only top 10 ranked customers\n</code></pre>"},{"location":"database/interview_theory/#104-can-you-identify-the-employee-who-has-the-third-highest-salary-from-the-given-employee-table-with-salary-related-data","title":"104. Can you identify the employee who has the third-highest salary from the given employee table (with salary-related data)?","text":"<p>Consider the following employee table. In the table, Sabid has the third-highest salary (60,000).</p> <p>Name Salary Tarun 70,000 Sabid 60,000 Adarsh 30,000 Vaibhav 80,000 Below is a simple query to find out which employee has the third-highest salary. The functions RANK, DENSE RANK, and ROW NUMBER are used to obtain the increasing integer value by imposing the ORDER BY clause in the SELECT statement, based on the ordering of the rows. The ORDER BY clause is necessary when the RANK, DENSE RANK, or ROW NUMBER functions are used. On the other hand, the PARTITION BY clause is optional.</p> <pre><code>WITH CTE AS\n(\nSELECT Name, Salary, ROW_NUMBER() OVER (ORDER BY Salary DESC) AS RN\nFROM EMPLOYEE\n)\nSELECT Name, Salary\nFROM CTE\nWHERE RN = 3;\n</code></pre>"},{"location":"database/interview_theory/#105-create-tables-customer-details-and-product-details","title":"105. Create tables- Customer details and Product details","text":"<p>So, based on these two tables, let\u2019s look into some of the questions related to SQL JOINS and queries.</p>"},{"location":"database/interview_theory/#106-what-is-the-difference-between-null-0-and-an-empty-string","title":"106. What is the difference between NULL, 0, and an empty string (\u201c\u201d)?","text":"<p>NULL = Unknown or missing value 0 = Numeric value \"\" = Empty string (text)</p>"},{"location":"database/interview_theory/#107-get-the-customer-name-and-product-name-ordered-by-first-name-from-the-customer","title":"107. Get the customer name and product name ordered by first name from the customer","text":"<pre><code>SELECT first_name, b.Product_name FROM [customer] A\nLEFT OUTER JOIN [Product] B     -- Left join to include customers without orders\nON A.customer_id = B.customer_id     -- Join condition on customer_id\nORDER BY a.first_name     -- Order the result by customer's first name\n</code></pre>"},{"location":"database/interview_theory/#108-get-the-customers-name-and-the-product-name-ordered-by-first-name","title":"108. Get the customer\u2019s name and the product name ordered by first name","text":"<pre><code>SELECT a.First_Name, ISNULL(b.Product_name,'-No Project Assigned') AS Product_Name\nFROM customer A LEFT OUTER JOIN product B\nON A.customer_id = B.customer_id ORDER BY a.first_name\n</code></pre>"},{"location":"database/interview_theory/#109-get-all-product-names-even-if-they-have-not-matched-any-customer-id-in-the-left-table-order-by-first-name","title":"109. Get all product names even if they have not matched any customer ID, in the left table, order by first name","text":"<pre><code>SELECT a.first_name,b.Product_name\nFROM [customer] A RIGHT OUTER JOIN [product] B\nON a.customer_id = b.customer_id ORDER BY a.first_name\n</code></pre>"},{"location":"database/interview_theory/#110-get-the-complete-record-customer-name-product-name-from-both-tables-customerdetail-productdetail-if-no-match-is-found-in-any-table-then-show-null","title":"110. Get the complete record (customer name, product name) from both tables ([CustomerDetail], [ProductDetail]); if no match is found in any table, then show NULL","text":"<pre><code>SELECT a.first_name,b.Product_name FROM [customer] A\nFULL OUTER JOIN [product] B\nON a.customer_id = b.customer_id\nORDER BY a.first_name\n</code></pre>"},{"location":"database/interview_theory/#111-write-a-query-to-find-out-the-product-name-that-is-not-assigned-to-any-employee-tables-customerdetailproductdetail","title":"111. Write a query to find out the product name that is not assigned to any employee( tables: [CustomerDetail],[ProductDetail])","text":"<pre><code>SELECT b.Product_name FROM [customer] A\nRIGHT OUTER JOIN [product] B\nON a.customer_id = b.customer_id\nWHERE a.first_name IS NULL\n</code></pre>"},{"location":"database/interview_theory/#112-explain-the-cap-theorem","title":"112. Explain the CAP Theorem","text":"<p>CAP Theorem, also known as Brewer\u2019s Theorem, which is a key concept in distributed systems that states all three properties cannot be guaranteed at the same time:</p> <p>Consistency Availability Partition Tolerance *The output will not come as there is no duplicate record in the product table.</p>"},{"location":"database/interview_theory/#113-write-down-the-query-to-fetch-the-productname-on-which-more-than-one-customer-is-working-along-with-the-customername","title":"113. Write down the query to fetch the ProductName on which more than one customer is working, along with the CustomerName","text":"<pre><code>Select P.Product_name, c.first_name from product P INNER JOIN customer c\non p.customer_id = c.customer_id\nwhere P.Product_name in(select Product_name from product group by Product_name having COUNT(1)&gt;1)\n</code></pre> <p>*The output will not come as there is no duplicate record in the product table.</p>"},{"location":"database/interview_theory/#114-what-is-desc-in-sql","title":"114. What is DESC in SQL?","text":"<p>In SQL, DESC stands for descending. It is used to sort records in descending order, i.e., highest to lowest. It is usually clubbed with the ORDER BY clause to sort records. Here is an example of the same:</p> <pre><code>SELECT * FROM employees ORDER BY salary DESC;\n</code></pre>"},{"location":"database/interview_theory/#115-what-is-a-schema-in-sql","title":"115. What is a schema in SQL?","text":"<p>In SQL, a schema can be termed as a structure that groups tables, views, databases, and stored procedures. Using a schema prevents conflict and allows two names to exist in parallel, divided by the schema. Here is an example of the same:</p> <pre><code>CREATE SCHEMA sales;\nCREATE TABLE sales.orders (\norder_id INT,\norder_date DATE\n);\n</code></pre>"},{"location":"database/interview_theory/#116-can-we-rollback-delete","title":"116. Can we rollback DELETE?","text":"<p>Yes, after using the DELETE command, you can roll back if you are using the TRANSACTION command. DELETE is a DML command, so when you rollback, all the transactions are undone and the records are restored. Here is an example of the same:</p> <pre><code>BEGIN TRANSACTION;     -- Begin a transaction block\nDELETE FROM employees\nWHERE employee_id = 101;     -- Delete the employee with ID 101\nROLLBACK;     -- Roll back the transaction (undo the delete operation)\n</code></pre>"},{"location":"database/interview_theory/#117-explain-how-case-statements-work-in-sql","title":"117. Explain how CASE statements work in SQL","text":"<p>CASE provides if-then-else logic in SQL like this:</p> <pre><code>SELECT product_name,\nCASE WHEN price &gt; 100 THEN 'Premium'\nWHEN price &gt; 50 THEN 'Standard'\nELSE 'Budget' END AS tier\nFROM products\n</code></pre>"},{"location":"database/interview_theory/#118-what-is-a-pivot-in-sql","title":"118. What is a pivot in SQL?","text":"<p>The PIVOT command is used to summarise the data. It converts rows into columns, which helps in better analysis. Let\u2019s understand this using an example:</p> <p>Input Data:</p> <p>Product Year Sales A 2022 100 B 2022 150 A 2023 200 B 2023 250 Question: Find the sales of Product A and Product B in 2022 and 2023</p> <p>Output Data:</p> <pre><code>Product sales_2022 sales_2023\nA 100 200\nB 150 250\n</code></pre> <p>Query Used:</p> <pre><code>SELECT product, [2022] AS sales_2022, [2023] AS sales_2023\nFROM (\nSELECT product, year, sales\nFROM sales\n) AS SourceTable\nPIVOT (\nSUM(sales)\nFOR year IN ([2022], [2023])\n) AS PivotTable;\n</code></pre> <ol> <li>What is a dynamic SQL query? A Dynamic SQL query is a technique in SQL wherein the query is built during runtime, giving dynamic inputs in the query. This makes the query flexible enough to create multiple use cases using the same query. Here is an example of the same:</li> </ol> <p>DECLARE @tableName NVARCHAR(50) = 'employees'; DECLARE @query NVARCHAR(MAX); SET @query = 'SELECT * FROM ' + @tableName + ' WHERE department = ''HR'''; EXEC(@query);</p>"},{"location":"database/postgreSQL/","title":"PostgreSQL","text":""},{"location":"database/postgreSQL/#postgresql-and-docker","title":"PostgreSQL and Docker","text":"<p>PostgreSQL is a powerful, open-source object-relational database system. It is a highly scalable, SQL-compliant database management system that is used to handle large workloads. PostgreSQL is a popular choice for many developers and organizations due to its robust features, extensibility, and reliability.</p> <ul> <li>you can take advantage of Docker to easily set up and run PostgreSQL on your local machine.</li> </ul> <p>Docker is a platform that allows you to package, distribute, and run applications in containers. It provides a lightweight and efficient way to run applications in isolated environments. Docker is available for Windows, macOS, and Linux, making it a versatile tool for developers.</p>"},{"location":"database/postgreSQL/#docker-compose-file","title":"Docker Compose File","text":"<p>Now, create a new file named compose.yml in the same directory. This file will contain the configuration for your PostgreSQL container.</p> <pre><code>services:\n  db:\n    image: postgres:alpine\n    container_name: postgres\n    restart: always\n    environment:\n      POSTGRES_DB: ${DB_NAME}\n      POSTGRES_USER: ${DB_USER}\n      POSTGRES_PASSWORD: ${DB_PASSWORD}\n    ports:\n      - ${DB_PORT}:5432  # make sure you don't have another container running on DB_PORT\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -d $${DB_NAME} -U $${DB_USER}\"]\n      interval: 10s\n      timeout: 30s\n      retries: 5\n    volumes:\n      - ./data/db:/var/lib/postgresql/data\n    attach: false\n\n  adminer:\n    image: adminer\n    restart: always\n    ports:\n      - 8080:8080\n</code></pre> <ul> <li>In this configuration file, we define two services: db and adminer.</li> <li>The db service is responsible for running the PostgreSQL instance, while the adminer service is responsible for running the Adminer web interface.</li> <li>It is a lightweight database management tool that allows you to interact with your databases through a web interface.</li> </ul> <p>The db service uses the postgres image from the Docker Hub registry. We specify the volume mapping to store the data files in the ./data/db directory. The ports section maps the container port 5432 to the host port 5432, allowing you to access the PostgreSQL instance from your local machine.</p> <p>We also set the environment variables POSTGRES_DB, POSTGRES_USER, and POSTGRES_PASSWORD to configure the database name, username, and password, respectively.</p> <p>The adminer service uses the adminer image from the Docker Hub registry. We map the container port 8080 to the host port 8080 to access the Adminer web interface.</p>"},{"location":"database/postgreSQL/#environment-variables","title":"Environment Variables","text":"<p>To configure the database name, username, and password, you can create a .env file in the same directory as the compose.yml file. Add the following content to the .env file:</p> .env file<pre><code>DB_NAME=chai-db\nDB_USER=chaicode\nDB_PASSWORD=chaiaurcode\nDB_PORT=5432\n</code></pre> <p>Replace the values of DB_NAME, DB_USER, and DB_PASSWORD with your desired database name, username, and password, respectively.</p>"},{"location":"database/postgreSQL/#start-the-postgresql-container","title":"Start the PostgreSQL Container","text":"<p>Now that you have created the compose.yml file, you can start the PostgreSQL container by running the following command in the terminal:</p> <p><pre><code>docker compose up -d\n</code></pre> This command will download the necessary images and start the PostgreSQL and Adminer containers in the background. You can verify that the containers are running by executing the following command:</p> <p><pre><code>docker ps\n</code></pre> This command will display a list of running containers on your system. You should see the db and adminer containers listed in the output.</p> <p>You can now access the Adminer web interface by opening a web browser and navigating to http://localhost:8080</p> <p>In the login page, enter the database name, username, and password that you specified in the compose.yml file. You should now be able to interact with your PostgreSQL database through the Adminer web interface.</p>"},{"location":"database/postgreSQL/#connect-with-postgresql","title":"Connect with PostgreSQL","text":"<p>If you want to connect with database url, you can use the following url:</p> <p><code>postgresql://chaicode:chaiaurcode@localhost:5432/chai-db</code></p>"},{"location":"database/practice/","title":"Practice","text":""},{"location":"database/practice/#create-the-database","title":"Create the database","text":"<pre><code>CREATE DATABASE IF NOT EXISTS university;\n</code></pre>"},{"location":"database/practice/#use-the-database","title":"Use the database","text":"<pre><code>USE university;\n</code></pre>"},{"location":"database/practice/#create-the-student-table","title":"Create the Student table","text":"<pre><code>CREATE TABLE IF NOT EXISTS Student (\n        STUDENT_ID INT PRIMARY KEY,\n        FIRST_NAME VARCHAR(50),\n        LAST_NAME VARCHAR(50),\n        GPA DECIMAL(4,2),\n        ENROLLMENT_DATE DATETIME,\n        MAJOR VARCHAR(50)\n    );\n</code></pre>"},{"location":"database/practice/#insert-records-into-the-student-table","title":"Insert records into the Student table","text":"<pre><code>   INSERT INTO Student (STUDENT_ID, FIRST_NAME, LAST_NAME, GPA, ENROLLMENT_DATE, MAJOR) VALUES\n    (201, 'Shivansh', 'Mahajan', 8.79, '2021-09-01 09:30:00', 'Computer Science'),\n    (202, 'Umesh', 'Sharma', 8.44, '2021-09-01 08:30:00', 'Mathematics'),\n    (203, 'Rakesh', 'Kumar', 5.60, '2021-09-01 10:00:00', 'Biology'),\n    (204, 'Radha', 'Sharma', 9.20, '2021-09-01 12:45:00', 'Chemistry'),\n    (205, 'Kush', 'Kumar', 7.85, '2021-09-01 08:30:00', 'Physics'),\n    (206, 'Prem', 'Chopra', 9.56, '2021-09-01 09:24:00', 'History'),\n    (207, 'Pankaj', 'Vats', 9.78, '2021-09-01 02:30:00', 'English'),\n    (208, 'Navleen', 'Kaur', 7.00, '2021-09-01 06:30:00', 'Mathematics');\n</code></pre>"},{"location":"database/practice/#create-the-program-table","title":"Create the Program table","text":"<pre><code>    CREATE TABLE IF NOT EXISTS Program (\n        STUDENT_REF_ID INT,\n        PROGRAM_NAME VARCHAR(50),\n        PROGRAM_START_DATE DATETIME,\n        FOREIGN KEY (STUDENT_REF_ID) REFERENCES Student(STUDENT_ID)\n    );\n</code></pre>"},{"location":"database/practice/#insert-records-into-the-program-table","title":"Insert records into the Program table","text":"<pre><code>    INSERT INTO Program (STUDENT_REF_ID, PROGRAM_NAME, PROGRAM_START_DATE) VALUES\n    (201, 'Computer Science', '2021-09-01 00:00:00'),\n    (202, 'Mathematics', '2021-09-01 00:00:00'),\n    (208, 'Mathematics', '2021-09-01 00:00:00'),\n    (205, 'Physics', '2021-09-01 00:00:00'),\n    (204, 'Chemistry', '2021-09-01 00:00:00'),\n    (207, 'Psychology', '2021-09-01 00:00:00'),\n    (206, 'History', '2021-09-01 00:00:00'),\n    (203, 'Biology', '2021-09-01 00:00:00');\n</code></pre>"},{"location":"database/practice/#create-the-scholarship-table","title":"Create the Scholarship table","text":"<pre><code>    CREATE TABLE IF NOT EXISTS Scholarship (\n        STUDENT_REF_ID INT,\n        SCHOLARSHIP_AMOUNT INT,\n        SCHOLARSHIP_DATE DATETIME,\n        FOREIGN KEY (STUDENT_REF_ID) REFERENCES Student(STUDENT_ID)\n    );\n</code></pre>"},{"location":"database/practice/#insert-records-into-the-scholarship-table","title":"Insert records into the Scholarship table","text":"<pre><code>    INSERT INTO Scholarship (STUDENT_REF_ID, SCHOLARSHIP_AMOUNT, SCHOLARSHIP_DATE) VALUES\n    (201, 5000, '2021-10-15 00:00:00'),\n    (202, 4500, '2022-08-18 00:00:00'),\n    (203, 3000, '2022-01-25 00:00:00'),\n    (201, 4000, '2021-10-15 00:00:00');\n</code></pre>"},{"location":"database/practice/#gfg-questions","title":"GFG Questions","text":"<ol> <li> <p>Write a SQL query to fetch \u201cFIRST_NAME\u201d from the Student table in upper case and use ALIAS name as STUDENT_NAME.</p> <pre><code>    SELECT upper(FIRST_NAME) as STUDENT_NAME FROM Student\n</code></pre> <p></p> </li> <li> <p>Write a SQL query to fetch unique values of MAJOR Subjects from Student table.</p> <pre><code>    SELECT DISTINCT MAJOR FROM Student\n    SELECT MAJOR FROM Student GROUP By MAJOR;\n</code></pre> <p></p> </li> <li> <p>Write a SQL query to print the first 3 characters of FIRST_NAME from Student table.</p> <p><code>sql     SELECT substr(FIRST_NAME,1,3) FROM Student;     SELECT SUBSTRING(FIRST_NAME, 1, 3)  FROM Student;</code></p> <p></p> </li> <li> <p>Write a SQL query to find the position of alphabet (\u2018a\u2019) int the first name column \u2018Shivansh\u2019 from Student table.</p> <pre><code>    SELECT INSTR(FIRST_NAME, 'a') FROM Student Where FIRST_NAME= \"Shivansh\"\n</code></pre> <p></p> </li> <li> <p>Write a SQL query that fetches the unique values of MAJOR Subjects from Student table and print its length.</p> <pre><code>    SELECT MAJOR,length(MAJOR) FROM Student GROUP By MAJOR;\n    SELECT DISTINCT MAJOR, LENGTH(MAJOR) FROM Student;\n</code></pre> <p></p> </li> <li> <p>Write a SQL query to print FIRST_NAME from the Student table after replacing \u2018a\u2019 with \u2018A\u2019</p> <pre><code>    SELECT replace(FIRST_NAME,'a','A') FROM Student;\n</code></pre> <p></p> </li> <li> <p>Write a SQL query to print the FIRST_NAME and LAST_NAME from Student table into single column COMPLETE_NAME.</p> <pre><code>SELECT FIRST_NAME || ' ' || LAST_NAME AS COMPLETE_NAME FROM Student;\n</code></pre> <p></p> </li> <li> <p>Write a SQL query to print all Student details from Student table order by FIRST_NAME Ascending and MAJOR Subject descending.</p> <pre><code>SELECT * FROM Student ORDER By FIRST_NAME, MAJOR DESC ;\n</code></pre> <p></p> </li> <li> <p>Write a SQL query to print details of the Students with the FIRST_NAME as \u2018Prem\u2019 and \u2018Shivansh\u2019 from Student table</p> <pre><code>    SELECT * FROM Student WHERE FIRST_NAME IN( 'Prem' ,\"Shivansh\");\n    SELECT * FROM Student WHERE FIRST_NAME = 'Prem' or FIRST_NAME = \"Shivansh\";\n</code></pre> <p></p> </li> <li> <p>Write a SQL query to print details of the Students excluding FIRST_NAME as \u2018Prem\u2019 and \u2018Shivansh\u2019 from Student table.</p> <pre><code>SELECT * FROM Student WHERE FIRST_NAME != 'Prem' or FIRST_NAME != \"Shivansh\";\nSELECT * FROM Student WHERE FIRST_NAME NOT IN (\"Prem\",\"Shivansh\");\n</code></pre> <p></p> </li> <li> <p>Write a SQL query to print details of the Students whose FIRST_NAME ends with \u2018a\u2019.</p> <pre><code>SELECT * FROM Student WHERE FIRST_NAME LIKE \"%a\";\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to print details of the Students whose FIRST_NAME ends with \u2018a\u2019 and contains six alphabets.</p> <pre><code>SELECT * FROM Student WHERE FIRST_NAME LIKE \"%_____a\";\n</code></pre> </li> <li> <p>Write an SQL query to print details of the Students whose GPA lies between 9.00 and 9.99.</p> <pre><code>SELECT * FROM Student WHERE GPA BETWEEN 9.00 AND 9.99;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch the count of Students having Major Subject \u2018Computer Science\u2019.</p> <pre><code>SELECT MAJOR,COUNT(MAJOR) as TOTAL FROM Student WHERE MAJOR =\"Computer Science\";\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch Students full names with GPA &gt;= 8.5 and &lt;= 9.5.</p> <pre><code>SELECT FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME FROM Student WHERE GPA &gt;= 8.5 AND GPA&lt;= 9.5;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch the no. of Students for each MAJOR subject in the descending order.</p> <pre><code>SELECT MAJOR, count(MAJOR) as TOTAL  FROM Student GROUP BY  MAJOR ORDER BY TOTAL DESC;\n</code></pre> <p></p> </li> <li> <p>Display the details of students who have received scholarships, including their names, scholarship amounts, and scholarship dates.</p> <pre><code>SELECT st.FIRST_NAME,st.LAST_NAME ,sc.SCHOLARSHIP_AMOUNT,sc.SCHOLARSHIP_DATE\nFROM Student st JOIN Scholarship sc\nON  st.STUDENT_ID = sc.STUDENT_REF_ID;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show only odd rows from Student table.</p> <pre><code>SELECT * FROM Student where STUDENT_ID%2=1;\nSELECT * FROM Student where STUDENT_ID%2!=0;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show only even rows from Student table.</p> <pre><code> SELECT * FROM Student where STUDENT_ID%2=0;\n</code></pre> <p></p> </li> <li> <p>List all students and their scholarship amounts if they have received any. If a student has not received a scholarship, display NULL for the scholarship details.</p> <pre><code>SELECT st.FIRST_NAME,st.LAST_NAME ,sc.SCHOLARSHIP_AMOUNT,sc.SCHOLARSHIP_DATE\nFROM Student st LEFT JOIN Scholarship sc\nON  st.STUDENT_ID = sc.STUDENT_REF_ID\n\nSELECT\n    Student.FIRST_NAME,\n    Student.LAST_NAME,\n    COALESCE(Scholarship.SCHOLARSHIP_AMOUNT, NULL) AS SCHOLARSHIP_AMOUNT,\n    COALESCE(Scholarship.SCHOLARSHIP_DATE, NULL) AS SCHOLARSHIP_DATE\nFROM\n    Student\nLEFT JOIN\n    Scholarship ON Student.STUDENT_ID = Scholarship.STUDENT_REF_ID;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show the top n (say 5) records of Student table order by descending GPA.</p> <pre><code>SELECT * FROM Student ORDER by GPA DESC limit 5\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to determine the nth (say n=5) highest GPA from a table.</p> <pre><code>SELECT * FROM Student ORDER by GPA DESC limit 4,1\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to determine the 5th highest GPA without using LIMIT keyword.</p> <pre><code>SELECT DISTINCT s1.GPA,s1.FIRST_NAME\nFROM Student s1\nWHERE 5 = (\n    SELECT COUNT(DISTINCT s2.GPA)\n    FROM Student s2\n    WHERE s2.GPA &gt;= s1.GPA\n)\n\nSELECT DISTINCT *\nFROM (\n    SELECT FIRST_NAME,GPA, ROW_NUMBER() OVER (ORDER BY GPA DESC) AS row_num\n    FROM Student\n) AS ranked_gpas\nWHERE row_num = 5;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch the list of Students with the same GPA.</p> <pre><code>SELECT * FROM Student s1, student s2\nwhere s1.GPA = s2.GPA and s1.STUDENT_ID!= s2.STUDENT_ID\n\nSELECT *FROM Student GROUP BY GPA  HAVING count(*) &gt;1  # not working SELECT s1.STUDENT_ID, s1.FIRST_NAME, s1.GPA\nFROM Student s1\nINNER JOIN Student s2 ON s1.GPA = s2.GPA\nWHERE s1.STUDENT_ID &lt;&gt; s2.STUDENT_ID\nORDER BY s1.GPA;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show the second highest GPA from a Student table using sub-query.</p> <pre><code>SELECT MAX(GPA) FROM Student WHERE GPA NOT IN (SELECT MAX(GPA) FROM Student)\nSELECT *\nFROM (\n    SELECT*, DENSE_RANK() OVER (ORDER BY GPA DESC) AS gpa_rank\n    FROM Student\n) AS Rankedgpa\nWHERE gpa_rank = 2;\nSELECT * FROM Student ORDER BY GPA DESC LIMIT 1,1\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show one row twice in results from a table.</p> <pre><code>SELECT *FROM Student\nUNION ALL\nSELECT* FROM Student ORDER BY STUDENT_ID;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to list STUDENT_ID who does not get Scholarship.</p> <pre><code>SELECT * FROM Student WHERE STUDENT_ID NOT IN\n(SELECT STUDENT_REF_ID FROM Scholarship)\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch the first 50% records from a table.</p> <pre><code>SELECT *\nFROM (\n    SELECT*, PERCENT_RANK() OVER (ORDER BY FIRST_NAME) AS pct_rank\n    FROM Student\n) AS RankedRecords\nWHERE pct_rank &lt;= 0.5;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show all MAJOR subject along with the number of people in there.</p> <pre><code>SELECT MAJOR, count(MAJOR) as total  FROM Student group by MAJOR ORDER by total DESC\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show the last record from a table.</p> <pre><code>SELECT * FROM Student WHERE STUDENT_ID = (select max(STUDENT_ID) from student )\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch the first row of a table.</p> <pre><code>SELECT *,min(student_id) FROM Student  \nSELECT * FROM Student limit 1\nSELECT * FROM Student WHERE STUDENT_ID = (SELECT MIN(STUDENT_ID) FROM Student);\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch the last five records from a table.</p> <pre><code>SELECT * FROM Student ORDER BY STUDENT_ID DESC limit 5\nSELECT *\nFROM (\n    SELECT*\n    FROM Student\n    ORDER BY STUDENT_ID DESC\n    LIMIT 5\n) AS subquery\nORDER BY STUDENT_ID;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch three max GPA from a table using co-related subquery.</p> <pre><code>SELECT * FROM Student WHERE GPA IN (SELECT GPA FROM Student ORDER by GPA DESC LIMIT 3)\nSELECT DISTINCT GPA FROM Student S1\nWHERE 3 &gt;= (SELECT COUNT(DISTINCT GPA) FROM Student S2 WHERE S1.GPA &lt;= S2.GPA)\nORDER BY S1.GPA DESC;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch three min GPA from a table using co-related subquery.</p> <pre><code>SELECT DISTINCT GPA FROM Student S1\nWHERE 3 &gt;= (SELECT COUNT(DISTINCT GPA) FROM Student S2 WHERE S1.GPA &gt;= S2.GPA)\nORDER BY S1.GPA;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch nth max GPA from a table.</p> <pre><code>SELECT GPA FROM Student group by gpa order by gpa DESC limit 5;\n\nSELECT DISTINCT GPA FROM Student S1\nWHERE n &gt;= (SELECT COUNT(DISTINCT GPA) FROM Student S2 WHERE S1.GPA &lt;= S2.GPA) ORDER BY S1.GPA DESC;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch MAJOR subjects along with the max GPA in each of these MAJOR subjects.</p> <pre><code>SELECT MAJOR, GPA FROM Student GROUP BY GPA;\n\nSELECT MAJOR, MAX(GPA) as MAXGPA FROM Student GROUP BY MAJOR;\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to fetch the names of Students who has highest GPA.</p> <pre><code>SELECT FIRST_NAME, MAX(GPA) FROM Student GROUP BY GPA; (not working)\n\nSELECT FIRST_NAME,GPA FROM Student WHERE GPA =(SELECT MAX(GPA) FROM Student)\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show the current date and time.</p> <pre><code>SELECT CURRENT_TIMESTAMP AS CurrentDateTime;\n\nSELECT CURRENT_DATE AS CurrentDateTime;\n</code></pre> <p></p> </li> <li> <p>Write a query to create a new table which consists of data and structure copied from the other table (say Student) or clone the table named Student.</p> <pre><code>CREATE TABLE clone AS SELECT * FROM Student\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to update the GPA of all the students in \u2018Computer Science\u2019 MAJOR subject to 7.5.</p> <pre><code>UPDATE Student SET GPA = 7.5 WHERE MAJOR = \"Computer Science\"\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to find the average GPA for each major.</p> <pre><code>SELECT MAJOR,avg(GPA) FROM Student GROUP BY MAJOR\n</code></pre> <p></p> </li> <li> <p>Write an SQL query to show the top 3 students with the highest GPA.</p> <pre><code>     SELECT * FROM Student ORDER BY GPA DESC LIMIT 3;\n</code></pre> </li> <li> <p>Write an SQL query to find the number of students in each major who have a GPA greater than 7.5.</p> <pre><code>SELECT MAJOR,count(GPA) AS HIGEST_GPA FROM Student WHERE GPA &gt; 7.5 GROUP BY MAJOR\n</code></pre> <p>;</p> </li> <li> <p>Write an SQL query to find the students who have the same GPA as \u2018Shivansh Mahajan\u2019.</p> <pre><code>SELECT s1.FIRST_NAME ||' '|| s1.LAST_NAME as full_name, s2.GPA FROM Student s1\njoin Student s2 ON s1.STUDENT_ID = s2.STUDENT_ID\nWHERE s1.FIRST_NAME = \"Shivansh\" and s1. LAST_NAME =\"Mahajan\"\nand s1.GPA = s2.GPA\n\nSELECT * FROM Student WHERE GPA = (SELECT GPA FROM Student WHERE FIRST_NAME = 'Shivansh'\nAND LAST_NAME = 'Mahajan');\n</code></pre> <p></p> </li> </ol>"},{"location":"database/query/","title":"Practice queries","text":"<p>https://www.programiz.com/sql/online-compiler/</p> <p></p>"},{"location":"database/query/#q-1-find-total-count-of-customer-id-in-table-customer","title":"Q 1: FIND TOTAL COUNT OF CUSTOMER ID IN TABLE CUSTOMER?","text":"<p>ANS: <code>SELECT COUNT (CUSTOMER_id) AS TOTAL_COUNT FROM CUSTOMERS</code></p> <p></p>"},{"location":"database/query/#que-2find-total-customers-where-age-is-greator-than-23","title":"QUE 2:FIND TOTAL Customers WHERE AGE IS GREATOR THAN 23?","text":"<pre><code>SELECT COUNT (CUSTOMER_id) AS TOTAL_COUNT FROM CUSTOMERS WHERE AGE &gt; '23'\n</code></pre>"},{"location":"database/query/#q3-count-list-of-record-where-country-nane-is-usa","title":"Q3: COUNT LIST OF RECORD WHERE COUNTRY nane IS USA?","text":"<pre><code>SELECT COUNT (COUNTRY) AS TOTAL_RECORD FROM CUSTOMERS WHERE \nCOUNTRY='USA'\n</code></pre>"},{"location":"database/query/#q4-count-list-of-record-where-first-name-starts-with-j","title":"Q4: COUNT LIST OF RECORD WHERE FIRST NAME STARTS WITH J?","text":"<pre><code>SELECT COUNT (FIRST_NAME) AS NAMES FROM CUSTOMERS WHERE FIRST_NAME LIKE 'J%'\n</code></pre>"},{"location":"database/query/#q5-fetch-count-number-record-of-customers-where-age-limit-between-20-to-28","title":"Q5: FETCH COUNT NUMBER RECORD OF CUSTOMERS WHERE AGE LIMIT BETWEEN 20 TO 28?","text":"<pre><code>SELECT COUNT (customer_id) FROM CUSTOMERS WHERE AGE BETWEEN '25' AND '28'\n</code></pre>"},{"location":"database/query/#q5-fetch-count-number-record-of-customers-where-not-age-limit-between-20-to-28","title":"Q5: FETCH COUNT NUMBER RECORD OF CUSTOMERS WHERE  not AGE LIMIT BETWEEN 20 TO 28?","text":""},{"location":"database/query/#q6-find-hihgest-age-in-customer","title":"Q6: FIND HIHGEST AGE IN CUSTOMER?","text":"<pre><code>SELECT MAX (AGE) AS HIGH_AGE FROM CUSTOMERS\n</code></pre>"},{"location":"database/query/#q7-find-min-age-in-customer","title":"Q7: FIND MIN AGE IN CUSTOMER?","text":"<pre><code>SELECT MIN (AGE) AS LOW_AGE FROM CUSTOMERS\n</code></pre>"},{"location":"database/query/#q8-find-second-highest-age-in-customer","title":"Q8: FIND SECOND HIGHEST AGE IN CUSTOMER?","text":"<pre><code>SELECT * FROM CUSTOMERS ORDER BY AGE DESC LIMIT 1,1\n</code></pre> <p>NOTE : IT WILL SKIP THE FIRST VALUE AND SHOW SECOND VALUE LIKE ..AFTER SORTING</p> <p>SECOND WAY:</p> <pre><code>SELECT MAX(A.AGE) FROM CUSTOMERS A, CUSTOMERS S\nWHERE A.AGE&lt;S.AGE`\n</code></pre> <p>BEST WAY:</p> <pre><code>SELECT MAX(AGE) FROM CUSTOMERS WHERE AGE &lt; (SELECT MAX(AGE) FROM CUSTOMERS)`\n</code></pre> <p></p>"},{"location":"database/query/#q9-display-customer-details-who-customerid-is-4-and-show-the-details-for-all-the-customers-who-lives-in-same-country","title":"Q9: Display customer details WHO CUSTOMERID IS 4 AND SHOW THE DETAILS FOR ALL THE CUSTOMERS WHO LIVES IN SAME COUNTRY?","text":"<pre><code>SELECT * FROM CUSTOMERS WHERE COUNTRY=(SELECT COUNTRY FROM CUSTOMERS WHERE CUSTOMER_ID = '4')```\n***BEST WAY :***\n```sql\nSELECT T2.* FROM Customers T1, customerS T2\nWHERE T1.CUSTOMER_id = '4' AND T1.cOUNTRY = T2.cOUNTRY;\n</code></pre>"},{"location":"database/query/#q10-country-wise-highest-age-lowest-age","title":"Q10: Country wise highest AGE , LOWEST AGE?","text":"<pre><code>SELECT MAX(AGE) FROM CUSTOMERS ORDER BY FIRST_NAME\nSELECT MIN(AGE) FROM CUSTOMERS ORDER BY CUSTOMER_iD\n\nSELECT country, MIN(AGE) AS lowest_age\nFROM Customers\nGROUP BY country;\n</code></pre>"},{"location":"database/query/#q11-counts-no-of-customers-in-each-country-or-counts-no-of-items-in-each-orderid","title":"Q11: Counts No of CUSTOMERS in each COUNTRY or counts no of ITEMS in Each OrderID","text":"<pre><code>SELECT country, COUNT(country) AS no_of_customer FROM customers GROUP BY  country\n</code></pre>"},{"location":"database/query/#q12-display-alternate-records135-or-246","title":"Q12: Display Alternate Records(1,3,5 or 2,4,6) ?","text":"<pre><code>SELECT * FROM CUSTOMERS WHERE CUSTOMER_ID%2=1 (FOR ODD)\n\nSELECT * FROM CUSTOMERS WHERE CUSTOMER_ID%2!=1 (FOR EVEN)\n</code></pre> <p>Note:  The modulo operation on CUSTOMER_ID will not guarantee alternating records in the sequence of rows returned.</p> <ul> <li>Alternate records without usinf customerID</li> </ul> <pre><code>        WITH NumberedRows AS (\n            SELECT *, ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS RowNum\n            FROM Customers\n            )\n            SELECT *\n            FROM NumberedRows\n            WHERE RowNum % 2 = 1;\n</code></pre> <p></p>"},{"location":"database/query/#q13-show-first_name-and-last_name-and-age-by-desc-order-of-age","title":"Q13: SHOW FIRST_NAME AND LAST_NAME AND AGE BY DESC ORDER OF AGE","text":"<pre><code>SELECT FIRST_NAME,LAST_NAME ,AGE FROM CUSTOMERS ORDER BY AGE DESC\n</code></pre>"},{"location":"database/query/#q14-display-duplicate-name-of-a-column","title":"Q14 : Display Duplicate name of a Column","text":"<ul> <li>(GROUP BY USING ALL DUPLICATE VALUES HAS BEEN REMOVED AND WE NEED TO SEARCH MORE ON IT)</li> <li> <p>Select first_name from customers group by first_name</p> </li> <li> <p>Display Duplicate of a Column (NEED TO SEARCH MORE HAVING BY &amp; GROUP BY)</p> </li> <li> <p><code>Select first_name,COUNT(*) from customers GROUP BY FIRST_NAME HAVING COUNT(*)&gt;1;</code></p> </li> <li> <p>OR (IF WE WANT TO PRINT THE FULL RECORD)</p> </li> </ul> <pre><code>        SELECT *\n        FROM CUSTOMERS\n        WHERE FIRST_NAME IN (\n            SELECT FIRST_NAME\n            FROM CUSTOMERS\n            GROUP BY FIRST_NAME\n            HAVING COUNT(*) &gt; 1\n        );\n\n\n        SELECT *\n        FROM your_table\n        WHERE column_name IN (\n            SELECT column_name\n            FROM your_table\n            GROUP BY column_name\n            HAVING COUNT(*) &gt; 1\n        );\n</code></pre> <p></p>"},{"location":"database/query/#q15-select-first-4-row-from-tabel","title":"Q15: Select first 4 row from tabel","text":"<pre><code>SELECT * FROM CUSTOMERS LIMIT 4\n</code></pre>"},{"location":"database/query/#q16-joins-two-table-and-show-all-coulums-for-both-the-tables-and-print-last-three-lesser-amount","title":"Q16: JOINS TWO TABLE AND SHOW ALL COULUMS FOR BOTH THE TABLES AND PRINT LAST THREE LESSER AMOUNT","text":"<pre><code>    SELECT * FROM CUSTOMERS\n    JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID\n     ORDER BY AMOUNT LIMIT 3;\n</code></pre> <p>NOTE : WE HAVE USE FULL JOIN HERE AND PRINT THE LOWEST THREE VALUES OF AMOUNT </p>"},{"location":"database/query/#q17-print-first_name-last_name-and-amount-who-brought-keyboard","title":"Q17: Print FIRST_NAME , LAST_NAME AND AMOUNT WHO BROUGHT KEYBOARD","text":"<pre><code>    SELECT FIRST_NAME, LAST_NAME, AMOUNT\n        FROM CUSTOMERS\n        JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID=ORDERS.CUSTOMER_ID\n        WHERE ITEM LIKE '%KEYBOARD%\n</code></pre>"},{"location":"database/query/#q18-print-list-if-item-price-which-is-selling-in-usa-or-uk","title":"Q18: PRINT LIST IF ITEM , PRICE WHICH IS SELLING IN USA OR UK","text":"<pre><code>    SELECT ITEM,AMOUNT\n    FROM CUSTOMERS\n    JOIN ORDERS\n    ON CUSTOMERS.CUSTOMER_ID=ORDERS.CUSTOMER_ID\n    WHERE COUNTRY IN ('USA','UAE')\n</code></pre>"},{"location":"database/query/#q-19-print-list-if-item-amountcountry-which-has-been-delivered","title":"Q 19: PRINT LIST IF ITEM , AMOUNT,COUNTRY WHICH HAS BEEN DELIVERED","text":"<ul> <li>(JOINS FOR THREE TABLES)</li> </ul> <pre><code>    SELECT ITEM,AMOUNT,COUNTRY\n    FROM CUSTOMERS\n    JOIN ORDERS\n    ON CUSTOMERS.CUSTOMER_ID=ORDERS.CUSTOMER_ID\n    JOIN SHIPPINGS ON CUSTOMERs.CUSTOMER_ID=SHIPPINGS.CUSTOMER\n    WHERE STATUS = 'Delivered'\n</code></pre>"},{"location":"database/query/#q20-union-vs-uninonall","title":"Q20 :  union vs uninonall","text":"<ul> <li>UNION (REMOVE DUPLICATES)</li> <li>Purpose: Combines the results of two or more queries and removes duplicate rows from the final result set</li> <li>Performance: May be slower compared to UNION ALL because it involves additional processing to remove duplicates.</li> </ul> <pre><code>    - SELECT CUSTOMER_ID FROM CUSTOMERS\n            UNION\n            SELECT CUSTOMER_ID FROM ORDERS\n</code></pre> <ul> <li>UNION ALL (PRINT BOTH AS ITS IS)</li> <li>Purpose: Combines the results of two or more queries without removing duplicates.</li> <li>Performance: Generally faster than UNION because it does not perform the additional step of removing duplicates</li> </ul> <pre><code>   SELECT CUSTOMER_ID FROM CUSTOMERS\n   UNION\n   SELECT CUSTOMER_ID FROM ORDERS\n</code></pre>"},{"location":"database/query/#union-all","title":"UNION ALL","text":""},{"location":"database/query/#que-21-inner-join-only-shows-common-data","title":"QUE 21 : INNER JOIN - ONLY SHOWS COMMON DATA","text":"<pre><code>SELECT C.CUSTOMER_ID,C.FIRST_NAME , C.LAST_NAME, C.AGE, O.ORDER_ID , O.ITEM\nFROM CUSTOMERS C\nINNER JOIN ORDERS O ON C.CUSTOMER_ID=O.CUSTOMER_ID\n</code></pre> <p>OR</p> <pre><code>SELECT C.CUSTOMER_ID,C.FIRST_NAME , C.LAST_NAME, C.AGE, O.ORDER_ID , O.ITEM\nFROM ORDERS O, CUSTOMERS C\nWHERE O.CUSTOMER_ID=C.CUSTOMER_ID\n</code></pre> <p></p>"},{"location":"database/query/#q-22-how-can-we-retrieve-the-names-of-customers-who-share-the-same-last-name-but-are-from-different-countries","title":"Q 22: How can we retrieve the names of customers who share the same last name but are from different countries?","text":"<pre><code>SELECT C1.FIRST_NAME,C1.LAST_NAME ,C1.COUNTRY FROM CUSTOMERS C1\nJOIN CUSTOMERS C2\nON C1.LAST_NAME=C2.LAST_NAME WHERE C1.COUNTRY&lt;&gt;C2.COUNTRY\n</code></pre>"},{"location":"database/query/#q-23-how-can-we-find-all-customers-who-share-the-same-first-name-and-are-of-the-same-age-group-within-a-7-year-range","title":"Q 23: How can we find all customers who share the same first name and are of the same age group (within a 7-year range)?","text":"<pre><code>SELECT * FROM CUSTOMERS C\nJOIN CUSTOMERS C1 ON\nC.FIRST_NAME=C1.FIRST_NAME\nWHERE c.customer_id &lt; c1.customer_id\n    AND ABS(c.age - c1.age) &lt; 5;\n</code></pre>"},{"location":"database/query/#q-24-how-to-find-last-row","title":"Q 24: HOW TO FIND LAST ROW","text":"<pre><code>SELECT * FROM `table_name` WHERE id=(SELECT MAX(id) FROM `table_name`);\n</code></pre>"},{"location":"database/query/#que-25-how-to-fetch-data-using-left-join","title":"QUE 25 : HOW TO FETCH DATA USING LEFT JOIN","text":""},{"location":"database/radis/","title":"Radis (In-memory db)","text":"<ul> <li>It is faster not big</li> <li>TO access API records faster</li> <li>Open source in-memory data strucure store which can be used as a database or a cache and message broker</li> <li>No SQL key/value storage</li> <li>support mulltiple data strucures</li> <li>Built in replication(Master-slave server)</li> </ul> <p>Radis: Data ia not an ordeing database we are uing radis as cache, as a message broker as a streming engine and more</p> <p>Q1. whiat is Radis? Q2. Why use Radis? Q How to implemet? Q4. How improve the performance Deep driven radis pic</p> <p>Q1. What is Radis Radis is in-memory database which mean it store data in Random Access(RAM). By doing that its read and write speed is faster</p> <p>Tradistional DB like MySQL, MongoDB for read and write purpose they are using computer disk</p> <p>Modren ssp took zoom to read data but when we using Ram it took zons that why radis se RAM as perimary storage thats why we can able to access data very fast.</p> <ul> <li> <p>It has disk persistance it an distional feature for durability behind the scan radis  store shape short of data in ssd/hdd so when server restart we wont loss our data</p> </li> <li> <p>Thsi adavantage you have seen in preformance we are using cashing system  as radis so in  see your can access deler by application by doing so user experce is else impoved and primary database load also reduces</p> </li> </ul>"},{"location":"database/radis/#data-types-that-radis-supports","title":"Data types that radis supports","text":"<ol> <li>String</li> <li>List</li> <li>Set</li> <li>Sorted sets</li> <li>Hashed (key-value)</li> <li>Bitmaps</li> <li>Hyper logs</li> <li>Geospatial indexs</li> </ol> <p>last 3 are compilacated</p>"},{"location":"database/radis/#advantages","title":"Advantages","text":"<ul> <li>Very Flexible</li> <li>No schemas and column Name</li> <li>Very Fast: Can perform aroung 110000 sets per sec about 110000 set per sec</li> <li>Ritch Datatype support</li> <li>Caching &amp; Disk per s</li> </ul>"},{"location":"database/radis/#radis-cli","title":"Radis-cli","text":"<p>```</p>"},{"location":"database/self_join/","title":"Self join","text":""},{"location":"database/self_join/#to-run-sql-on-jupyter-notebook","title":"to run sql on jupyter notebook","text":""},{"location":"database/self_join/#sql-magic","title":"SQL Magic","text":"<ul> <li><code>install ipython-sql</code></li> <li><code>!pip install --user ipython-sql</code></li> <li>Enable the SQL magic in jupyter notebook using below statement</li> <li><code>%load_ext sql</code></li> </ul>"},{"location":"database/self_join/#using-sql-magic-with-sqlite-database","title":"Using SQL Magic with SQLite Database","text":"<ul> <li>import sqlit3 == %load_ext sql</li> <li>conn = sqlite3.connect('HR.db') == %sql sqlite:///HR.db</li> </ul> <pre><code>%load_ext sql\n%sql sqlite:///HR.db\n</code></pre> <pre><code>%sql SELECT name FROM sqlite_master WHERE type='table';\n\n* sqlite:///HR.db\nDone.\n\n%%sql\nCREATE TABLE students (\n    id INTEGER PRIMARY KEY,\n    ename TEXT NOT NULL,\n    city TEXT\n);\n * sqlite:///HR.db\nDone.\nname\nstudents\n</code></pre> <pre><code>%%sql\nINSERT INTO students (ename, city) VALUES ('kiran', 'mub');\nINSERT INTO students (ename, city) VALUES ('hari', 'hyd');\nINSERT INTO students (ename, city) VALUES ('madhu', 'hyd');\nINSERT INTO students (ename, city) VALUES ('smith', 'delhi');\nINSERT INTO students (ename, city) VALUES ('scott', 'mub');\nINSERT INTO students (ename, city) VALUES ('allen', 'hyd');\nINSERT INTO students (ename, city) VALUES ('soumya', 'channi');\nINSERT INTO students (ename, city) VALUES ('johai', 'delhi');\n</code></pre> <p><pre><code>%%sql\nSELECT * FROM students;\n</code></pre>         * sqlite:///HR.db         Done.         id ename city         1 kiran mub         2 hari hyd         3 madhu hyd         4 smith delhi         5 scott mub         6 allen hyd         7 soumya channi         8 johai delhi</p>"},{"location":"database/self_join/#rename-col","title":"Rename col","text":"<pre><code>%%sql\nALTER TABLE students RENAME TO employee;\n</code></pre>"},{"location":"database/self_join/#tutorial-link-httpswwwyoutubecomwatchv186tulumgsmlistpld3uqwtnyxokwqytt5e_tf-71tiyf0esbindex15","title":"tutorial link https://www.youtube.com/watch?v=186TuLumGSM&amp;list=PLd3UqWTnYXOkwqytT5E_tF-71tIyf0esb&amp;index=15","text":""},{"location":"database/self_join/#self-join_1","title":"SELF JOIN","text":"<ul> <li>A table which is joined itselff is known as self join.</li> <li>In this case we can use alias name from single table</li> </ul> <p>Here alias names are temporary</p>"},{"location":"database/self_join/#employee-table","title":"Employee Table","text":"ename city kiran mub hari hyd madhu hyd smith delhi scott mub allen hyd soumya channi johai delhi"},{"location":"database/self_join/#-q1-display-employee-details-who-is-living-in-a-city-where-jhonne-is-living","title":"- Q1: Display employee details Who is living in a city where jhonne is living?","text":"<p>pic here</p> <ol> <li>Goto first alias table and check the employee name \"Jhone\"</li> <li>If it is there then get his city'</li> <li>Then the city from first alias table is compared with all city names in 2nd alias table.</li> <li>If the city values are equal then get the records from (records alias table)alias table</li> </ol> <p>1). ANS</p> <pre><code>    WHERE e1.ename = 'johai'\n        AND\n    e1.city = e2.city\n\n    SELECT e2.*\n    FROM employee e1,employee e2\n    WHERE e1.ename = 'Jhone'\n    AND\n    e1.city = e2.city\no/p -&gt; swith delhi, johan delhi\n</code></pre> <pre><code>%%sql\nSELECT e2.ename, e2.city\nFROM employee e1, employee e2\nWHERE e1.ename = 'johai'\nAND e1.city = e2.city;\n</code></pre> <p>ename city johai delhi smith delhi</p>"},{"location":"database/self_join/#q2-display-employee-details-who-is-working-like-smit","title":"Q2. Display employee details who is working like 'smit'?","text":"<pre><code>SELECT e2.* FROM emp  e1, emp  e2\nWHERE e1.ename = \"SMIT\" AND e1.job = e2.job\n</code></pre> <pre><code>%%sql\nCREATE TABLE emp (\n    empno INTEGER PRIMARY KEY,\n    ename TEXT NOT NULL,\n    job TEXT,\n    mgr INTEGER,\n    hiredate TEXT,\n    sal REAL,\n    comm REAL,\n    deptno INTEGER\n);\n\n%%sql\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7566, 'clark', 'manager', 7839, '02-apr-81', 2975, NULL, 20);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7839, 'king', 'president', NULL, '17-nov-81', 5000, NULL, 10);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7782, 'ward', 'salesman', 7698, '28-sep-81', 1250, 500, 30);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7698, 'jones', 'manager', 7839, '09-dec-81', 2975, NULL, 30);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7788, 'scott', 'analyst', 7566, '19-apr-87', 3000, NULL, 20);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7844, 'turner', 'salesman', 7698, '08-sep-81', 1500, NULL, 30);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7876, 'adams', 'clerk', 7788, '23-may-87', 1100, NULL, 20);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7900, 'ford', 'analyst', 7566, '03-dec-81', 3000, NULL, 20);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7934, 'miller', 'clerk', 7782, '23-jan-82', 1300, NULL, 10);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7902, 'blake', 'clerk', 7698, '03-apr-81', 1600, NULL, 30);\nINSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno) \nVALUES (7903, 'smith', 'manager', 7698, '03-jun-81', 2450, NULL, 10);\n</code></pre> <pre><code>%%sql\nSELECT e2.* \nFROM emp  e1, emp  e2\nWHERE e1.ename = \"smith\" AND e1.job = e2.job;\n</code></pre> <p>empno ename job mgr hiredate sal comm deptno 7566 clark manager 7839 02-apr-81 2975.0 None 20 7698 jones manager 7839 09-dec-81 2975.0 None 30 7903 smith manager 7698 03-jun-81 2450.0 None 10</p>"},{"location":"database/self_join/#q3-display-customer-details-who-is-the-city-where-c5-is-living","title":"Q3. Display customer details who is the city where c5 is living?","text":"<pre><code>SELECT c2.* FROM Customers c1, customer c2\nWHERE c1.cid = 'c5' AND c1.city = c2.city;\n</code></pre> <p>%%sql SELECT c2.* FROM emp c1, emp c2 WHERE c1.empno = '7900' AND c1.deptno = c2.deptno;</p> <p>empno ename job mgr hiredate sal comm deptno 7566 clark manager 7839 02-apr-81 2975.0 None 20 7788 scott analyst 7566 19-apr-87 3000.0 None 20 7876 adams clerk 7788 23-may-87 1100.0 None 20 7900 ford analyst 7566 03-dec-81 3000.0 None 20</p> <pre><code>%%sql\nCREATE TABLE cust_dtls (\n    cno TEXT PRIMARY KEY,\n    cname TEXT NOT NULL,\n    city TEXT,\n    gender TEXT\n);\n\n\n%%sql\nINSERT INTO cust_dtls (cno, cname, city, gender) VALUES ('cust-1', 'Anil', 'Texas', 'M');\nINSERT INTO cust_dtls (cno, cname, city, gender) VALUES ('cust-2', 'Kiran', 'Chicago', 'M');\nINSERT INTO cust_dtls (cno, cname, city, gender) VALUES ('cust-3', 'Vinod', 'Delhi', 'M');\nINSERT INTO cust_dtls (cno, cname, city, gender) VALUES ('cust-4', 'Madhu', 'Delhi', 'M');\nINSERT INTO cust_dtls (cno, cname, city, gender) VALUES ('cust-5', 'Rocky', 'Texas', 'M');\nINSERT INTO cust_dtls (cno, cname, city, gender) VALUES ('cust-6', 'Ching Fu', 'Chicago', 'M');\nINSERT INTO cust_dtls (cno, cname, city, gender) VALUES ('cust-7', 'Sonali', 'Delhi', 'F');\n</code></pre> <pre><code>%%sql\nSELECT * FROM cust_dtls;\n</code></pre> <ul> <li>sqlite:///HR.db Done. cno cname city gender cust-1 Anil Texas M cust-2 Kiran Chicago M cust-3 Vinod Delhi M cust-4 Madhu Delhi M cust-5 Rocky Texas M cust-6 Ching Fu Chicago M cust-7 Sonali Delhi F</li> </ul>"},{"location":"database/self_join/#select-list-of-records-where-sonli-is-living","title":"select list of records where sonli is living","text":"<pre><code>%%sql\nSELECT c2.* from cust_dtls c1, cust_dtls c2\nWHERE c1.cname=\"Sonali\" AND c1.city = c2.city;\n</code></pre> <p>cno cname city gender cust-3 Vinod Delhi M cust-4 Madhu Delhi M cust-7 Sonali Delhi F</p>"},{"location":"database/self_join/#if-we-try-to-get-from-first-table-then-we-get-duplicate-data","title":"if we try to get from first table then we get duplicate data","text":"<p>becouse first alias table match records is always fixed in second alias table match records will be change for each comparison</p> <ul> <li>thats why we always perfored table 2 for self</li> <li>for 2 lias name refering same physical table</li> </ul>"},{"location":"database/self_join/#q4-display-employee-details-who-is-working-like-clark","title":"Q4. Display employee details who is working like 'clark'","text":"<pre><code>SELECT e2.* FROM emp e1, emp e2\nWHERE e1.ename = 'Clark'\nAND\ne1.job = e2.job\n</code></pre> <pre><code>%%sql\nSELECT e2.* FROM emp e1, emp e2\nWHERE e1.ename = 'ford'\nAND\ne1.job = e2.job\n</code></pre> <p>empno ename job mgr hiredate sal comm deptno 7900 ford analyst 7566 03-dec-81 3000.0 None 20 7788 scott analyst 7566 19-apr-87 3000.0 None 20</p> <ul> <li>Alias name maintain a tempory copy of some table.</li> <li>Dont not select data from first table if you Select it will genrate dublicate data it is preferable to get data from second alias only</li> <li>A table is join itself is called <code>SELF JOIN</code></li> </ul>"},{"location":"database/sql%20faq/","title":"SQL FAQ","text":""},{"location":"database/sql%20faq/#1-integrity-constraints","title":"1. Integrity constraints","text":"<p>It can be called as a declarative way in order to define a business rule for a table's cloumn.</p>"},{"location":"database/sql%20faq/#2-index","title":"2. Index","text":"<ul> <li>It can be called as an optional strucure which is associalted with a table for direct access to the rows.</li> <li>Index can be created for one or more columns in table.</li> </ul>"},{"location":"database/sql%20faq/#3-extent","title":"3. Extent","text":"<ul> <li>It can be defined as a specific number of contigous data blocks in single allocation</li> <li>it is used to store a specific type of information</li> </ul>"},{"location":"database/sql%20faq/#4-list-the-type-of-joins-used-in-writing-subqueries","title":"4. List the type of joins used in writing SUBQUeries","text":"<ul> <li>Self Join</li> <li>Outer JOIN</li> <li>equi-join</li> </ul>"},{"location":"database/sql%20faq/#5-list-the-various-oracle-database-objects","title":"5. List the various Oracle database objects","text":"<ul> <li>Table</li> <li>views</li> <li>indexes</li> <li>Synonyms</li> <li>Squences</li> <li>TablesAces</li> </ul>"},{"location":"database/sql%20faq/#6-tell-about-to-use-of","title":"6 Tell about to use of","text":"<ol> <li>Rename</li> <li>Alias</li> </ol> <ul> <li>Rename:</li> <li> <p>It is a permanent name provide to a table or column.</p> </li> <li> <p>Alias:</p> </li> <li>It is tempory name provide to a table or column which get over after the execution of SQL statement</li> </ul>"},{"location":"database/sql%20faq/#7-what-is-view","title":"7. What is View?","text":"<ul> <li>It is virtual table which is defined as a stored procedure based on one or more tables.</li> </ul>"},{"location":"database/sql%20faq/#8-what-are-various-components-of-physical-databases-strucure-of-oracle-database","title":"8. What are various components of physical databases strucure of oracle database","text":"<ul> <li>Oracle database components of three of files</li> </ul> <ol> <li>Data Files</li> <li>Redo logo files</li> <li>control files</li> </ol>"},{"location":"database/sql%20faq/#9-list-out-components-of-logocal-database-strucures-of-oracle-database","title":"9. List out components of logocal database strucures of oracle database","text":"<ul> <li>Table spaces</li> <li>Database is schema object</li> </ul>"},{"location":"database/sql%20faq/#10-what-do-you-mean-by-a-tablespace","title":"10. What do you mean by a tablespace?","text":"<ul> <li>THere are logical storeage units into which a database dicied.</li> <li>It is used to group togather the related logical strucure.</li> </ul>"},{"location":"database/sql%20faq/#11-what-is-a-synonyms-what-are-its-various-types","title":"11. What is a synonyms? What are its various types?","text":"<ul> <li>A Synonym can be called as an alias for a table, view,squence or program unit.it is basically of two types.</li> <li>private: Only the owner can access it.</li> <li>Public: can be accessed by any database user</li> </ul>"},{"location":"database/sql%20faq/#12-what-are-uses-of-synonyms","title":"12. What are uses of synonyms?","text":"<ul> <li>Mask the real name and owner of an object</li> <li>Provide public access to an object</li> <li>provide location transparcing for table view or program unit of a remote database.</li> <li>Siplify the SQL statements for database users</li> </ul>"},{"location":"database/sql%20faq/#13-what-do-you-mean-by-a-deadlock","title":"13. What do you mean by a deadlock?","text":"<ul> <li>When two processes are waiting to update the rows of datable which are locked by another process the sitwation as called deadlock The resion of it to happen are:</li> <li>Lack of proper row lock commands</li> <li>Poor design of frontend application 0 It reduces the performances of the server servely</li> <li>There locks get automatically released automatically when a commit/rollback operation is perform or any process is killed externally</li> </ul>"},{"location":"database/sqlite3/","title":"Sqlite3","text":"<pre><code>import sqlite3\nimport pandas as pd\n\n# Connect to the SQLite database\nconn = sqlite3.connect('DA.db')  # or 'sf-film-locations.db'\ncursor = conn.cursor()\n\n# Read CSV file into a DataFrame\ndf = pd.read_csv('FilmLocations.csv')\n\n# Create table if it doesn't exist\ncursor.execute('''\nCREATE TABLE IF NOT EXISTS FilmLocations (\n    Title TEXT,\n    Locations TEXT,\n    FunFacts INTEGER,\n    ProductionCompany,\n    Distributor,\n    Director,\n    Writer,\n    Actor1,\n    Actor2,\n    Actor3\n)\n''')\n\n# Insert DataFrame into the SQLite table\ndf.to_sql('FilmLocations', conn, if_exists='append', index=False)\n\n# Commit changes and close the connection\nconn.commit()\nconn.close()\n</code></pre> <p><pre><code>import pandas as pd\nimport sqlite3\n\n# Read the CSV file into a DataFrame\ndf = pd.read_csv('FilmLocations.csv')\n\n# Connect to the SQLite database\nconn = sqlite3.connect('DA.db')  # Adjust the database file name as needed\n\n# Insert the DataFrame into the SQLite table\ndf.to_sql('FilmLocations', conn, if_exists='replace', index=False)  # or 'append' if you want to add to an existing table\n\n# Commit changes and close the connection\nconn.commit()\nconn.close()\n</code></pre> %%sql .mode csv</p> <p>%%sql .import FilmLocations.csv FilmLocations</p> <p>%reload_ext sql %sql sqlite:///DA.db</p> <p>%%sql SELECT name FROM sqlite_master WHERE type='table';</p> name Medals Awards FilmLocations"},{"location":"database/subqueries/","title":"subquery","text":""},{"location":"database/subqueries/#if-you-want-to-fetch-multiple-datatypes-of-data-from-multiple-tables-we-can-write-join-queries","title":"if you want to fetch multiple datatypes of data from multiple tables we can write join queries","text":"<ul> <li>unnecessarily don't write any join query it will degrate your database performanceor it will decrease your query level performance</li> <li>thats why we need to write sub queries</li> </ul>"},{"location":"database/subqueries/#in-which-case-we-have-to-write-sub-queries","title":"In which case we have to write sub-queries","text":""},{"location":"database/view/","title":"Views","text":"<p>To maintain information in the form of 2-D (two dimentional) data which is nothing but table.</p>"},{"location":"database/view/#q-why-we-need-view","title":"Q Why we need view?","text":"<ul> <li>View is just like a table</li> <li>View is not maintaing pytysical data but table is maintaing physical data.</li> </ul> <ol> <li>View is database object</li> <li>View contains logical copy of data</li> </ol> <ul> <li>You can create view on the table</li> <li>without table we can create a view but View is not valid that is called force view</li> </ul>"},{"location":"database/view/#what-is-view","title":"What is view ?","text":"<ul> <li>View is DB Object</li> </ul>"},{"location":"database/view/#why-view","title":"Why View","text":"<ul> <li>It contains logical copy of data from table.</li> </ul>"},{"location":"database/view/#what-is-nessesity-to-maintain-a-view","title":"What is nessesity to maintain a view?","text":"<ul> <li>Provide Security</li> <li>Increase DB performance</li> </ul>"},{"location":"database/view/#query-execution-process","title":"Query Execution Process","text":"<p>Whenevery query are submitting  the querry in client tool</p> <ul> <li>client tool: SQL star plus window, any GUI tools</li> <li>GUTI Tools: SQL Developer, Pl SQL Developer for ckient tool it is intracting with oracle engine</li> </ul>"},{"location":"database/view/#oracle-engine","title":"Oracle engine","text":"<ul> <li>SQL Sstatment Execution</li> <li>PL/SQL Engine</li> </ul> <p>pic digramher anothere digram here</p> <p>PL/SQL program is group of statement to perform task, some lines pf programming statement.</p> <ul> <li>SQL queries are submitted to SQL Statment executor</li> <li>Programming statements are submited to PL/SQL engine</li> <li>SQL statement executoe is a component which is compling sql queries</li> <li> <p>PL/SQL engine is a component which is compiling pl programing satatements</p> </li> <li> <p>once compliation over it is communicat with oracle engine</p> </li> <li>oracle engine is communcated with oracle DB</li> <li>From oracle db it will verfy table is there or not.</li> <li> <p>If table existed then it will get the data from actual data and past it to the client system</p> </li> <li> <p>DD: Data Dictionary ( Contain metadata)</p> </li> <li>AD: Actual DAta (Stored in the form of Data blecks)</li> </ul>"},{"location":"database/view/#meta-data","title":"Meta Data","text":"<p>The structures of virtual object tables,squences synonyms, users,procedures packiages triggers alll these object structures mainainted under data dictionary(DD)</p> <p>If we executedthe queries n thime the it will hit n times</p> <ul> <li>eg</li> <li>A group of 100 people executing the same query 100 number of times each</li> <li>100*100 = 10,000 times: it will hit database</li> <li>The number of hits to the database is incresing automatically database performance will be degraded</li> <li>within a short period of time if number of hit or hitting the database there may be many number of hit to db engine the automatically db performanve will be degrade</li> </ul>"},{"location":"database/view/#how-to-reduces-no-of-hit","title":"How to reduces no of hit?","text":"<p>...... continuie next time</p>"},{"location":"database/view/#connect-to-db-as-a-dba","title":"connect to db as a DBA","text":"<p> <code>conn</code></p>"},{"location":"database/view/#take-permisiongrant-permintion","title":"Take permision(Grant permintion)","text":"<p><code>grant create view to dinesh;</code></p> <p></p>"},{"location":"database/view/#connect-to-user","title":"connect to user","text":"<p><code>conn dinesh</code> </p>"},{"location":"database/view/#simple-view","title":"Simple View","text":""},{"location":"database/view/#create-a-view","title":"Create a view","text":"<pre><code>create view vw_salesman\nas\nselect * from emp where job='SALESMAN'\norder by sal;\n</code></pre>"},{"location":"database/view/#_1","title":"View","text":"<ul> <li>before getting permsion from dba we are unable to create view</li> <li>why beacouse we are working database as client</li> <li>client bydeafult having no permision to create view</li> </ul>"},{"location":"database/view/#how-to-select-data-from-view","title":"How to select data from  view?","text":"<p>insted of selecting data from table once you crate a view you can directly select data from the view</p> <ul> <li>all salesman's names and salaries     <code>select ename,sal from vw_salesman;</code> </li> <li>Any new sales man information inserted into table that is reflected into view</li> </ul>"},{"location":"database/view/#decc","title":"decc","text":"<p><code>desc emp</code></p> <p></p>"},{"location":"database/view/#insert-one-record-into-the-table","title":"Insert one record into the table","text":"<ul> <li>Salesman record we are inserting into table EMP</li> <li>if he is salesman then only it will be  revelected to view onther job should not be reflected</li> </ul> <pre><code>insert into emp values\n(1234,'honey','SALESMAN',null,'23-oct-24',2300,100,30);\n</code></pre> <pre><code>select ename,sal,job from emp where job= 'SALESMAN';\n</code></pre> <ul> <li>We didnot make the insert opration on the view</li> <li>we make the operation on table</li> <li>we are getting recored that is reflated into view also  <code>select ename,sal from vw_salesman;</code></li> </ul>"},{"location":"database/view/#update-operation-on-view","title":"update operation on view","text":"<p><code>update vw_salesman set sal = 3200 where ename = 'honey';</code></p> <ul> <li>one row update in the view is it reflected into table ,definatly ipdated</li> <li>if we update table i.e reflated into view</li> <li> </li> </ul> <p></p>"},{"location":"database/view/#if-we-update-view-ie-reflected-into-table","title":"if we update view i.e reflected into table.","text":""},{"location":"database/view/#delete-record-from-view","title":"delete record from view","text":"<p>if i delete a row it reflected in the table. from the tabel also it will be deleted</p> <p></p> <ul> <li>this is the simple view which is also called as updateable view</li> <li>updateable view means on the view you are appling update,delete,insert command as a result table is affected</li> <li>if you did somthing in the table the respected data will be reflected into view also automatically beacuse view maintains dynamic data</li> </ul> <p></p>"},{"location":"database/view/#composit-view","title":"Composit view","text":""},{"location":"database/view/#q-what-is-composite-view-how-can-i-create","title":"Q what is composite view how can i create","text":""},{"location":"deployment/Docker_intro/","title":"Docker for Beginners","text":""},{"location":"deployment/Docker_intro/#containers-and-virtual-machines","title":"Containers and Virtual Machines","text":"<p>Containers and virtual machines are similar in that they allow multiple apps to run on the same</p> <p>Their main difference is in the operating system.</p> <p>While containers uses the host's operating system, each virtual machine has its own guest operating system on top of the host's operating system.</p> <p></p> <p>if you have an application that needs to run on different operating systems, a virtual machine is the way to go.</p> <p>But if that's not a requirement, Docker has multiple advantages over a virtual machine:</p> <ol> <li>Lighter-weight</li> <li>Faster to build</li> <li>Can be easily ported across different platforms</li> <li>Less resource intensive</li> <li>Scaling up and duplicating is easier</li> </ol>"},{"location":"deployment/Docker_intro/#docker","title":"Docker","text":""},{"location":"deployment/Docker_intro/#docker-engine","title":"Docker Engine","text":"<p>When people refer to Docker, they're typically referring to Docker Engine.</p> <p>Docker Engine is the underlying open source containerization technology for building, managing, and running containerized applications</p> <p>It's a client-server application with the following components:</p> <ol> <li>Docker daemon (called dockerd) is a service that runs in the background that listens for Docker Engine API requests and manages Docker objects like images and containers.</li> <li>Docker Engine API is a RESTful API that's used to interact with Docker daemon.</li> <li>Docker client (called docker) is the command line interface used for interacting with Docker daemon. So, when you use a command like docker build, you're using Docker client, which in turn leverages Docker Engine API to communicate with Docker daemon.</li> </ol>"},{"location":"deployment/Docker_intro/#docker-desktop","title":"Docker Desktop","text":"<p>While Docker Engine is included with Docker Desktop, it's important to understand that Docker Desktop is not the same as Docker Engine</p> <p>Docker Desktop is an integrated development environment for Docker containers</p> <p>It makes it much easier to get your operating system configured for working with Docker.</p>"},{"location":"deployment/Docker_intro/#docker-concepts","title":"Docker Concepts","text":"<p>there are three core concepts:</p> <ol> <li> <p>Dockerfile</p> <ul> <li>a text file that serves as a blueprint for your container. In it, you define a list of instructions that Docker uses to build an image.</li> </ul> </li> <li> <p>Image</p> <ul> <li>a read-only embodiment of the Dockerfile. It's built out of layers -- each layer corresponds to a single line of instructions from a Dockerfile.</li> </ul> </li> <li> <p>Container</p> <ul> <li>running a Docker image produces a container, which is a controlled environment for your application. If we draw parallels with object-oriented programming, a container is an instance of a Docker image.</li> </ul> </li> </ol> <p>A Dockerfile is used to create a Docker image, which is then used to create (multiple) Docker containers.</p> <p></p>"},{"location":"deployment/Docker_intro/#dockerfile","title":"Dockerfile","text":"<p>a Dockerfile is a text file that contains instructions for Docker on how to build an image. By default, a Dockerfile has no extension, but you can add one if you need more than one -- e.g., Dockerfile.prod.</p> <p>Here's an example of a very simple Dockerfile:</p> <pre><code>FROM python:3.10-slim-buster\n\nWORKDIR /usr/src/app\n\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\nRUN pip install --upgrade pip\nCOPY ./requirements.txt .\nRUN pip install -r requirements.txt\n\nCOPY . .\n\nCMD uvicorn main:app --reload --host 0.0.0.0 --port 8000\n</code></pre> <p>The majority of the most widely used commands can be seen in the above Dockerfile. Let's look at each of them in detail...</p>"},{"location":"deployment/Docker_intro/#from","title":"FROM","text":"<p>All Dockerfiles include a parent/base image on which the new image will be built. You use the FROM instruction to define the parent image:</p> <pre><code>FROM python:3.10-slim-buster\n</code></pre> <p>Note: A valid Dockerfile always includes a FROM instruction.</p> <p>parent and base image terms are sometimes used interchangeably, there's a difference between them. A parent image has its own parent image. Meanwhile, a base image has no parent; it starts with FROM scratch.</p> <p>Alpine image is a base image and Python:alpine is a parent image (whose parent (base) image is actually the alpine image).</p> <p>It's possible to create a base image on your own, but the probability of you needing your own image is small.</p> <p>You can find parent images on Docker Hub, which is Docker's library/registry for Docker images.</p>"},{"location":"deployment/Docker_intro/#notes-about-python310-slim-buster","title":"Notes about python:3.10-slim-buster","text":"<p>The number tells you which version of the technology the image uses</p> <ul> <li>(e.g., the python:3.11.0a5 image uses Python version 3.11.0a5 while node:18.9.0 uses Node version 18.9.0). You'll probably want to avoid any versions with rc in it (e.g., python:3.11.0rc2) since rc means release candidate.</li> </ul> <p>image uses Python version 3.11.0a5 while node:18.9.0 uses Node version 18.9.0). You'll probably want to avoid any versions with rc in it (e.g., python:3.11.0rc2) since rc means release candidate.</p>"},{"location":"deployment/Docker_intro/#use-small-docker-base-images-for-best-practices-on-which-base-image-to-use","title":"Use Small Docker Base Images for best practices on which base image to use","text":"<p>Smaller Docker images are more modular and secure.</p>"},{"location":"deployment/Docker_intro/#run","title":"RUN","text":"<p>The RUN instruction executes any commands in a new layer on top of the current image and commits the result.</p> <pre><code>RUN mkdir /home/app/web\n\nRUN python manage.py collectstatic --noinput\n</code></pre>"},{"location":"deployment/Docker_intro/#env","title":"ENV","text":"<p>You use the ENV instruction to set an environment variable. This variable will be available in all subsequent instructions.</p> <pre><code>ENV TZ=UTC\n\nENV HOME=/home/app\n</code></pre>"},{"location":"deployment/Docker_intro/#cmd-and-entrypoint","title":"CMD and ENTRYPOINT","text":"<p>Some Docker instructions are so similar it can be hard to understand why both commands are needed. One of those \"couples\" are CMD and ENTRYPOINT.</p> <p>similarities CMD and ENTRYPOINT both specify a command / an executable that will be executed when running a container. Unlike RUN, which executes the command right away (the result is used in the image layer), the CMD/ENTRYPOINT command in the build-up specifies the command that will be used only when the container starts.</p> <p>You can have only one CMD/ENTRYPOINT instruction in a Dockerfile, but it can point to a more complicated executable file.</p>"},{"location":"deployment/Docker_intro/#theres-actually-only-one-difference-between-those-instructions","title":"There's actually only one difference between those instructions","text":"<p>CMD can easily be overridden from Docker CLI.</p> <p>You should use CMD if you want the flexibility to run different executables depending on your needs when starting the container. If you want to clearly communicate that command is not meant to be overridden and prevent accidentally changing it, use ENTRYPOINT.</p> <p>You'll probably use one or the other. If you don't use one, the container will be stopped immediately since there's no reason for it to exist (the exception being if you're also using Docker Compose).</p> <p>You can have only one CMD instruction in a Dockerfile, but it can point to a more complicated executable file. If you have more than one CMD, only the last CMD will take effect. The same goes for the ENTRYPOINT instruction.</p> <p>You may also use both CMD and ENTRYPOINT in the same Dockerfile, in which case CMD serves as the default argument for the ENTRYPOINT.</p> <p>Example of CMD instruction usage:</p> <pre><code>CMD gunicorn core.wsgi:application --bind 0.0.0.0:$PORT\n</code></pre> <p>here's a big chance you'll see the ENTRYPOINT argument as an executable file since commands that should be executed are often more than a one-liner.</p> <pre><code>ENTRYPOINT [\"./entrypoint.sh\"]\n</code></pre> <p>And this is what the entrypoint.sh file might look like:</p> <pre><code>#!/bin/sh\n\npython manage.py migrate\npython manage.py collectstatic --noinput\n</code></pre>"},{"location":"deployment/Docker_intro/#add-and-copy","title":"ADD and COPY","text":"<p>Another pair similar to one another is ADD and COPY.</p> <p>Both instructions copy new files or directories from the path to the filesystem of the image at the path:</p> <pre><code>ADD &lt;src&gt; &lt;dest&gt;\nCOPY &lt;src&gt; &lt;dest&gt;\n</code></pre> <p>ADD can copy from remote file URLs (for example, it allows adding a git repository to an image directly) and directly from a compressed archive (ADD will automatically unpack the contents to the given location).</p> <p>You should prefer COPY over ADD unless you specifically need one of the two additional features of ADD -- i.e., downloading example files or unpacking a compressed file</p> <p>Examples of ADD and COPY instruction usage:</p> <pre><code># copy local files on the host to the destination\nCOPY /source/path  /destination/path\nCOPY ./requirements.txt .\n\n# download external file and copy to the destination\nADD http://external.file/url  /destination/path\nADD --keep-git-dir=true https://github.com/moby/buildkit.git#v0.10.1 /buildkit\n\n# copy and extract local compresses files\nADD source.file.tar.gz /destination/path\n</code></pre>"},{"location":"deployment/Docker_intro/#image","title":"Image","text":"<p>An image might be the most confusing concept of the three. You create a Dockerfile and then use a container, but an image lies between those two.</p> <ul> <li>image is a read-only embodiment of a Dockerfile that's used to create a Docker container.</li> <li>It consists of layers -- each line in a Dockerfile makes one layer.</li> <li>You can't change an image directly; you change it by changing the Dockerfile.</li> <li>You don't directly use an image either; you use a container created from an image.</li> </ul> <p>The most important image-related tasks are:</p> <ol> <li>building images from Dockerfiles</li> <li>listing all the built images</li> <li>removing images</li> </ol>"},{"location":"deployment/Docker_intro/#building","title":"Building","text":"<p>To build an image from a Dockerfile, you use the docker image build command.</p> <p>This command requires one argument: either a path or URL of the context.</p> <p>This image will use the current directory as a context:</p> <pre><code> docker image build .\n</code></pre> <p>There are a number of options you can provide.</p> <p>For example, <code>-f</code> is used to specify a specific Dockerfile when you have multiple Dockerfiles (e.g., Dockerfile.prod) or when the Dockerfile isn't in the current directory (e.g., <code>docker image build . -f docker/Dockerfile.prod</code>).</p> <p>Probably the most important is the -t tag that is used to name/tag an image.</p> <p>When you build an image, it gets assigned an ID. Contrary to what you might expect, the IDs are not unique. If you want to be able to easily reference your image, you should name/tag it. With -t, you can assign a name and a tag to it</p> <p>Here's an example of creating three images: one without the usage of -t, one with a name assigned, and one with a name and a tag assigned.</p> <pre><code>$ docker image build .\n$ docker image build . -t hello_world\n$ docker image build . -t hello_world:67d19c27b60bd782c9d3600ae914604a94bddfd4\n\n$ docker image ls\nREPOSITORY           TAG       IMAGE ID       CREATED          SIZE\nREPOSITORY    TAG                                        IMAGE ID       CREATED          SIZE\nhello_world   67d19c27b60bd782c9d3600ae914604a94bddfd4   e03784993f22   25 minutes ago   181MB\nhello_world   latest                                     e03784993f22   26 minutes ago   181MB\n&lt;none&gt;        &lt;none&gt;                                     7a615d108866   29 minutes ago   181MB\n</code></pre> <p>For the image that was built without a name or tag, you can only reference it via its image ID. Not only is it difficult to remember, but, again, it might not be unique (which is the case above). You should avoid this</p> <p>For the image that only has a name (-t hello_world), the tag is automatically set to latest. You should avoid this as well</p>"},{"location":"deployment/Docker_intro/#listing","title":"Listing","text":"<p>The docker image ls command lists all built images.</p> <p>Example</p> <pre><code>docker image ls\n\nREPOSITORY      TAG       IMAGE ID       CREATED         SIZE\nhello_world     latest    c50405e84d39   9 minutes ago   245MB\n&lt;none&gt;          &lt;none&gt;    2700a62cd8f1   42 hours ago    245MB\nalpine/git      latest    692618a0d74d   2 weeks ago     43.4MB\ntodo_app        test      999740882932   3 weeks ago     1.03GB\n</code></pre>"},{"location":"deployment/Docker_intro/#removing","title":"Removing","text":"<p>There are two use cases for removing images:</p> <ol> <li>You want to remove one or more selected images</li> <li>You want to remove all the unused images (you don't care which images specifically)</li> </ol> <ul> <li>For the first case, you use <code>docker image rm</code></li> <li>for the second, you use <code>docker image prune</code>.</li> </ul>"},{"location":"deployment/Docker_intro/#remove","title":"Remove","text":"<p>docker image rm removes and untags the selected image(s). It requires one argument: The reference to the image(s) you want to remove. You can reference it by name or short/long ID.</p> <p>If you think back to the explanation of image tagging... there can be multiple images with a different name but the same ID. If you try to remove the image by image ID and multiple images with that ID exist, you'll get an image is referenced in multiple repositories error. In that case, you'll have to remove it by referencing it by name. If you wish to remove all images with the same ID, you can use the -f flag</p> <p>Example of unsuccessful and successful image removal:</p> <pre><code>docker image ls\n\nREPOSITORY   TAG       IMAGE ID       CREATED          SIZE\ntest1        latest    4659ba97837b   41 seconds ago   245MB\ntest2        latest    4659ba97837b   41 seconds ago   245MB\ntest         latest    4659ba97837b   41 seconds ago   245MB\n\n\n$ docker rmi 4659ba97837b\n\nError response from daemon: conflict: unable to delete 4659ba97837b (must be forced) - image is referenced in multiple repositories\n\n\n$ docker rmi test2\nUntagged: test2:latest\n\n\n$ docker image ls\n\nREPOSITORY   TAG       IMAGE ID       CREATED         SIZE\ntest1        latest    4659ba97837b   4 minutes ago   245MB\ntest         latest    4659ba97837b   4 minutes ago   245MB\n</code></pre>"},{"location":"deployment/Docker_intro/#prune","title":"Prune","text":"<p>docker image prune removes dangling images.</p> <p>Since <code>prune</code> is a command that can be used for cleaning containers, images, volumes, and networks, this command doesn't have a shorter version. If you use the <code>-a</code> flag, all unused images are removed (i.e.,  <code>docker image prune -a</code>).</p> <ul> <li>A dangling image is an image that is not tagged and is not referenced by any container.</li> <li>An unused image is an image that isn't associated with at least one container</li> </ul> <pre><code>docker image prune\n\nWARNING! This will remove all dangling images.\nAre you sure you want to continue? [y/N]\n\nDeleted Images:\ndeleted: sha256:c9a6625eb29593463ea43aab4053090427bf29cc59bc97917b3298fda6a94e8a\ndeleted: sha256:284f940f39c3ef5be09440e23fdefdb00df0791344db5c340a9d11979a98039e\ndeleted: sha256:1934187bf17ccf4e754842a4ceeacf5c14aaa63ba7a04c0c520f53946426c902\n</code></pre>"},{"location":"deployment/Docker_intro/#container","title":"Container","text":"<p>a container, which is a controlled environment for your application.</p> <p>An image becomes a container when it's run on Docker Engine.</p> <p>The main operations you can do with a container are</p> <ol> <li>running a container</li> <li>listing all the containers</li> <li>stopping a container</li> <li>removing a container</li> </ol>"},{"location":"deployment/Docker_intro/#running","title":"Running","text":"<p>You can either create a new container of an image and run it, or you can start an existing container that was previously stopped.</p>"},{"location":"deployment/Docker_intro/#run_1","title":"Run","text":"<p>The docker container run command actually combines two other commands, docker container create and docker container start.</p> <pre><code>docker container run my_image\n\n# the same as:\n\n$ docker container create my_image\n88ce9c60aeabbb970012b5f8dbae6f34581fa61ec20bd6d87c6831fbb5999263\n$ docker container start 88ce9c60aeabbb970012b5f8dbae6f34581fa61ec20bd6d87c6831fbb5999263\n</code></pre> <p>You need to provide one argument: The image you want to use for the container.</p> <p>When you run the run command, Docker creates a writable container layer over the specified image and then starts it using the specified command (CMD/ENTRYPOINT in the Dockerfile).</p> <p>he most important option is --publish/-p, which is used to publish ports to the outside world. Although it is technically possible to run a container without a port, it's not very useful since the service(s) running inside the container wouldn't be accessible outside the container. You can use --publish/-p for both the create and run commands:</p> <p>Here's an example of how that looks like:</p> <pre><code>docker container run -p 8000:8000 my_image\n</code></pre> <p>You can run your container in detached mode by using --detach/-d, which lets you keep using the terminal.</p> <p>If you run a container in detached mode, Docker will just return the container ID:</p> <pre><code>docker container run -p 8000:8000 -d my_image\n\n0eb20b715f42bc5a053dc7878b3312c761058a25fc1efaffb7920b3b4e48df03\n</code></pre> <p>Your container gets a unique, quirky name by default, but you can assign your own name:</p> <pre><code> docker container run -p 8000:8000 --name my_great_container my_image\n ```\n\n### Start\n\nuse the docker container start command. Since with this command, you're starting an existing container, you have to specify the container instead of an image (as with docker container run).\n\nAnother difference from docker container run is that docker container start by default runs the container in the detached mode. You can attach it using --attach/-a (reverse from docker container run -d).\n\n```yaml\n docker container start -a reverent_sammet\n</code></pre>"},{"location":"deployment/Docker_intro/#listing_1","title":"Listing","text":"<p>You can list all running containers with docker container ls.</p> <pre><code>ocker container ls\n\nCONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS                    NAMES\n0f21395ec96c   9973e9c65229   \"/bin/sh -c 'gunicor\u2026\"   6 minutes ago   Up 6 minutes   0.0.0.0:80-&gt;8000/tcp     shopping\n73bd69d041ae   my_image       \"/bin/sh -c 'uvicorn\u2026\"   2 hours ago     Up 2 hours     0.0.0.0:8000-&gt;8000/tcp   my_great_container\n</code></pre> <p>If you want to also see the stopped containers, you can add the -a flag:</p> <pre><code>docker container ls -a\n\nCONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS                     PORTS                    NAMES\n0f21395ec96c   9973e9c65229   \"/bin/sh -c 'gunicor\u2026\"   About a minute ago   Up About a minute          0.0.0.0:80-&gt;8000/tcp     shopping\n73bd69d041ae   my_image       \"/bin/sh -c 'uvicorn\u2026\"   2 hours ago          Up 2 hours                 0.0.0.0:8000-&gt;8000/tcp   my_great_container\n0eb20b715f42   my_image       \"/bin/sh -c 'uvicorn\u2026\"   2 hours ago          Exited (137) 2 hours ago                            agitated_gagarin\n489a02b8cfac   my_image       \"/bin/sh -c 'uvicorn\u2026\"   2 hours ago          Created   \n</code></pre> <pre><code>CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS                    NAMES\n73bd69d041ae   my_image       \"/bin/sh -c 'uvicorn\u2026\"   2 hours ago     Up 2 hours     0.0.0.0:8000-&gt;8000/tcp   my_great_container\n</code></pre> <ol> <li>CONTAINER ID (73bd69d041ae) and its NAMES (my_great_container) are both unique, so you can use them to access the container.</li> <li>IMAGE (my_image) tells you which image was used to run the container.</li> <li>CREATED is pretty self-explanatory: when the container was created (2 hours ago).</li> <li>We already discussed the need for specifying a command for starting a container... COMMAND tells you which command was used (\"/bin/sh -c 'uvicorn\u2026\").</li> <li>STATUS is useful when you don't know why your container isn't working (Up 2 hours means your container is running, Exited or Created means it's not)</li> </ol> <p>Some of the information is truncated. If you want the untruncated version, add --no-trunc.</p>"},{"location":"deployment/Docker_intro/#stopping","title":"Stopping","text":"<p>To stop a container, use docker container stop. The name or ID of the stopped container is then returned.</p> <pre><code>docker container stop my_great_container\nmy_great_container\n\n$ docker container stop 73bd69d041ae\n73bd69d041ae\n</code></pre> <p>A container can be started again with docker container start.</p>"},{"location":"deployment/Docker_intro/#removing_1","title":"Removing","text":"<p>Similar to images, to remove a container, you can either:</p> <ol> <li>remove one or more selected containers via docker container rm.</li> <li>remove all stopped containers via docker container prune</li> </ol> <p>Example of docker container rm:</p> <pre><code>docker container rm festive_euclid\nfestive_euclid\n</code></pre> <p>Example of docker container prune:</p> <pre><code>docker container prune\n\nWARNING! This will remove all stopped containers.\nAre you sure you want to continue? [y/N] y\nDeleted Containers:\n0f21395ec96c28b443bad8aac40197fe0468d24e0eed49e5f56011de1c81b589\n80c693693f3d99999925eae5f4bbfc03236cde670db509797d83f50e732fcf31\n0eb20b715f42bc5a053dc7878b3312c761058a25fc1efaffb7920b3b4e48df03\n1273cf44c551f8ab9302e6d090e3c4e135ca6f7e1ab3d90a62bcbf5e83ba9342\n</code></pre>"},{"location":"deployment/Docker_intro/#commands","title":"Commands","text":"<p>ommand Alias Usage docker image build docker build Build an image from a Dockerfile docker image ls docker images List images docker image rm docker rmi Remove selected images docker image prune N/A Remove unused images docker container run docker run Create the container and start it docker container start docker start Start an existing container docker container ls docker ps List all containers docker container stop docker stop Stop a container docker container rm docker rm Remove a container docker container prune N/A Remove all stopped containers</p> <p>Using a Dockerfile as a blueprint, you build an image. Images can then be used to build other images and can be found on Docker Hub. Running an image produces a controlled environment for your application, called a container.</p> <p>imortant link</p> <p>https://docs.docker.com/get-started/docker-overview/ https://docs.docker.com/engine/storage/ https://docs.docker.com/compose/ https://docs.docker.com/engine/storage/volumes/ https://docs.docker.com/reference/dockerfile/#dockerignore-file https://docs.docker.com/compose/gettingstarted/</p>"},{"location":"deployment/aws/","title":"AWS","text":"<ul> <li>EC2</li> </ul>"},{"location":"deployment/aws/#ec2","title":"EC2","text":"<ul> <li>elasetic compute cloud</li> <li>help to deploy application (rent us computer)</li> </ul> <ol> <li>create an ec2 instance</li> <li>Connect to ec2 instance</li> <li>docker compand need to run<ul> <li>sudo apt-get update</li> <li>sudo apt-get install -y docker.io</li> <li>sudo systemctl start docker</li> <li>sudo systemctl enable docker</li> <li>sudo usermod -aG docker $USER</li> <li>exit</li> </ul> </li> </ol>"},{"location":"deployment/best-practices/","title":"Dockerfiles","text":"<p>Use Multi-stage Builds</p> <p>Take advantage of multi-stage builds to create leaner, more secure Docker images.</p> <p>Multi-stage Docker builds allow you to break up your Dockerfiles into several stages</p>"},{"location":"deployment/best-practices/#order-dockerfile-commands-appropriately","title":"Order Dockerfile Commands Appropriately","text":"<p>Pay close attention to the order of your Dockerfile commands to leverage layer caching.</p> <ul> <li>Docker caches each step (or layer) in a particular Dockerfile to speed up subsequent builds.</li> <li>When a step changes, the cache will be invalidated not only for that particular step but all succeeding steps.</li> </ul> <p>Example:</p> <pre><code>FROM python:3.12.2-slim\n\nWORKDIR /app\n\nCOPY sample.py .\n\nCOPY requirements.txt .\n\nRUN pip install -r requirements.txt\n</code></pre> <p>In this Dockerfile, we copied over the application code before installing the requirements. Now, each time we change sample.py, the build will reinstall the packages.</p> <p>his is very inefficient, especially when using a Docker container as a development environment. Therefore, it's crucial to keep the files that frequently change towards the end of the Dockerfile.</p> <p>Note</p> <p>You can also help prevent unwanted cache invalidations by using a .dockerignore file to exclude unnecessary files from being added to the Docker build context and the final image</p> <pre><code>FROM python:3.12.2-slim\n\nWORKDIR /app\n\nCOPY requirements.txt .\n\nRUN pip install -r requirements.txt\n\nCOPY sample.py .\n</code></pre> <ol> <li>Always put layers that are likely to change as low as possible in the Dockerfile.</li> <li>Combine RUN apt-get update and RUN apt-get install commands. (This also helps to reduce the image size. We'll touch on this shortly.)</li> <li>If you want to turn off caching for a particular Docker build, add the --no-cache=True flag.</li> </ol>"},{"location":"deployment/best-practices/#use-small-docker-base-images","title":"Use Small Docker Base Images","text":"<p>Smaller Docker images are more modular and secure.</p> <p>Building, pushing, and pulling images is quicker with smaller images.</p> <ul> <li>They also tend to be more secure since they only include the necessary libraries and system dependencies required for running your application.</li> </ul> <pre><code>REPOSITORY   TAG                    IMAGE ID         CREATED          SIZE\npython       3.12.2-bookworm        939b824ad847     40 hours ago     1.02GB\npython       3.12.2-slim            24c52ee82b5c     40 hours ago     130MB\npython       3.12.2-slim-bookworm   24c52ee82b5c     40 hours ago     130MB\npython       3.12.2-alpine          c54b53ca8371     40 hours ago     51.8MB\npython       3.12.2-alpine3.19      c54b53ca8371     40 hours ago     51.8MB\n</code></pre> <p>While the Alpine flavor, based on Alpine Linux, is the smallest, it can often lead to increased build times if you can't find compiled binaries that work with it. As a result, you may end up having to build the binaries yourself, which can increase the image size (depending on the required system-level dependencies) and the build times (due to having to compile from the source).</p> <p>Using Alpine can make Python Docker builds 50\u00d7 slower</p> <p>https://pythonspeed.com/articles/alpine-docker-python/</p> <p>*-slim flavor, especially in development mode, as you're building your application. You want to avoid having to continually update the Dockerfile to install necessary system-level dependencies when you add a new Python package.</p> <p>don't forget to update your base images regularly to improve security and boost performance. When a new version of a base image is released -- e.g., 3.11.8-slim -&gt; 3.12.2-slim -- you should pull the new image and update your running containers to get all the latest security patches.</p>"},{"location":"deployment/best-practices/#minimize-the-number-of-layers","title":"Minimize the Number of Layers","text":"<ul> <li>It's a good idea to combine the RUN, COPY, and ADD commands as much as possible since they create layers.</li> <li>Each layer increases the size of the image since they are cached.</li> <li>as the number of layers increases, the size also increases.</li> </ul> <p>You can test this out with the docker history command:</p> <pre><code>docker images\nREPOSITORY   TAG       IMAGE ID       CREATED          SIZE\ndockerfile   latest    180f98132d02   51 seconds ago   259MB\n\n$ docker history 180f98132d02\n\nIMAGE          CREATED              CREATED BY                                      SIZE      COMMENT\n180f98132d02   58 seconds ago       COPY . . # buildkit                             6.71kB    buildkit.dockerfile.v0\n&lt;missing&gt;      58 seconds ago       RUN /bin/sh -c pip install -r requirements.t\u2026   35.5MB    buildkit.dockerfile.v0\n&lt;missing&gt;      About a minute ago   COPY requirements.txt . # buildkit              58B       buildkit.dockerfile.v0\n&lt;missing&gt;      About a minute ago   WORKDIR /app\n...\n</code></pre> <p>Take note of the sizes. Only the RUN, COPY, and ADD commands add size to the image. You can reduce the image size by combining commands wherever possible. For example:</p> <pre><code>RUN apt-get update\nRUN apt-get install -y netcat\n</code></pre> <p>Can be combined into a single RUN command:</p> <pre><code>RUN apt-get update &amp;&amp; apt-get install -y netcat\n</code></pre> <p>Thus, creating a single layer instead of two, which reduces the size of the final image.</p> <p>In other words, focus more on the previous three practices -- multi-stage builds, order of your Dockerfile commands, and using a small base image -- than trying to optimize every single command.</p> <p>Notes:</p> <ol> <li>RUN, COPY, and ADD each create layers.</li> <li>Each layer contains the differences from the previous layer.</li> <li>Layers increase the size of the final image</li> </ol> <p>Tips:</p> <ol> <li>Combine related commands.</li> <li>Remove unnecessary files in the same RUN step that created them.</li> <li>Minimize the number of times apt-get upgrade is run since it upgrades all packages to the latest version.</li> <li>With multi-stage builds, don't worry too much about overly optimizing the commands in temp stages.</li> </ol> <p>Finally, for readability, it's a good idea to sort multi-line arguments alphanumerically</p> <pre><code>RUN apt-get update &amp;&amp; apt-get install -y \\\n    git \\\n    gcc \\\n    matplotlib \\\n    pillow  \\\n    &amp;&amp; apt-get clean \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n</code></pre> <p>it's crucial to perform clean-up actions within the same RUN instruction to avoid unnecessary bloat in your Docker images</p> <p>This approach ensures that temporary files or cache used during installation are not included in the final image layer, effectively reducing the image size.</p> <p>For example, after installing packages with apt-get, use &amp;&amp; apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/* to remove the package lists and any temporary files created during the installation process, as demonstrated above</p>"},{"location":"deployment/best-practices/#use-unprivileged-containers","title":"Use Unprivileged Containers","text":"<p>Docker runs container processes as root inside of a container. However, this is a bad practice since a process running as root inside the container is running as root in the Docker host.</p> <p>if an attacker gains access to your container, they have access to all the root privileges and can perform several attacks against the Docker host, like-</p> <ol> <li>copying sensitive info from the host's filesystem to the container</li> <li>executing remote commands</li> </ol> <p>To prevent this, make sure to run container processes with a non-root user:</p> <pre><code>RUN addgroup --system app &amp;&amp; adduser --system --group app\n\nUSER app\n</code></pre> <p>You can take it a step further and remove shell access and ensure there's no home directory as well:</p> <pre><code>RUN addgroup --gid 1001 --system app &amp;&amp; \\\n    adduser --no-create-home --shell /bin/false --disabled-password --uid 1001 --system --group app\n\nUSER app\n</code></pre> <p>Verify:</p> <pre><code>docker run -i sample id\n\nuid=1001(app) gid=1001(app) groups=1001(app)\n</code></pre> <p>the Docker daemon and the container itself still run with root privileges. Be sure to review Run the Docker daemon as a non-root user for help with running both the daemon and containers as a non-root user.</p>"},{"location":"deployment/best-practices/#prefer-copy-over-add","title":"Prefer COPY Over ADD","text":"<p>Use COPY unless you're sure you need the additional functionality that comes with ADD.</p>"},{"location":"deployment/best-practices/#whats-the-difference-between-copy-and-add","title":"What's the difference between COPY and ADD?","text":"<p>Both commands allow you to copy files from a specific location into a Docker image:</p> <pre><code>ADD &lt;src&gt; &lt;dest&gt;\nCOPY &lt;src&gt; &lt;dest&gt;\n</code></pre> <p>While they look like they serve the same purpose, ADD has some additional functionality:</p> <ul> <li>COPY is used for copying local files or directories from the Docker host to the image.</li> <li>ADD can be used for the same thing as well as downloading external files. Also, if you use a compressed file (tar, gzip, bzip2, etc.) as the  parameter, ADD will automatically unpack the contents to the given location. <pre><code># copy local files on the host to the destination\nCOPY /source/path  /destination/path\nADD /source/path  /destination/path\n\n# download external file and copy to the destination\nADD http://external.file/url  /destination/path\n\n# copy and extract local compresses files\nADD source.file.tar.gz /destination/path\n</code></pre>"},{"location":"deployment/best-practices/#cache-python-packages-to-the-docker-host","title":"Cache Python Packages to the Docker Host","text":"<p>When a requirements file is changed, the image needs to be rebuilt to install the new packages. The earlier steps will be cached, as mentioned in Minimize the Number of Layers. Downloading all packages while rebuilding the image can cause a lot of network activity and takes a lot of time. Each rebuild takes up the same amount of time for downloading common packages across builds.</p> <p>You can avoid this by mapping the pip cache directory to a directory on the host machine. So for each rebuild, the cached versions persist and can improve the build speed.</p> <p>Add a volume to the docker run as -v $HOME/.cache/pip-docker/:/root/.cache/pip or as a mapping in the Docker Compose file.</p> <p>The directory presented above is only for reference. Make sure you map the cache directory and not the site-packages (where the built packages reside).</p> <p>Moving the cache from the docker image to the host can save you space in the final image.</p> <p>If you're leveraging Docker BuildKit, use BuildKit cache mounts to manage the cache:</p> <pre><code>COPY requirements.txt .\n\nRUN --mount=type=cache,target=/root/.cache/pip \\\n        pip install -r requirements.txt\n</code></pre>"},{"location":"deployment/best-practices/#run-only-one-process-per-container","title":"Run Only One Process Per Container","text":"<p>Why is it recommended to run only one process per container?</p> <p>Let's assume your application stack consists of a two web servers and a database. While you could easily run all three from a single container, you should run each in a separate container to make it easier to reuse and scale each of the individual services.</p> <ol> <li>Scaling - With each service in a separate container, you can scale one of your web servers horizontally as needed to handle more traffic.</li> <li>Reusability - Perhaps you have another service that needs a containerized database. You can simply reuse the same database container without bringing two unnecessary services along with it.</li> <li>Portability and Predictability - It's much easier to make security patches or debug an issue when there's less surface area to work with.</li> </ol>"},{"location":"deployment/best-practices/#prefer-array-over-string-syntax","title":"Prefer Array Over String Syntax","text":"<p>You can write the <code>CMD</code> and <code>ENTRYPOINT</code> commands in your Dockerfiles in both array (exec) or string (shell) formats:</p> <pre><code># array (exec)\nCMD [\"gunicorn\", \"-w\", \"4\", \"-k\", \"uvicorn.workers.UvicornWorker\", \"main:app\"]\n\n# string (shell)\nCMD \"gunicorn -w 4 -k uvicorn.workers.UvicornWorker main:app\"\n</code></pre> <p>Both are correct and achieve nearly the same thing; however, you should use the exec format whenever possible</p> <ul> <li>Make sure you're using the exec form of CMD and ENTRYPOINT in your Dockerfile. For example use [\"program\", \"arg1\", \"arg2\"] not \"program arg1 arg2\". Using the string form causes Docker to run your process using bash, which doesn't handle signals properly.</li> <li>Compose always uses the JSON form, so don't worry if you override the command or entrypoint in your Compose file.</li> </ul> <p>So, since most shells don't process signals to child processes, if you use the shell format, CTRL-C (which generates a SIGTERM) may not stop a child process.</p> <pre><code>FROM ubuntu:24.04\n\n# BAD: shell format\nENTRYPOINT top -d\n\n# GOOD: exec format\nENTRYPOINT [\"top\", \"-d\"]\n</code></pre> <p>Try both of these. Take note that with the shell format flavor, CTRL-C won't kill the process. Instead, you'll see ^C^C^C^C^C^C^C^C^C^C^C.</p> <p>Another caveat is that the shell format carries the PID of the shell, not the process itself.</p> <pre><code># array format\nroot@18d8fd3fd4d2:/app# ps ax\n  PID TTY      STAT   TIME COMMAND\n    1 ?        Ss     0:00 python manage.py runserver 0.0.0.0:8000\n    7 ?        Sl     0:02 /usr/local/bin/python manage.py runserver 0.0.0.0:8000\n   25 pts/0    Ss     0:00 bash\n  356 pts/0    R+     0:00 ps ax\n\n\n# string format\nroot@ede24a5ef536:/app# ps ax\n  PID TTY      STAT   TIME COMMAND\n    1 ?        Ss     0:00 /bin/sh -c python manage.py runserver 0.0.0.0:8000\n    8 ?        S      0:00 python manage.py runserver 0.0.0.0:8000\n    9 ?        Sl     0:01 /usr/local/bin/python manage.py runserver 0.0.0.0:8000\n   13 pts/0    Ss     0:00 bash\n  342 pts/0    R+     0:00 ps ax\n</code></pre>"},{"location":"deployment/best-practices/#understand-the-difference-between-entrypoint-and-cmd","title":"Understand the Difference Between ENTRYPOINT and CMD","text":"<p>Should I use ENTRYPOINT or CMD to run container processes?</p> <p>There are two ways to run commands in a container:</p> <pre><code>CMD [\"gunicorn\", \"config.wsgi\", \"-b\", \"0.0.0.0:8000\"]\n\n# and\n\nENTRYPOINT [\"gunicorn\", \"config.wsgi\", \"-b\", \"0.0.0.0:8000\"]\n</code></pre> <ul> <li> <p>CMD is easily overridden. If you run docker run  uvicorn config.asgi, the above CMD gets replaced by the new arguments -- i.e., uvicorn config.asgi. <li> <p>to override the ENTRYPOINT command, one must specify the --entrypoint option:</p> </li> <pre><code>docker run --entrypoint uvicorn config.asgi &lt;image_name&gt;\n</code></pre> <p>it's recommended to use ENTRYPOINT over CMD to prevent accidentally overriding the command.</p>"},{"location":"deployment/docker_cammand/","title":"DockerFile","text":"<p>Docker makes the process of application deployment very easy and efficient and resolves a lot of issues relatged to deploymeimg apllications.</p> <ul> <li>Docker is world's leading softwarecontainer platform.</li> <li>Docker is a tool designed to make it easier to deploy and run</li> </ul>"},{"location":"deployment/docker_cammand/#applications-by-using-containers","title":"applications by using containers","text":"<ul> <li>Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other depencies, and ship it all out as ope pakage.</li> </ul>"},{"location":"deployment/docker_cammand/#dockerfile_1","title":"Dockerfile","text":"<ul> <li>Describes steps to create a Docker image. It's like a recipe with all ingreients and steps necessary in making your dish.</li> <li>container will have application with all its dependencies.</li> </ul> <p>The daemon (server) receives the commands from the Docker client through CLI or REST API's</p>"},{"location":"deployment/docker_cammand/#build-app-only-once-relise-2013","title":"Build app only once (relise 2013)","text":"<p>An application inside a cotainer can run on any system that has Docker installed.So there is no need to bld a configure app multiple times on different platform.</p>"},{"location":"deployment/docker_cammand/#docker-basic-commands","title":"Docker Basic Commands","text":""},{"location":"deployment/docker_cammand/#basic","title":"Basic","text":"<ul> <li>docker version: information of version of docker client and docker server</li> <li>docker -v: version of docker</li> <li> <p>docker info: detail information of docker (img,cotainer all thing)</p> </li> <li> <p>docker --help</p> </li> <li>docker login</li> </ul>"},{"location":"deployment/docker_cammand/#images","title":"images","text":"<ul> <li>docker images</li> <li>docker pull</li> <li>docker rmi: remove one or more images</li> </ul>"},{"location":"deployment/docker_cammand/#container","title":"container","text":"<ul> <li>docekr ps</li> <li>docker run</li> <li>docker start</li> <li>docker stop</li> </ul>"},{"location":"deployment/docker_cammand/#system","title":"System","text":"<ul> <li>docker stats: check the memory usage</li> <li>docekr system df: check the disk usage</li> <li>docker system prune: docker system</li> </ul> <p>dagling means images which are not associate with running conatiner</p> <ul> <li>A dangling image is one that is not tagged and is not referenced by any container.</li> </ul>"},{"location":"deployment/docker_cammand/#docker-images","title":"docker images","text":"<p>Docker imges are templates used to create Docker container</p> <ul> <li> <p>Container is a runiing instace of images</p> </li> <li> <p>docker images --help</p> </li> <li>docker pull image</li> <li>docker images</li> <li>docker images - q</li> <li>docker images - f \"dangling=false\"</li> <li> <p>docker images - f \"dangling=false\" -q</p> </li> <li> <p>docker run images</p> </li> <li>docker rmi image</li> <li>docker emo -f image</li> <li>docker inspect</li> </ul> <p>image typically contains a unuion of layered files systems stacked on top of each other.</p>"},{"location":"deployment/docker_cammand/#docker-image-with-uvicorn-and-gunicorn-for-fastapi-apps","title":"Docker image with Uvicorn and Gunicorn for FastAPI apps","text":"<p>[uvicorn-gunicorn-fastapi] + (https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker/tree/master/docker-images)</p>"},{"location":"deployment/docker_cammand/#dockerfile-commands","title":"Dockerfile Commands","text":"<ol> <li> <p>docker build -t myimage .    - To Build the Docker Image</p> </li> <li> <p>docker run -d --name mycontainer -p 80:80 myimage    - Start the Docker Container</p> </li> <li> <p>docker images    - List images by name and tag</p> </li> <li> <p>docker load &lt; busybox.tar.gz    - To Load an image from a tar archive or STDIN</p> </li> <li> <p>docker image save -o busybox.tar imageName    - To save an image in .tar format</p> </li> <li> <p>docker rmi -f image name or ID    - To remove docker image forcefully</p> </li> </ol>"},{"location":"deployment/docker_cammand/#docker-compose","title":"docker compose","text":"<pre><code>version: '3'  # This defines the version of the Docker Compose format being used.\n\nservices:     # This section defines the services (containers) that will be created.\n   app:          # The name of the service (in this case, 'app').\n      build:     # Specifies that the service should be built using a Dockerfile.\n         context: .               # The context specifies the build directory (here, the current directory).\n         dockerfile: Dockerfile   # The name of the Dockerfile to be used for building the image.\n      ports:\n         - \"89:89\"  # Maps port 89 of the host to port 89 of the container.\n</code></pre>"},{"location":"deployment/docker_cammand/#commands","title":"Commands","text":""},{"location":"deployment/docker_cammand/#1-if-you-modified-the-docker-compose-configuration-docker-composeyml","title":"1. If you modified the Docker Compose configuration (docker-compose.yml)","text":"<p><code>docker-compose up -d --build</code></p>"},{"location":"deployment/docker_cammand/#2-if-you-only-modified-a-services-code-or-configuration-files-not-the-docker-composeyml","title":"2. If you only modified a service's code or configuration files (not the docker-compose.yml)","text":"<p>You can simply restart the service without rebuilding the image:</p> <p><code>docker-compose restart &lt;service-name&gt;</code></p>"},{"location":"deployment/docker_cammand/#3-if-you-made-code-changes-that-require-rebuilding-the-image","title":"3. If you made code changes that require rebuilding the image","text":"<p>docker-compose build  <p>image name is service name read in docker-compose file</p>"},{"location":"deployment/docker_cammand/#if-you-want-to-rebuild-all-services","title":"If you want to rebuild all services","text":"<p><code>docker-compose build</code></p>"},{"location":"deployment/docker_cammand/#after-rebuilding-restart-the-containers","title":"After rebuilding, restart the containers","text":"<p><code>docker-compose up -d</code></p>"},{"location":"deployment/docker_cammand/#stop-services-only","title":"Stop services only","text":"<p><code>docker-compose stop</code></p>"},{"location":"deployment/docker_cammand/#stop-and-remove-containers-networks","title":"Stop and remove containers, networks","text":"<p><code>docker-compose down</code></p>"},{"location":"deployment/docker_cammand/#down-and-remove-volumes","title":"Down and remove volumes","text":"<p><code>docker-compose down --volumes</code></p>"},{"location":"deployment/docker_cammand/#down-and-remove-images","title":"Down and remove images","text":"<p><code>docker-compose down --rmi &lt;all|local&gt;</code></p> <ol> <li>Check Docker Disk Usage Before taking action, check how much space Docker is actually using by running:</li> </ol> <pre><code>docker system df\n</code></pre> <ol> <li>Remove Unused Containers Stopped containers take up space even if they\u2019re not running. Remove them with:</li> </ol> <pre><code>docker container prune\n</code></pre> <ol> <li>Delete Unused Images Docker images pile up over time. To remove unused images:</li> </ol> <pre><code>docker image prune -a\n</code></pre> <ol> <li>Remove Unused Volumes If volumes are not actively being used, they still consume space. Clean them up with:</li> </ol> <pre><code>If volumes are not actively being used, they still consume space. Clean them up with:\n</code></pre> <ol> <li>Clear Docker Build Cache If you frequently build Docker images, old build caches may be taking up space:</li> </ol> <pre><code>docker builder prune\n</code></pre> <p>\u2705 Monitor Docker Disk Usage Check storage usage once a month with:</p> <pre><code>docker system df\n</code></pre>"},{"location":"deployment/docker_compose_cmd/","title":"Docker compose","text":"<p>repository name must be lowercase</p> <ul> <li>tool for defining and runing multi-container docker applications</li> <li>use yaml files to configure application services (docker-compose.yml)</li> <li>Can start all services with a single command: docker compose up</li> <li>Can stop all serves witha single command: docker compose doun</li> <li>CAN SCALE UP SELECTED SERVICES WHEN REQUIRED</li> </ul>"},{"location":"deployment/docker_compose_cmd/#docker-compose-commands","title":"Docker Compose Commands","text":"<ul> <li>Docker Compose is a tool for defining and running multi-container Docker applications.</li> <li>It uses a YAML file to configure the application's services, networks, and volumes.</li> <li>With a single command, you can create and start all the services from your configuration file.</li> </ul>"},{"location":"deployment/docker_compose_cmd/#how-to-check-docker-compose-version","title":"How to check docker compose version","text":"<ul> <li><code>DOCKER-COMPOSE -v</code></li> <li><code>DOCKER-COMPOSE version</code></li> <li><code>docker-compose -- version</code></li> </ul>"},{"location":"deployment/docker_compose_cmd/#install-on-linux","title":"install on linux","text":"<ul> <li><code>pip install -U docker-compose</code></li> </ul>"},{"location":"deployment/docker_compose_cmd/#how-create-docker-compose-file","title":"How create docker compose file","text":"<p>create file with name of docker-compose.yml</p> <ul> <li><code>docker-compose.yml</code></li> </ul>"},{"location":"deployment/docker_compose_cmd/#to-check-docker-version","title":"To check docker version","text":"<p><code>docker --version</code> <code>docker compose version</code></p>"},{"location":"deployment/docker_compose_cmd/#to-find-the-logs","title":"To find the logs","text":"<p><code>docker compose logs -f</code></p>"},{"location":"deployment/docker_compose_cmd/#basic-commands","title":"Basic Commands","text":"<ol> <li> <p><code>docker compose up</code></p> <p>This command creates and starts containers as defined in the docker-compose.yml file. It can also build images before starting the containers if they do not exist.</p> </li> <li> <p><code>docker compose down</code></p> <p>This command stops and removes containers, networks, and volumes created by docker compose up.</p> </li> <li> <p><code>docker compose build</code></p> <p>This command builds or rebuilds services defined in the docker-compose.yml file.</p> </li> <li> <p><code>docker compose ps</code></p> <p>This command lists all the containers in the current project.</p> </li> <li> <p><code>docker compose logs</code></p> <p>This command displays the logs of the running services.</p> </li> </ol>"},{"location":"deployment/docker_compose_cmd/#advanced-commands","title":"Advanced Commands","text":"<ol> <li> <p><code>docker compose exec</code></p> <p>This command executes a command in a running container.</p> <p><code>docker compose exec &lt;service_name&gt; &lt;command&gt;</code></p> </li> <li> <p><code>docker compose run</code></p> <p>This command runs a one-off command on a service. <code>docker compose run &lt;service_name&gt; &lt;command&gt;</code></p> </li> <li> <p><code>docker compose pull</code></p> <p>This command pulls service images from a registry.</p> </li> <li> <p><code>docker compose push</code></p> <p>This command pushes service images to a registry.</p> </li> <li> <p><code>docker compose restart</code></p> <p>This command restarts service containers.</p> </li> <li> <p><code>Options and Flags</code></p> </li> </ol> <p>-f, --file</p> <p>Specify an alternate compose file.</p> <p><code>docker compose -f &lt;file_path&gt; up</code> -p, --project-name</p> <p>Specify an alternate project name.</p> <p><code>docker compose -p &lt;project_name&gt; up</code> --profile</p> <p>Specify a profile to enable.</p> <p><code>docker compose --profile &lt;profile_name&gt; up</code> --parallel</p> <p>Control the maximum level of parallelism for concurrent engine calls.</p> <p><code>docker compose --parallel &lt;number&gt; up</code> --dry-run</p> <p>Execute the command in dry run mode to see what would happen without making any changes.</p> <p><code>docker compose --dry-run up</code> Docker Compose simplifies the management of multi-container applications, making it easier to develop, test, and deploy applications in various environments.</p> <p>It provides a comprehensive set of commands and options to control the entire lifecycle of your application stack</p> <pre><code>C:\\Users\\Bindra\\Desktop\\TODO\\server&gt;mkdir dockerComposeFile\n\nC:\\Users\\Bindra\\Desktop\\TODO\\server&gt;cd dockerComposeFile\n\nC:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;dir\n Volume in drive C has no label.\n Volume Serial Number is D82A-F854\n\n Directory of C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile\n\n10-10-2024  09:30    &lt;DIR&gt;          .\n10-10-2024  09:30    &lt;DIR&gt;          ..\n               0 File(s)              0 bytes\n               2 Dir(s)   3,132,542,976 bytes free\n\nC:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;echo &gt; docker-compose.yml\n</code></pre>"},{"location":"deployment/docker_compose_cmd/#edit-docker-composeyml","title":"edit docker-compose.yml","text":"<pre><code>services:\n  web: # name of services\n    image: nginx # image\n\n  databse: # other services is db\n    image: redis\n</code></pre>"},{"location":"deployment/docker_compose_cmd/#check-the-validity-of-file-by-command","title":"check the validity of file by command","text":"<p>Also help to check validity and error</p> <ul> <li><code>docker-compose config</code></li> </ul> error<pre><code>C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;docker-compose config\nvalidating C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile\\docker-compose.yml: services.web Additional property images is not allowed\n</code></pre> <pre><code>C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;docker-compose config\nname: dockercomposefile\nservices:\n  database:\n    image: redis\n    networks:\n      default: null\n  web:\n    image: nginx\n    networks:\n      default: null\nnetworks:\n  default:\n    name: dockercomposefile_default\n</code></pre>"},{"location":"deployment/docker_compose_cmd/#start-in-detached-mode","title":"start in detached mode","text":"<ul> <li><code>docker-compose up -d</code></li> </ul> <pre><code>C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;docker-compose up -d\n[+] Running 14/16\n[+] Running 14/16\u28c4\u28ff\u28ff\u28ff\u28ff\u28ff] 20.82MB/43.8MB  Pulling            16.3s\n[+] Running 14/16\u28c4\u28ff\u28ff\u28ff\u28ff\u28ff]  21.7MB/43.8MB  Pulling            16.4s\n[+] Running 14/16\u28c4\u28ff\u28ff\u28ff\u28ff\u28ff]  21.7MB/43.8MB  Pulling            16.5s\n[+] Running 14/16\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff] 22.59MB/43.8MB  Pulling            16.6s\n[+] Running 14/16\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff] 23.47MB/43.8MB  Pulling            16.7s\n[+] Running 14/16\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff] 24.36MB/43.8MB  Pulling            16.8s\n[+] Running 14/16\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff] 24.36MB/43.8MB  Pulling            16.9s\n[+] Running 14/16\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff] 25.24MB/43.8MB  Pulling            17.0s\n[+] Running 14/16\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff] 26.13MB/43.8MB  Pulling            17.1s\n[+] Running 14/16\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff] 27.02MB/43.8MB  Pulling            17.2s\n[+] Running 14/16\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff] 27.02MB/43.8MB  Pulling            17.3s\n[+] Running 14/16\u28e6\u28ff\u28ff\u28ff\u28ff\u28ff]  27.9MB/43.8MB  Pulling            17.4s\n[+] Running 14/16\u28e6\u28ff\u28ff\u28ff\u28ff\u28ff] 28.78MB/43.8MB  Pulling            17.5s\n[+] Running 14/16\u28e6\u28ff\u28ff\u28ff\u28ff\u28ff] 28.78MB/43.8MB  Pulling            17.6s\n[+] Running 14/16\u28e6\u28ff\u28ff\u28ff\u28ff\u28ff] 28.78MB/43.8MB  Pulling            17.7s\n[+] Running 14/16\u28e6\u28ff\u28ff\u28ff\u28ff\u28ff] 29.67MB/43.8MB  Pulling            17.8s\n[+] Running 14/16\u28e6\u28ff\u28ff\u28ff\u28ff\u28ff] 29.67MB/43.8MB  Pulling            17.9s\n[+] Running 14/16\u28e6\u28ff\u28ff\u28ff\u28ff\u28ff] 31.89MB/43.8MB  Pulling            18.0s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff] 33.22MB/43.8MB  Pulling            18.1s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff]  34.1MB/43.8MB  Pulling            18.2s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff]  34.1MB/43.8MB  Pulling            18.3s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff]  34.1MB/43.8MB  Pulling            18.4s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff] 34.99MB/43.8MB  Pulling            18.5s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff] 34.99MB/43.8MB  Pulling            18.6s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff] 35.88MB/43.8MB  Pulling            18.7s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff] 35.88MB/43.8MB  Pulling            18.8s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff]  37.2MB/43.8MB  Pulling            18.9s\n[+] Running 14/16\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff] 38.09MB/43.8MB  Pulling            19.0s\n[+] Running 14/16\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff] 38.97MB/43.8MB  Pulling            19.1s\n[+] Running 14/16\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff] 38.97MB/43.8MB  Pulling            19.2s\n[+] Running 14/16\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff] 39.41MB/43.8MB  Pulling            19.3s\n[+] Running 14/16\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff] 41.19MB/43.8MB  Pulling            19.4s\n[+] Running 16/16\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff] 42.51MB/43.8MB  Pulling            19.5s\n \u2714 web 6 layers [\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff]      0B/0B      Pulled             21.8s\n   \u2714 d07412f52e9d Pull complete                             13.7s\n   \u2714 9ab66c386e9c Pull complete                              7.4s\n   \u2714 4b563e5e980a Pull complete                              8.3s\n   \u2714 55af3c8febf2 Pull complete                              8.7s\n   \u2714 5b8e768fb22d Pull complete                              9.7s\n   \u2714 85177e2c6f39 Pull complete                             10.3s\n \u2714 database 8 layers [\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff]      0B/0B      Pulled      14.1s\n   \u2714 302e3ee49805 Pull complete                              5.4s\n   \u2714 378d889b37dd Pull complete                              0.9s\n   \u2714 e4edbcee329b Pull complete                              0.9s\n   \u2714 c78d46bd3323 Pull complete                              4.0s\n   \u2714 4b3c79aadafc Pull complete                              7.9s\n   \u2714 99f3f5284f55 Pull complete                              5.5s\n   \u2714 4f4fb700ef54 Pull complete                              6.6s\n   \u2714 1f4a511d4985 Pull complete                              7.1s\n[+] Running 2/3\n - Network dockercomposefile_default       Created           3.9s\n \u2714 Container dockercomposefile-database-1  Started           3.8s\n \u2714 Container dockercomposefile-web-1       Started           3.8s\n</code></pre>"},{"location":"deployment/docker_compose_cmd/#docker-ps-command-to-see-the-images","title":"docker <code>ps</code> command to see the images","text":"<ul> <li><code>docker ps</code></li> <li><code>docker-compose ps</code></li> </ul> <pre><code>C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;docker ps\nCONTAINER ID   IMAGE     COMMAND                  CREATED              STATUS              PORTS      NAMES\n9e3adb034705   nginx     \"/docker-entrypoint.\u2026\"   About a minute ago   Up About a minute   80/tcp     dockercomposefile-web-1\n8c8833beddf1   redis     \"docker-entrypoint.s\u2026\"   About a minute ago   Up About a minute   6379/tcp   dockercomposefile-database-1\n</code></pre>"},{"location":"deployment/docker_compose_cmd/#top-everting","title":"top everting","text":"<pre><code>[+] Running 3/3\\Desktop\\TODO\\server\\dockerComposeFile&gt;docker-copos\n \u2714 Container dockercomposefile-web-1       Removed           0.9s\n \u2714 Container dockercomposefile-database-1  Removed           0.6s\n \u2714 Network dockercomposefile_default       Removed           0.2s\noperable program or batch file.\nC:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;\n</code></pre>"},{"location":"deployment/docker_compose_cmd/#exposing-the-port","title":"Exposing the port","text":"<pre><code>  ports:\n   - \"8080:80\"  \n</code></pre> <p>and just check config file and run docker</p> <pre><code>C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;docker-compose config\nname: dockercomposefile\nservices:\n  database:\n    image: redis\n    networks:\n      default: null\n  web:\n    image: nginx\n    networks:\n      default: null\n    ports:\n      - mode: ingress\n        target: 80\n        published: \"8080\"\n        protocol: tcp\nnetworks:\n  default:\n    name: dockercomposefile_default\n[+] Running 2/3\n - Network dockercomposefile_default       Created           1.0s\n \u2714 Container dockercomposefile-web-1       Started           1.0s\n \u2714 Container dockercomposefile-database-1  Started           0.8s\n</code></pre> <p>vist:   http://localhost:8080/ </p>"},{"location":"deployment/docker_compose_cmd/#bring-down-application-by-command","title":"Bring down application by command","text":"<p>docker-compose down</p>"},{"location":"deployment/docker_compose_cmd/#scale","title":"Scale","text":"<ul> <li>Number of container for a scervices</li> <li>Create for instance for database scerices</li> <li><code>docker-compose up -d --scale database=4</code></li> </ul> <pre><code>C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;docker-compose up -d --scale database=4\n[+] Running 5/6\n - Network dockercomposefile_default       Created           2.2s\n \u2714 Container dockercomposefile-web-1       Started           0.9s\n \u2714 Container dockercomposefile-database-1  Started           2.2s\n \u2714 Container dockercomposefile-database-3  Started           1.4s\n \u2714 Container dockercomposefile-database-2  Started           1.8s\n \u2714 Container dockercomposefile-database-4  Started           1.0s\n</code></pre> <pre><code>C:\\Users\\Bindra\\Desktop\\TODO\\server\\dockerComposeFile&gt;docker ps\nCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                  NAMES\n256ba6b16b7d   redis     \"docker-entrypoint.s\u2026\"   47 seconds ago   Up 46 seconds   6379/tcp               dockercomposefile-database-4\n8ffa78b42263   redis     \"docker-entrypoint.s\u2026\"   47 seconds ago   Up 45 seconds   6379/tcp               dockercomposefile-database-3\n9eb956e2becb   redis     \"docker-entrypoint.s\u2026\"   48 seconds ago   Up 45 seconds   6379/tcp               dockercomposefile-database-2\n777b33730b4f   redis     \"docker-entrypoint.s\u2026\"   48 seconds ago   Up 45 seconds   6379/tcp               dockercomposefile-database-1\ncd1861ac5dad   nginx     \"/docker-entrypoint.\u2026\"   48 seconds ago   Up 46 seconds   0.0.0.0:8080-&gt;80/tcp   dockercomposefile-web-1\n</code></pre>"},{"location":"deployment/docker_ml/","title":"Docker","text":""},{"location":"deployment/docker_ml/#what-is-docker","title":"What is docker","text":"<p>Docker is a platform designed to help developers build, share and run container applications.</p>"},{"location":"deployment/docker_ml/#why-do-we-need-dockers","title":"Why do we need dockers?","text":""},{"location":"deployment/docker_ml/#consistency-across-environments","title":"Consistency Across Environments","text":"<ul> <li>Problem: Applications often behave differently in development, testing, and production environments due to variations in configurations, dependencies, and infrastructure.</li> <li>Solution: Docker containers encapsulate all the necessary components, ensuring the application runs consistently across all environments.</li> </ul>"},{"location":"deployment/docker_ml/#isolation","title":"Isolation","text":"<ul> <li>Problem: Running multiple applications on the same host can lead to conflicts, such as dependency clashes or resource contention.</li> <li>Solution: Docker provides isolated environments for each application, preventing interference and ensuring stable performance.</li> </ul>"},{"location":"deployment/docker_ml/#scalability","title":"Scalability","text":"<ul> <li>Problem: Scaling applications to handle increased load can be challenging, requiring manual intervention and configuration.</li> <li>Solution: Docker makes it easy to scale applications horizontally by running multiple container instances, allowing for quick and efficient scaling.</li> </ul>"},{"location":"deployment/docker_ml/#how-exactly-docker-is-used","title":"How exactly Docker is used?","text":""},{"location":"deployment/docker_ml/#docker-engine","title":"Docker Engine","text":"<p>Docker Engine is the core component of the Docker platform, responsible for creating, running, and managing Docker containers. It serves as the runtime that powers Docker's containerization capabilities. Here\u2019s an in-depth look at the Docker Engine:</p> <p></p>"},{"location":"deployment/docker_ml/#components-of-docker-engine","title":"Components of Docker Engine","text":"<ol> <li> <p>Docker Daemon (dockerd):</p> <ul> <li> <p>Function: The Docker daemon is the background service running on the host machine. It manages Docker objects such as images, containers, networks, and volumes.</p> </li> <li> <p>Interaction: It listens for Docker API requests and processes them, handling container lifecycle operations (start, stop, restart, etc.).</p> </li> </ul> </li> <li> <p>Docker CLI (docker):</p> <ul> <li> <p>Function: The Docker Command Line Interface (CLI) is the tool that users interact with to communicate with the Docker daemon.</p> </li> <li> <p>Usage: Users run Docker commands through the CLI to perform tasks like building images, running containers, and managing Docker resources.</p> </li> </ul> </li> <li> <p>REST API:</p> <ul> <li> <p>Function: The Docker REST API allows communication between the Docker CLI and the Docker daemon. It also enables programmatic interaction with Docker.</p> </li> <li> <p>Usage: Developers can use the API to automate Docker operations or integrate Docker functionality into their applications</p> </li> </ul> </li> </ol>"},{"location":"deployment/docker_ml/#docker-image","title":"Docker Image","text":"<p>A Docker image is a lightweight, stand-alone, and executable software package that includes everything needed to run a piece of software, such as the code, runtime, libraries, environment variables, and configuration files. Images are used to create Docker containers, which are instances of these images.</p>"},{"location":"deployment/docker_ml/#components-of-a-docker-image","title":"Components of a Docker Image","text":"<ol> <li> <p>Base Image: The starting point for building an image. It could be a minimal OS image like alpine, a full-fledged OS like ubuntu, or even another application image like python or node.</p> </li> <li> <p>Application Code: The actual code and files necessary for the application to run.</p> </li> <li>Dependencies: Libraries, frameworks, and packages required by the application.</li> <li>Metadata: Information about the image, such as environment variables, labels, and exposed ports.</li> </ol>"},{"location":"deployment/docker_ml/#docker-image-lifecycle","title":"Docker Image Lifecycle","text":"<ol> <li> <p>Creation: Images are created using the docker build command, which processes the instructions in a Dockerfile to create the image layers.</p> </li> <li> <p>Storage: Images are stored locally on the host machine. They can also be pushed to and pulled from Docker registries like Docker Hub, AWS ECR, or Google Container Registry.</p> </li> <li> <p>Distribution: Images can be shared by pushing them to a Docker registry, allowing others to pull and use the same image.</p> </li> <li> <p>Execution: Images are executed by running containers, which are instances of these images.</p> </li> </ol>"},{"location":"deployment/docker_ml/#dockerfile","title":"Dockerfile","text":"<p>A Dockerfile is a text file that contains a series of instructions used to build a Docker image. Each instruction in a Dockerfile creates a layer in the image, allowing for efficient image creation and reuse of layers. Dockerfiles are used to automate the image creation process, ensuring consistency and reproducibility.</p>"},{"location":"deployment/docker_ml/#key-components-of-a-dockerfile","title":"Key Components of a Dockerfile","text":"<ol> <li> <p>Base Image (FROM) - Specifies the starting point for the image, which could be a minimal operating system, a specific version of a language runtime, or another image. Example: FROM ubuntu:20.04</p> </li> <li> <p>Labels (LABEL) - Adds metadata to the image, such as version, description, or maintainer. Example: LABEL version=\"1.0\" description=\"My application\"</p> </li> <li> <p>Run Commands (RUN) - Executes commands in the image during the build process, typically used to install software packages. Example: RUN apt-get update &amp;&amp; apt-get install -y python3</p> </li> <li> <p>Copy Files (COPY)- Copies files or directories from the host system to the image. Example: COPY . /app</p> </li> <li> <p>Environment Variables (ENV) - Sets environment variables in the image. Example: ENV PATH /app/bin:$PATH</p> </li> <li> <p>Work Directory (WORKDIR) - Sets the working directory for subsequent instructions. Example: WORKDIR /app</p> </li> <li> <p>Expose Ports (EXPOSE)- Informs Docker that the container listens on specified network ports. Example: EXPOSE 8080</p> </li> <li> <p>Command (CMD) - Provides a default command to run when the container starts. Example: CMD [\"python\", \"app.py\"]</p> </li> <li> <p>Volume (VOLUME) - Creates a mount point with a specified path and marks it as holding externally mounted volumes from the host or other containers. Example: VOLUME [\"/data\"]</p> </li> <li> <p>Arguments (ARG) - Defines build-time variables. Example: ARG VERSION=1.0</p> </li> </ol>"},{"location":"deployment/docker_ml/#docker-container","title":"Docker Container","text":"<p>A Docker container is a lightweight, portable, and isolated environment that encapsulates an application and its dependencies, allowing it to run consistently across different computing environments. Containers are created from Docker images, which are immutable and contain all the necessary components for the application to run.</p>"},{"location":"deployment/docker_ml/#registry","title":"Registry","text":"<p>A Docker registry is a service that stores and distributes Docker images. It acts as a repository where users can push, pull, and manage Docker images. Docker Hub is the most well-known public registry, but private registries can also be set up to securely store and manage images within an organization.</p> <p>Key Components of a Docker Registry</p> <ol> <li> <p>Repositories: A repository is a collection of related Docker images, typically different versions of the same application. Each repository can hold multiple tags, representing different versions of an image.</p> </li> <li> <p>Tags: Tags are used to version images within a repository. For example, myapp:1.0, myapp:2.0, and myapp:latest are tags for different versions of the myapp image.</p> </li> </ol>"},{"location":"deployment/docker_ml/#types-of-docker-registries","title":"Types of Docker Registries","text":"<ol> <li> <p>Docker Hub:</p> <ul> <li> <p>Description: The default public registry provided by Docker, which hosts a vast number of public images and also supports private repositories.</p> </li> <li> <p>URL: hub.docker.com</p> </li> <li>Use Case: Publicly sharing images and accessing a large collection of pre-built images from the community and official repositories.</li> </ul> </li> <li> <p>Private Registries:</p> <ul> <li>Description: Custom registries set up by organizations to securely store and manage their own Docker images.</li> <li>Use Case: Ensuring security and control over image distribution within an organization.</li> </ul> </li> <li> <p>Third-Party Registries:</p> <ul> <li> <p>Examples: Amazon Elastic Container Registry (ECR), Google Container Registry (GCR), Azure Container Registry (ACR).</p> </li> <li> <p>Use Case: Integrating with cloud platforms for seamless deployment and</p> </li> </ul> </li> </ol>"},{"location":"deployment/docker_ml/#benefits-of-using-docker-registries","title":"Benefits of Using Docker Registries","text":"<ol> <li> <p>Centralized Image Management: Registries provide a centralized location to store and manage Docker images, making it easier to organize and distribute them.</p> </li> <li> <p>Version Control: Using tags, registries allow version control of images, enabling users to easily roll back to previous versions if needed.</p> </li> <li> <p>Collaboration: Public registries like Docker Hub facilitate collaboration by allowing users to share images with the community or within teams.</p> </li> <li> <p>Security: Private registries ensure that sensitive images are stored securely and access is controlled within an organization.</p> </li> <li> <p>Integration with CI/CD: Registries integrate seamlessly with CI/CD pipelines, automating the process of building, storing, and deploying Docker images.</p> </li> </ol>"},{"location":"deployment/docker_ml/#use-cases","title":"Use-cases","text":""},{"location":"deployment/docker_ml/#microservices-architecture","title":"Microservices Architecture","text":"<ul> <li>Description: Microservices break down applications into smaller, independent services, each running in its own container.</li> <li>Benefits: Simplifies deployment, scaling, and maintenance. Each service can be developed, updated, and deployed independently.</li> </ul>"},{"location":"deployment/docker_ml/#continuous-integration-and-continuous-deployment-cicd","title":"Continuous Integration and Continuous Deployment (CI/CD)","text":"<ul> <li>Description: Docker ensures a consistent environment from development through testing to production.</li> <li>Benefits: Streamlines the CI/CD pipeline, reduces discrepancies between environments, and speeds up testing and deployment processes.</li> </ul>"},{"location":"deployment/docker_ml/#cloud-migration","title":"Cloud Migration","text":"<ul> <li>Description: Containerizing applications to move them to the cloud.</li> <li>Benefits: Simplifies the migration process, allows applications to run consistently across different cloud providers, and optimizes resource usage.</li> </ul>"},{"location":"deployment/docker_ml/#scalable-web-applications","title":"Scalable Web Applications","text":"<ul> <li>Description: Deploying web applications in containers for easy scaling.</li> <li>Benefits: Simplifies scaling up or down based on traffic, ensures consistent deployment, and enhances resource utilization.</li> </ul>"},{"location":"deployment/docker_ml/#testing-and-qa","title":"Testing and QA","text":"<ul> <li>Description: Creating consistent environments for testing applications.</li> <li>Benefits: Ensures tests are run in environments identical to production, speeds up the setup of test environments, and facilitates automated testing.</li> </ul>"},{"location":"deployment/docker_ml/#machine-learning-and-ai","title":"Machine Learning and AI","text":"<ul> <li>Description: Deploying machine learning models and AI applications in containers.</li> <li>Benefits: Ensures consistency in the runtime environment, simplifies scaling of model training and inference, and facilitates collaboration and reproducibility.</li> </ul>"},{"location":"deployment/docker_ml/#api-development-and-deployment","title":"API Development and Deployment","text":"<ul> <li>Description: Developing and deploying APIs in containers.</li> <li> <p>Benefits: Ensures APIs run consistently across environments, simplifies scaling, and improves deployment speed and reliability</p> </li> <li> <p>Description: Developing and deploying APIs in containers.</p> </li> <li>Benefits: Ensures APIs run consistently across environments, simplifies scaling, and improves deployment speed and reliability.</li> </ul>"},{"location":"deployment/docker_mongodb/","title":"Docker for MongoDb based application","text":"<pre><code>FROM tiangolo/uvicorn-gunicorn-fastapi:python3.7\n\n\nRUN apt-get update \\\n  &amp;&amp; apt-get -y install gcc \\\n  &amp;&amp; apt-get -y install g++ \\\n  &amp;&amp; apt-get -y install unixodbc unixodbc-dev \\\n  &amp;&amp; apt-get clean\nRUN apt-get install libgl1 -y\n\nRUN pip install --upgrade pip setuptools wheel\nRUN pip install spacy==2.3.7\nRUN python -m spacy download en_core_web_sm\n\nCOPY real.txt real.txt\n# RUN python -m pip install --upgrade pip\nRUN pip install --no-cache-dir -r real.txt\nCOPY ./app .\n</code></pre>"},{"location":"deployment/docker_mongodb/#docker-compose","title":"docker-compose","text":"<pre><code>version: '3.7'\nservices:\n  chatbot:\n    build: .\n    command: \"uvicorn main_api:app --host 0.0.0.0 --port 97\"\n    ports:\n      - \"8000:97\"\n    restart: always\n    environment: # Pass environment variables to the service\n      MONGO_URI: mongodb://root:thisissomethingsecret@mongo:27017/\n      APP_URL: chatbot:97\n\n  mongo:\n    image: mongo\n    restart: always\n    volumes:\n      - ./docker_data:/data/db\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: root\n      MONGO_INITDB_ROOT_PASSWORD: thisissomethingsecret\n\n  mongo-express:\n    image: mongo-express\n    restart: always\n    ports:\n      - 8001:8081\n    environment:\n      ME_CONFIG_MONGODB_ADMINUSERNAME: root\n      ME_CONFIG_MONGODB_ADMINPASSWORD: thisissomethingsecret\n      ME_CONFIG_MONGODB_URL: mongodb://root:thisissomethingsecret@mongo:27017/\n</code></pre>"},{"location":"js/dom/","title":"DOM","text":""},{"location":"js/dom/#dom-document-object-model","title":"DOM (Document Object Model)","text":"<p>By using DOM javascript can communicates with HTML and CSS</p> <ul> <li>document =&gt; Html</li> <li>Object =&gt; javaScript</li> </ul> <p>it is a mediater/broker (interface)</p> <p> <p>dom always b/w html and js and act as intermediate S</p> <p>just type <code>document</code> on console you will get total html page - document - console.dir(document)</p> <p>Document object conatins total hrml of a page</p>"},{"location":"js/dom/#important-dom-attribute","title":"Important DOM attribute","text":"<ul> <li>document.URL</li> <li>document.head</li> <li>document.body</li> <li>document.links</li> </ul>"},{"location":"js/dom/#important-dom-methods","title":"Important DOM Methods","text":"<p>To grap html elemnts into java secipt, we have to use the following methods on DOM</p> <ol> <li>document.getElemntById('special')</li> <li>document.getElementByClassName('first') //array</li> <li>document.getElementByTagName('li')  //array</li> </ol> <p>css selector</p> <ol> <li>document.querySelector('#specila\")</li> <li>document.quertSelectorAll('.first');</li> </ol>"},{"location":"js/dom/#examples","title":"examples","text":"<pre><code>console.log(document.getElementsByTagName('h1'));\nconsole.log(document.getElementsByTagName('p'))\n\nconsole.log(document.getElementById('first'))\nconsole.log(document.getElementsByClassName('special'))\nconsole.log(document.getElementsByClassName('special')[0])\n\nconsole.log(document.querySelector('#first')) \nconsole.log(document.querySelector('.special'))\n\nconsole.log(document.querySelectorAll('.special'))\nconsole.log(document.querySelectorAll('.special')[0])\n\nconsole.log(document.querySelector('h1+p'))  \n// p#first.special\n</code></pre>"},{"location":"js/dom/#example-to-change-the-css","title":"example to change the css","text":"<pre><code>var p1 = document.querySelector('#first')\nvar p4 = document.querySelector('#last')\n\np1.style.color = 'red';\np4.style.color = 'green';\n</code></pre> <pre><code>var h1 = document.querySelector('h1')\nvar p = document.querySelector('p')\nvar h2 = document.querySelector('h2')\nvar ul = document.querySelector('ul')\n\n// console.log(document.querySelector('h1'))\nh1.style.color = \"red\"\nh2.style.color = \"cyan\"\np.style.color = \"orange\"\nul.style.color = \"green\"\n</code></pre>"},{"location":"js/dom/#to-get-random-value","title":"To get random value","text":"<pre><code>Math.floor(Math.random() * 15)\n</code></pre>"},{"location":"js/dom/#program-to-genrate-the-random-color","title":"Program to genrate the random color","text":"<pre><code>function getRandomColor(){\n    var letters = \"0123456789ABCSEDF\";\n    var color = \"#\"\n\n    for (var i = 0; i&lt;6; i++){\n\n        var ch = Math.floor(Math.random() * 16)\n        color = color + letters[ch]\n    }\n    console.log(color)\n}\ngetRandomColor()\n</code></pre>"},{"location":"js/dom/#js-program-to-genrate-random-color-on-html-using-js","title":"JS program to genrate random color on html using js","text":"<pre><code>function getRandomColor(){\n    var letters = \"0123456789ABCSEDF\";\n    var color = \"#\"\n\n    for (var i = 0; i&lt;6; i++){\n\n        var ch = Math.floor(Math.random() * 16)\n        color = color + letters[ch]\n    }\n    return color\n}\n\nvar h1 = document.querySelector('h1')\nvar p = document.querySelector('p')\nvar h2 = document.querySelector('h2')\nvar ul = document.querySelector('ul')\n\nh1.style.color = getRandomColor()\nh2.style.color = getRandomColor()\np.style.color  = getRandomColor()\nul.style.color = getRandomColor()\n</code></pre> <p>Demo program to change the color every seconds <pre><code>function getRandomColor(){\n    var letters = \"0123456789ABCSEDF\";\n    var color = \"#\"\n\n    for (var i = 0; i&lt;6; i++){\n\n        var ch = Math.floor(Math.random() * 16)\n        color = color + letters[ch]\n    }\n    return color\n}\n\nvar h1 = document.querySelector('h1')\nvar p = document.querySelector('p')\nvar h2 = document.querySelector('h2')\nvar ul = document.querySelector('ul')\n\n\nfunction changeColor(){\n\n    h1.style.color = getRandomColor()\n    h2.style.color = getRandomColor()\n    p.style.color  = getRandomColor()\n    ul.style.color = getRandomColor()\n}\n\nsetInterval(changeColor, 1000)\n</code></pre></p>"},{"location":"js/dom/#we-can-setup-click-on-even-t-two-types","title":"we can setup click on even t two types","text":"<ol> <li>addEventListener</li> <li>onclick() - document.getElementById(\"start\").addEventListener(\"click\", changeColor);</li> </ol>"},{"location":"js/dom/#to-grab-html-elements","title":"TO grab html elements","text":"<pre><code>var myh1 = document.querySelector('h1');\n\nconsole.log(myh1.textContent)\n</code></pre> <p>From javaScript by using dom we can change content of html also</p>"},{"location":"js/dom/#to-change-the-content","title":"TO change the content","text":"<pre><code>var myh1 = document.querySelector('h1');\n\nmyh1.textContent = \"Ashish Bindra\"\n</code></pre> <p>we can change innerHTML also</p>"},{"location":"js/dom/#to-change-the-content-of-innerhtml","title":"To change the content of innerHTML","text":"<pre><code>var myh1 = document.querySelector('h1');\n\nmyh1.innerHTML = '&lt;a href = \"https://abc.com\"&gt; abc.com&lt;/a&gt;'\n</code></pre> <p>Assingment: innerText vs textContet</p>"},{"location":"js/dom/#to-get-the-link-and-chage-the-link","title":"To get the link and chage the link","text":"<pre><code>var abc = document.querySelector('a')\nconsole.log(abc.getAttribute('href')) //https://abc.com\n\nabc.setAttribute('href', \"http://test.com\")\nconsole.log(abc.getAttribute('href')) // http://test.com\n</code></pre> <p>For javascript by using dom: 1. We can change content of html also textContent and inner html 2. We can get attribute values and we can chnage attribute values also</p>"},{"location":"js/dom/#assingment-to-change-the-linke-color-and-backgraound-color-of-googlecom-using-console","title":"Assingment to change the linke color and backgraound color of google.com using console","text":"<pre><code>var links = document.querySelectorAll('a')\n\nfor(link of links){\n    link.style.color = 'white'\n    link.style.background = 'Green'\n}\n</code></pre>"},{"location":"js/dom/#event-handling-by-using-dom","title":"Event Handling by using DOM","text":"<ul> <li>event</li> <li>listener</li> </ul>"},{"location":"js/dom/#to-change-background-color-by-clicking-the-button-using-addeventlistener","title":"To change background color by clicking the button using addEventListener","text":"<pre><code>function getRandomColor(){\n    var letters = \"0123456789ABCSEDF\";\n    var color = \"#\"\n\n    for (var i = 0; i&lt;6; i++){\n\n        var ch = Math.floor(Math.random() * 16)\n        color = color + letters[ch]\n    }\n    return color\n}\n\n// var btn = document.querySelector('#background')\nvar btn = document.querySelector('button')\nconsole.log(btn)\n\nbtn.addEventListener('click',chageBgColor);\n\nfunction chageBgColor(){\n    var body = document.querySelector('body')\n    body.style.background = getRandomColor();\n}\n</code></pre> anonymus function used<pre><code>var btn = document.querySelector('button')\nconsole.log(btn)\n\nbtn.addEventListener('click',function (){\n    var body = document.querySelector('body')\n    body.style.background = getRandomColor();\n}\n);\n</code></pre> <p>listenter alway replonsible to listen events - whenever event occures listener is going to certain action atomatically</p>"},{"location":"js/dom/#how-to-implemnt-event-handling","title":"How To implemnt Event Handling","text":"<p>element.addEventListener(event, function)</p> <p>function =&gt; activty </p>"},{"location":"js/dom/#types-of-event","title":"Types of event","text":"<ul> <li>click</li> <li>dblclick</li> <li>mouseover</li> <li>mouseout</li> <li>...</li> </ul>"},{"location":"js/dom/#to-change-color-of-h1-tage-on-single-click-operation","title":"To change color of h1 tage on single click operation:","text":"anonymus function used<pre><code>var btn = document.querySelector('button')\n\nbtn.addEventListener('click',function (){\n    btn.style.color = getRandomColor();\n}\n);\n</code></pre>"},{"location":"js/dom/#dbclick","title":"dbclick","text":"anonymus function used<pre><code>var btn = document.querySelector('button')\n\nbtn.addEventListener('dblclick',function (){\n    btn.style.color = getRandomColor();\n}\n);\n</code></pre>"},{"location":"js/dom/#exersize-like-paperjsorg","title":"Exersize like paperjs.org","text":""},{"location":"js/dom/#mouseover","title":"mouseover","text":"anonymus function used<pre><code>var btn = document.querySelector('button')\n\nbtn.addEventListener('mouseover',function (){\n    btn.style.color = getRandomColor();\n}\n);\n</code></pre>"},{"location":"js/dom/#assingment-to-create-3-button-and-perform-following-opration-on-them","title":"Assingment to create 3 button and perform following opration on them","text":"<ol> <li>on first bution click <ul> <li>Color of lackdround chage</li> </ul> </li> <li>scond buttion click<ul> <li>Coloe of bution change</li> </ul> </li> <li>houver of muse name of bution should chage into random city name  - color of buttion should change  - when you hover out it should back to normal</li> </ol> <pre><code>function getRandomColor(){\n    var letters = \"0123456789ABCSEDF\";\n    var color = \"#\"\n\n    for (var i = 0; i&lt;6; i++){\n\n        var ch = Math.floor(Math.random() * 16)\n        color = color + letters[ch]\n    }\n    return color\n}\n\nfunction  getRandomName(){\n    var names = [\"HYD\", \"BANGALOR\", \"CHENNAI\", \"MUMBAI\", \"PATIALA\", \"LUCKHNOW\", \"PUNE\", \"MOHALI\"]\n\n    var i = Math.floor(Math.random() *(names.length))\n    console.log(names[i])\n    return names[i]\n}\n\n// var btn = document.querySelector('#background')\nvar btn1 = document.querySelector('#b1')\nvar btn2 = document.querySelector('#b2')\nvar btn3 = document.querySelector('#b3')\n\nbtn1.addEventListener('click',function (){\n    var body = document.querySelector('body')\n    body.style.background = getRandomColor();\n}\n);\n\nbtn2.addEventListener('click',function (){\n    btn2.style.background = getRandomColor();\n}\n);\nbtn3.addEventListener('mouseover',function (){\n    btn3.style.color = 'white';\n    btn3.textContent = getRandomName();\n    btn3.style.background = getRandomColor();\n}\n);\nbtn3.addEventListener('mouseout',function (){\n    btn3.style.background = 'red';\n    btn3.style.color = 'white';\n\n    btn3.textContent = \"Hover mee\"\n}\n);\n</code></pre>"},{"location":"js/dom/#program-to-ttt-implementationtic-tac-toe","title":"Program to TTT Implementation(Tic-tac toe):","text":"<p>Assingment can done two way - clicking one <code>x</code> xlixk again <code>O</code> then click again empty - click to <code>x</code> duble click to <code>O</code> write click to earase ```js restart = document.querySelector('#restart') td = document.querySelectorAll('td')</p> <p>console.log(restart) console.log(restart.innerHTML)</p> <p>restart.addEventListener(\"click\",function(){  for(cell of td){     cell.textContent = ''  } });</p> <p>function contentChange(){     if(this.textContent ===''){         this.textContent = 'X'     }     else if (this.textContent == 'X'){         this.textContent = 'O'     }     else{         this.textContent = ''     } }</p> <p>for(cell of td){     cell.addEventListener('click',contentChange) }```</p>"},{"location":"js/durgajs/","title":"JavaScript","text":"<ul> <li>Java Script is Full pledged Programming Language. </li> <li>The main purpose of java script is to add functionality (actions) to the HTML.</li> <li>Usually we can Java Script in the Front-end and we can use Node JS for Back-end.</li> </ul>"},{"location":"js/durgajs/#1-javascript-developers-console","title":"1. JavaScript Developer's Console","text":"<p>We can use this developer's console to test our java script coding snippets.  - This is just for testing purpose only and usaully not recommended for main coding.</p>"},{"location":"js/durgajs/#how-to-launch-javascript-console","title":"How to Launch JavaScript Console:","text":"<ul> <li>Browser =&gt; Right Click =&gt; Inspect =&gt;  Console </li> <li>Short-cut: Ctrl+Shift+j</li> </ul> <p>Note: 1. To clear console we have to use clear() function.  2. ; at end of statement is not mandatory in newer versions.</p>"},{"location":"js/durgajs/#2-the-5-basic-javascript-primitive-data-types","title":"2. The 5 Basic JavaScript Primitive Data Types","text":"<p>Java Script defines the following 5 primitive data types</p> <ol> <li>Numbers</li> <li>string</li> <li>boolean</li> <li>null </li> <li> <p>undefined</p> </li> <li> <p>Numbers: All these are of \"number\" type 10 , -10 , 10.5 -  Java Script never cares whether it is integral or float-point or signed and unsigned. - General Mathematical operators are applicable for numbers</p> <ul> <li>10+20 </li> <li>10-20 </li> <li>10/20 </li> <li>10*20 </li> <li>10%3 </li> <li>10**2</li> </ul> </li> </ol> <p>Note: We can check the type of variable by using typeof keyword typeof x;</p> <ol> <li> <p>string: Any sequence of characters within either single quotes or double quotes is treated as string.</p> <ul> <li>'ashish'</li> <li>\"ashish\"</li> <li>We can apply + operator for Strings also and it acts as concatenation operator.</li> <li>Rule: If both arguments are number type then + operator acts as arithmetic addition operator. </li> <li>If atleast one argument is of string type then + operator acts as concatenation operator.</li> <li>10+20 =&gt;30 </li> <li>'ashish'+10 =&gt; ashish10 </li> <li>'ashish'+true =&gt; ashishtrue</li> <li>We can use esacape characters also in the string.</li> <li>'durga\\nsoft' </li> <li>'durga\\tsoft' </li> <li>'This is \\' symbol' </li> <li>'This is \\\" symbol' </li> <li>'This is \\ symbol'</li> </ul> </li> </ol>"},{"location":"js/durgajs/#q-how-to-find-the-number-of-characters-present-in-the-string","title":"Q. How to find the number of characters present in the string?","text":"<p>We can find by using length variable - Eg:'durgasoft'.length</p>"},{"location":"js/durgajs/#q-how-to-access-characters-of-the-string","title":"Q. How to access characters of the String?","text":"<ul> <li>By using index </li> <li>index of first character is zero<pre><code>'durga'[2] // r \n'durga'[200] // undefined but no error \n'durga'[-1] // undefined\n</code></pre> </li> </ul> <p>Note: If we are trying to access string elements with out of range index or negative index then we will get undefined value and we won't get any Error.</p> <ol> <li>boolean: The only allowed values are: true and false (case sensitive)</li> </ol>"},{"location":"js/durgajs/#javascript-variables","title":"JavaScript Variables","text":"<p>Variables are containers to store values. - Syntax: var variableName=variableValue  - Eg: </p> <pre><code>    var name = \"durga\" \n    var age = 60 \n    var isMarried = false\n</code></pre> <p>Note: JavaScript variables follow CamelCase Convention </p> <pre><code>- studentMobileNumber =&gt; Camel case(Java,JavaScript etc) \n- student_mobile_number =&gt; Snake Case(Python ) \n- student-mobile-number =&gt; Kebab Case(Lisp)\n</code></pre> <p>Based on provided value automatically type will be considered for variables.</p> <pre><code>Eg: var x = 10 \ntypeof x =&gt; number \nx = false typeof x =&gt; boolean\n</code></pre> <p>Hence Java Script is dynamically Typed Programming Language like Python</p> <ol> <li>null and undefined: Variables that are declared but not initialized, are considered as undefined<ul> <li>Eg:  ```js  var x; </li> <li>typeof x // undefined ```</li> <li>null value means nothing. </li> <li>If the value of a variable null means that variable not pointing to any object.</li> <li>var currentplayer = 'durga' </li> <li>currentplayer = null //game over</li> </ul> </li> </ol>"},{"location":"js/durgajs/#methods","title":"methods","text":""},{"location":"js/durgajs/#3-most-commonly-used-functions","title":"3 most commonly used functions:","text":"<ol> <li><code>alert()</code></li> <li><code>prompr()</code></li> <li> <p><code>console.log()</code></p> </li> <li> <p>***alert():** To display alerts to the end user     <pre><code>alert('Hello there')\nalert(100000) \nalert(10.5)\n</code></pre></p> </li> <li>console.log():  To print messages to the developer's console      Eg: console.log('Hello there')      console.log(10*20) </li> </ol> <p>These console message not meant for end user.</p> <ol> <li>prompt():  - To get input from the end user <ul> <li><code>prompt('What is Your Name:')</code></li> </ul> </li> </ol> <ul> <li> <p>Here we are not saving the value for the future purpose. But we can save as follows </p> <ul> <li><code>var name= prompt('What is Your Name:')</code></li> </ul> </li> <li> <p>Based on our requirement we can use this name </p> <ul> <li><code>console.log('Hello '+name+' Good Evening')</code></li> <li><code>alert('Hello '+name+' Good Evening')</code></li> </ul> </li> </ul>"},{"location":"js/durgajs/#how-to-write-javascript-to-a-seperate-file-and-connect-to-html","title":"How to write JavaScript to a seperate File and connect to HTML:","text":"<ul> <li> <p>demo.js:   <code>alert('Hello everyone good evening')</code></p> </li> <li> <p>html: </p> </li> <li>We can link javascript file to html by using the following  </li> <li>We can take this script tag either inside head tag or body tag. If we are taking inside head tag then javascript code will be exeucted before processing body. </li> <li>If we are taking inside body tag then javascript code will be executed as the part of body execution.</li> </ul> <p>we can take this on body as well as head part also</p> <ul> <li>if we take in head part first js will executed after then body will be consider</li> <li>if we take in body then first body will execueted after that js will execute</li> </ul>"},{"location":"js/durgajs/#demo-application-age-and-death-calculator","title":"Demo Application: Age and Death Calculator","text":"<p>demo.js: <pre><code>var name=prompt('Enter Your Name:');\nvar age=prompt('Enter Your Age:'); \n\nagedays = age*365.25 \nremainingdays = (60-age)*365.25; \nalert(\"Hello \"+name+\"...\\nYour Current Age:\"+agedays+\" days\\nYou will be there on the earth only \"+remainingdays+\" days. No one can change including God also\");\n</code></pre></p>"},{"location":"js/durgajs/#operators","title":"Operators:","text":"<ol> <li> <p>Airthmetic: +-/%*</p> </li> <li> <p>comparison: &lt;,&gt;&lt;, &gt;, == !=</p> </li> </ol>"},{"location":"js/durgajs/#difference-between-and","title":"Difference between == and ===:","text":"<ul> <li>In the case of == operator internally type coersion will be performed. Hence if arguments are different types first both arguments will be converted to same type and then comparison will be performed. Hence both arguments need not be same type.     Eg:     10 == \"10\" // true      10 == 10  //true</li> <li>Here only values are important but not types.</li> <li>But in the case === operator, type coersion won't be performed. Hence argument types must be same, otherwise we will get false.<ul> <li>10 === 10 // true </li> <li>10 === \"10\" // false Note: </li> </ul> </li> <li>== =&gt; Normal equality operator where types are not important but values must be same </li> <li>=== =&gt; Strict equality operator where both types and values must be same</li> </ul> <p>It is recommended to use === operator because it is more safer and more specific.</p> <p>== only content will compare but int the case of === equal in addition to content types also be consider thats why === equal is strickt equality</p> <p>10 == \"10\" # true one is number other one is string the answer is true it never going to check type</p> <p>10 === \"10\" # false</p> <p>null == undefined # true Nan ==&gt; 0/0</p>"},{"location":"js/durgajs/#for-any-x-value-including-nan","title":"for any x value including NaN","text":"<p>If the result is undefined then we will get NaN  Eg: 0/0 // NaN</p> <ul> <li>For any x value including NaN the following expressions returns false<ul> <li>x &lt; NaN</li> <li>x &lt;= NaN</li> <li>x &gt;  NaN</li> <li>x &gt;= NaN</li> <li>x == NaN For any x value including NaN the following expression returns true x != NaN always returns false</li> </ul> </li> </ul> <p>x !=  NaN</p> <p>It return true - X &amp;&amp; Y =&gt; If both arguments are true then only result is true. i.e if atleast one argument is false then the result is always false - X || Y =&gt; If atleast one argument is true then the result is true. i.e if both arguments are false then only result is false.</p>"},{"location":"js/durgajs/#logical-operators","title":"Logical operators:","text":"<p>&amp;&amp; ===&gt; AND if both arguments are true ||  ===&gt; OR if ateast one arument is true ! ==&gt; complement</p> <p>true &amp;&amp; false true || false !false</p>"},{"location":"js/durgajs/#in-the-logical-operator","title":"In the logical operator","text":"<ol> <li>0 value is always treated as false</li> <li>non-zero value is always treated as true</li> <li>'' string  treated as false</li> <li>null, undefined, NaN are treated as false only.</li> </ol>"},{"location":"js/durgajs/#condtional-statement-selection","title":"Condtional statement / Selection","text":"<p>if if-else</p> <p>if(b){     action if b is true } else{     action if b is false }</p> <ol> <li>Write a JS code to check whether the given number is even or not.</li> </ol>"},{"location":"js/durgajs/#to-read-number-from-end-user-prompt-is-required","title":"To read number from end user prompt is required","text":"<pre><code>var num = prompt(\"Enter any number to check: \")\nalert(typeof num) // string\nif (num % 2 == 0){\n    alert(\"Given Number is Even!!!\")\n}\nelse{\n    alert(\"Given Number is not Even\")\n}\n</code></pre> Number type<pre><code>var num = Number(prompt(\"Enter any number to check: \"))\n\nalert(typeof num) // Number type\n\nif (num % 2 == 0){\n    alert(\"Given Number is Even!!!\")\n}\nelse{\n    alert(\"Given Number is not Even\")\n}\n</code></pre>"},{"location":"js/durgajs/#read-age-from-the-end-user","title":"Read age from the end user","text":"<p>age &lt; 18 age &gt; 60 <pre><code>var age = Number(prompt(\"Enter Your Age: \"))\n\nif(age &gt; 60){\n    alert(\"Plz wait some more time definetly you will get best match!!! \")\n}\nelse if (age &lt; 18){\n    alert('Ypor age is alredy crossed marriage age...No chance of getting marriage!!!')\n}\nelse{\n    alert(\"Thnaks for registration you will get match details by email!!!\")\n}\n</code></pre></p>"},{"location":"js/durgajs/#iterative-statement-loops","title":"Iterative statement / loops:","text":"<p>If want to execute a group of statemnt for multiple types</p> <p>DRY principle: Font Repeat Yourself</p> <p>console.log(\"Hello\") console.log(\"Hello\") console.log(\"Hello\") console.log(\"Hello\") console.log(\"Hello\") console.log(\"Hello\") console.log(\"Hello\")</p> <p>for(59){     console.log(\"Hello\") } It reducre length of code, and readbilty increase</p>"},{"location":"js/durgajs/#loops-in-js","title":"Loops in js:","text":"<ol> <li>while</li> <li>for </li> <li>for-of</li> <li>for-in</li> <li>for-each</li> </ol>"},{"location":"js/durgajs/#while","title":"while:","text":"<p>As loon as some condition is true keep on executing the code</p> <p>while(condition) {     body }</p> <ol> <li>To print Hello 10 times <pre><code>var count = 1\n\nwhile(count &lt;= 10){\n    console.log(\"Hello \" + count);\n    count++ \n}\n</code></pre></li> <li>To print each charcter present inside a string: <pre><code>var s = prompt(\"Enter some word: \")\nvar i = 0\n\nwhile(i &lt; s.length){\n    console.log(s[i]);\n    i++\n}\n</code></pre></li> </ol>"},{"location":"js/durgajs/#for-loop","title":"for loop","text":"<ol> <li>General for loop</li> <li>forEach() (array)</li> <li>for-of loop (array)</li> <li> <p>for-in loop (object)</p> </li> <li> <p>General for loop</p> </li> </ol> <pre><code>for (var i = 0; i &lt;10; i++){\n    alert(i)\n}\n</code></pre>"},{"location":"js/durgajs/#while-vs-for","title":"while vs for","text":"<ul> <li>If we know number of iteration in advance ==&gt; for loop</li> <li>If we dont know number of iterations in advance and as long as some condition is true then execute loop body....</li> </ul>"},{"location":"js/durgajs/#secreat-agent-application","title":"Secreat Agent Application:","text":"<p>Rules: 1. The first character of the name should be 'd' 2. The last character of FAvourite Actor should be 'r' 3. the lucky number should be 7 4. the length of dish should be &gt;= 6</p> <pre><code>var name = prompt(\"Enter Your Name: \")\nvar actor = prompt(\"Enter Your Favourite Actor:\")\nvar lucky = prompt(\"Enter Your Lucky Number:\")\nvar dish = prompt(\"Enter Your Favorite Dish:\")\n\nvar nameCondition = false\nvar actorCondition = false\nvar luckyCondition = false\nvar dishCondtion = false\n\nif (name[0] =='d'){\n    nameCondition = true;\n}\n\nif(actor[actor.length-1] == 'r'){\n    actorCondition = true;\n}\n\nif(lucky == 7){\n    luckyCondition = true;\n}\n\nif(dish.length &gt;= 6){\n    dishCondtion = true;\n}\n\nalert(\"Hello: \" + name + \"\\n Thanks for providing information\")\n\nif(nameCondition &amp;&amp; actorCondition &amp;&amp; luckyCondition &amp;&amp; dishCondtion){\n    console.log(\"Helllo Secreate Agent .. Next Operation is\");\n    console.log(\"We have to kill atleast 10 sleeping students in the class room b'z these are burden to the country!\");\n}\n</code></pre>"},{"location":"js/durgajs/#function","title":"Function","text":"<p>If code is repetedly required neer recommended to write such type of code we have to write inside a fuction</p>"},{"location":"js/durgajs/#to-delar-a-fuction","title":"to delar a fuction","text":"<pre><code>    function functionName(arguments){\n        body ...\n        retuen value;\n    }\n</code></pre> <ul> <li>types of parater is optional becouse js is dynamic type</li> </ul> <pre><code>function greeting(){\n    console.log(\"Hello Good Evining!!!\");\n}\n\ngreeting()\n</code></pre>"},{"location":"js/durgajs/#functions-with-arguments","title":"functions with arguments","text":"<pre><code>function greeting(name){\n    console.log('Hello ' + name + \" Good Evning\");\n}\n\nvar name = prompt(\"Enter Your Name \")\ngreeting(name)\n</code></pre> <p>if we dont pass name if will show undefined</p> <p>to solve this proble we use default argument <pre><code>function greeting(name=\"Guest\"){\n    console.log('Hello ' + name + \" Good Evning\");\n}\n\nvar name = prompt(\"Enter Your Name \")\ngreeting()\ngreeting(name)\n</code></pre></p>"},{"location":"js/durgajs/#function-with-return-values","title":"Function with return values","text":"<p>it will only return one value </p>"},{"location":"js/durgajs/#write-js-finction-to-take-number-as-argument-and-return-its-square-value","title":"Write js finction to take number as argument and return its square value","text":"<pre><code>function squareIt(number){\n    return number * number;\n}\n\nvar result = squareIt(4)\n\nconsole.log(\"The square of 4 is \" + result);\nconsole.log(\"The square of 5 is \" + squareIt(5));\n</code></pre>"},{"location":"js/durgajs/#string-as-argument-and-return-capitilized-string","title":"String as argument and return Capitilized String","text":"<p>sunny Sunny</p> <pre><code>function captalize(str){\n    return str[0].toUpperCase() + str.slice(1);\n}\n\nconsole.log(captalize(\"ashish\"));\n</code></pre>"},{"location":"js/durgajs/#to-find-factorial-of-given-number","title":"To find factorial of given number","text":""},{"location":"js/durgajs/#to-convert-from-snakecase-to-kebabcase","title":"To convert from SnakeCase to KebabCase","text":"<p>Snake case: total_number =&gt; words seprate with <code>_</code> symbols Kebab case: total-numer =&gt; words seprate with <code>-</code> symbols</p> <pre><code>function snakeToKebob(str){\n    var newStr = str.replace(\"_\", \"-\");\n    return newStr;\n}\n\nconsole.log(snakeToKebob(\"total_number\"))\n</code></pre> <ul> <li>Only first ocurence will be replace</li> </ul> <pre><code>function snakeToKebob(str){\n    var newStr = str.replaceAll(\"_\", \"-\");\n    return newStr;\n}\n\nconsole.log(snakeToKebob(\"total_number_asd\"))\n</code></pre>"},{"location":"js/durgajs/#java-script-scopes","title":"Java Script Scopes:","text":"<ol> <li>Global Scope : The variables which desclar outside of function</li> <li>Local Scope</li> </ol> <p><pre><code>var x = 10 //global\n\nfunction f1(){\n    console.log(x);\n    var y =20; // local variable\n    console.log(y)\n}\nf1()\n</code></pre> <pre><code>var x = 10 //global\n\nfunction f1(){\n    var x =20; // local variable\n    console.log(x) //20\n}\nf1()\n</code></pre></p>"},{"location":"js/durgajs/#higer-order-function-decorator-in-python","title":"Higer Order Function (decorator in python)","text":"<p>A Function can return another function also</p> <p>setInterval(functionName, 3000) // this function will be executed for every 3000 milisec, it will continpous infintly</p> <ul> <li>setInterval() return some value to stop this we pass that value to that function</li> <li>claarInterval(1)</li> </ul> <pre><code>function singASong(){\n    console.log(\"Rangamman...Mangamma...\")\n    console.log(\"Jil..Jil ...Jigel...Rani...\")\n}\nsetInterval(singASong,3000)\n</code></pre>"},{"location":"js/durgajs/#anonymous-function","title":"Anonymous Function:","text":"<p>We can delacrea function without a name, such type of nameless function is called anonymous - Just for one time use - just for instance use</p> <pre><code>setInterval(function() {console.log(\"Anonymous Functions\")}, 2000)\n</code></pre>"},{"location":"js/durgajs/#array-same-as-list-in-python","title":"Array (same as list in python)","text":"<p>An indexed collection of elemnts</p> <p>var n1 = 10; var n2 = 20; var n3 = 30;</p> <p>var numbers = [10,20,30,40]</p>"},{"location":"js/durgajs/#how-to-access-array-elements","title":"How to access array elements","text":"<p>index =&gt; acces by using index numbers[1]</p>"},{"location":"js/durgajs/#how-to-update-array-elemnts","title":"How to update array elemnts:","text":"<p>numbers[2] = 22;</p>"},{"location":"js/durgajs/#is-it-possible-to-add-new-elements","title":"Is it possible to add new elements","text":"<p>No, </p>"},{"location":"js/durgajs/#adding-new-elemnt-to-the-array","title":"Adding new elemnt to the array","text":"<p>numbers[4] = 50</p> <p>Is it valid or Is it Invalid ? 100% this one is</p> <p>retrieve update add</p> <pre><code>var friends = [\"ashish\", \"sunny\", \"bunny\", \"chinny\"];\n\nconsole.log(friends)\n\nfriends[4] = \"katrina\"\nfriends[20] = \"kreena\" \n\nconsole.log(friends) // (21)\u00a0['ashish', 'sunny', 'bunny', 'chinny', 'katrina', empty \u00d7 15, 'kreena']\n</code></pre>"},{"location":"js/durgajs/#create-empty-array","title":"create empty array","text":"<ol> <li>var nums = []</li> <li>var numbers = new Array();</li> </ol>"},{"location":"js/durgajs/#how-to-find-length-of-an-array","title":"How to find length of an array","text":"<p>legth varable</p> <p>nums.length friends.length</p>"},{"location":"js/durgajs/#is-allow-to-hetrogenous-element","title":"is allow to hetrogenous element","text":"<p>yes, </p> <pre><code>var random_collection = [\"as\", 12, true, null];\n</code></pre>"},{"location":"js/durgajs/#important-methods-related-to-javascript-arrays","title":"Important methods related to JavaScript arrays:","text":"<ol> <li>push()</li> <li>pop()</li> <li>unshift()</li> <li>shift()</li> <li>indexOf()</li> <li>slice()</li> <li>splice()</li> </ol>"},{"location":"js/durgajs/#1-push","title":"1. push()","text":"<p>To add an element at last postion</p> <pre><code>var numbers = [10,20,30,40]\n\nconsole.log(numbers) // (4)\u00a0[10, 20, 30, 40]\n\nnumbers.push(50)\nconsole.log(numbers) //(5)\u00a0[10, 20, 30, 40, 50]\n</code></pre>"},{"location":"js/durgajs/#2-pop","title":"2. pop()","text":"<p>To remove and return last element <pre><code>console.log(numbers) // (4)\u00a0[10, 20, 30, 40]\nconsole.log(numbers.pop()) // 40\n</code></pre></p>"},{"location":"js/durgajs/#3-unshift","title":"3. unshift()","text":"<p>Is like pus() except that it will add in first place <pre><code>numbers.unshift(777)\nconsole.log(numbers) // (4)\u00a0[777, 10, 20, 30]\n</code></pre></p>"},{"location":"js/durgajs/#4-shift","title":"4. shift()","text":"<p>is like pop()</p> <pre><code>numbers.shift()\nconsole.log(numbers)  // (3)\u00a0[10, 20, 30]\n</code></pre>"},{"location":"js/durgajs/#5-indexof","title":"5. indexOf()","text":"<p>return first orccurence, if specifed elemnt not avaliable then return -1 <code>console.log(numbers.indexOf(10))</code></p>"},{"location":"js/durgajs/#6-slice","title":"6. slice()","text":"<p>returns from begin index to end-1  index <code>console.log(numbers.slice(2,5))</code></p> <p>for clone purpose  <code>numbers.slice()</code></p>"},{"location":"js/durgajs/#7-splice","title":"7. splice()","text":"<p>Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements. <pre><code>arr = [1,2,3,4,5]\narr.splice(0,2) // [3, 4, 5]\n</code></pre></p>"},{"location":"js/durgajs/#nested-array","title":"Nested Array","text":"<p>array of array concept (zagged array)</p> <pre><code>var nums = [\n    [10,20,30], \n    [40,50,60],\n    [70,80,90]\n]\n\nconsole.log(nums[0][0])\nconsole.log(nums[0][1])\nconsole.log(nums[1][0])\n</code></pre> program to add list of books collection<pre><code>var books = []\nvar input = prompt(\"WHich operation you want to perform [add | view | exit]:\")\n\nwhile(input != \"exit\"){\n    if(input == \"add\"){\n        var newBook = prompt(\"Enter Name of the Book to add:\");\n        books.push(newBook);\n    }\n    else if (input == \"view\"){\n        console.log(\"List of Avaliable Book\")\n        console.log(books)\n    }\n    else{\n        console.log(\"Choose valid Operation\");\n\n    }\n    input = prompt(\"Which operation You want to perform [add | view | exit]:\")\n}\nconsole.log(\"Thanks for using our application\")\n</code></pre> while<pre><code>var numbers = [10, 20, 30, 40, 50]\nvar i = 0\n\nwhile(i &lt; numbers.length){\n    console.log(numbers[i]);\n    i++;\n}\n</code></pre> for<pre><code>var numbers = [10, 20, 30, 40, 50]\n\nfor(var i = 0; i &lt; numbers.length; i++){\n    alert(numbers[i])\n} \n</code></pre>"},{"location":"js/durgajs/#for-of","title":"for of","text":"for of<pre><code>var numbers = [10, 20, 30, 40, 50]\n\nfor (x of numbers){\n    alert(x);\n}\n</code></pre>"},{"location":"js/durgajs/#foreach-method","title":"forEach() method:","text":"<p>arratobject.forEach(function)</p> <p>for each element present in array apply specified function <pre><code>var numbers = [10, 20, 30, 40, 50]\n\nnumbers.forEach(function (x) {alert(x);})\n</code></pre></p> <pre><code>var heroines = [\"sunny\", \"malika\", \"veena\", \"kartrina\", \"karena\"]\nheroines.forEach(alert);\n</code></pre>"},{"location":"js/durgajs/#how-to-delete-array-elements-based-on-index","title":"How to delete array elements based on index:","text":"<ul> <li>pop(), shift(), slice()</li> </ul> <p><code>heroines.slice(3,6)</code></p> <ul> <li>array is mutable</li> <li>string is immutable</li> <li>Once we create string object we cannot perform any changes to that object.</li> <li> <p>If we are trying to perform any chages then with those changes a new object will ber created.</p> </li> <li> <p>array mutable eg <pre><code>var heroines = [\"sunny\", \"malika\", \"veena\", \"kartrina\", \"karena\"]\n\nheroines[0] = \"money\"\nconsole.log(heroines) // // var heroines = [\"sunny\", \"malika\", \"veena\", \"kartrina\", \"karena\"]\n</code></pre></p> </li> <li>string immutable eg <pre><code>var name = \"Sunny\"\n\nname[0] = 'B'\nconsole.log(name) // Sunny\n</code></pre></li> </ul>"},{"location":"js/durgajs/#q1-write-a-js-function-to-take-an-array-as-argument-and-print-its-elements-in-reverse-order","title":"Q1. Write a JS function to take an array as argument and print its elements in reverse order","text":"<pre><code>nums = [1,2,3,4,5]\n\nfunction rev(arr){\n    return arr.reverse();\n}\nconsole.log(rev(nums))\n</code></pre>"},{"location":"js/durgajs/#q2-write-a-js-function-to-take-an-array-as-argument-and-check-wheather-all-elements-are-identical-or-not-same-or-not","title":"Q2. Write a JS function to take an array as argument and check wheather all elements are identical or not (same or not)","text":"<pre><code>nums = [1,1,1,1,1]\n\nfunction iden(arr){\n    var i = arr[0];\n    for(v of arr){\n        if(i!=v){\n            console.log(\"Not identical\");\n            return false\n        }\n    }\n    return true\n}\nconsole.log(iden(nums))\n</code></pre>"},{"location":"js/durgajs/#q3-maximum-value-of-given-array","title":"Q3. Maximum value of given array?","text":"<pre><code>nums = [1,2,3,4,5]\nfunction max(arr){\n    max = arr[0];\n    for(v of arr){\n        if(max&lt;v){\n            max = v;\n        }\n    }\n    return max\n}\nconsole.log(max(nums))\n</code></pre>"},{"location":"js/durgajs/#q4-sum-of-elements-present-in-the-given-array","title":"Q4. Sum of elements present in the given array?","text":"<pre><code>nums = [1,2,3,4,5]\n\nfunction sumarr(arr){\n    var n = 0\n    for(v of arr){\n        n+=v;\n    }\n    console.log(n)\n}\nsumarr(nums)\n</code></pre>"},{"location":"js/durgajs/#book-management-application","title":"Book Management Application:","text":"<p>add, list, exit, delete</p> <pre><code>var books = []\nvar input = prompt(\"Which operation you want to perform [add | view | delete | exit]:\")\n\nwhile(input != \"exit\"){\n    if(input == \"add\"){\n        addBook();\n    }\n    else if(input == \"view\"){\n        viewBook();\n    }\n    else if(input == \"delete\"){\n        deleteBook();\n    }\n    else{\n        console.log(\"Please choose valid option\");\n    }\n    input = prompt(\"Which operation you want to perform [add | view | delete | exit]:\")\n}\nconsole.log(\"Thanks for using our application!!\")\n\nfunction addBook(){\n    var newBook = prompt(\"Enter Book name to add:\")\n    books.push(newBook)\n}\n\nfunction viewBook(){\n    console.log(\"List of avaliable Boos:\")\n    for(book of books){\n        console.log(book);\n    }\n}\n\nfunction deleteBook(){\n    var name = prompt(\"Enter Name oof the book to delete:\")\n    var index = books.indexOf(name)\n\n    if (index ==-1){\n        console.log(\"Specified book not Avaliable\") \n    }else{\n        books.splice(index,1)\n        console.log(\"specified Book Deleted\");\n    }\n}\n</code></pre>"},{"location":"js/durgajs/#object-mapdict","title":"object // (map,dict)","text":"<p>want to repres jey-value pairs </p> <p>var variablename = {key1: value1......} <pre><code>var movie = {\n    name: \"Bahubali\",\n    year: 2016,\n    hero: \"Prabhas\"\n}\n</code></pre></p>"},{"location":"js/durgajs/#how-to-access-values-from-the-object","title":"How to access values from the object","text":"<p>Order is not applivcable and hence index not applicable.</p> <pre><code>var movie = {\n    name: \"Bahubali\",\n    year: 2016,\n    hero: \"Prabhas\"\n}\n\nconsole.log(movie.name);\nconsole.log(movie[\"hero\"]);\n</code></pre>"},{"location":"js/durgajs/#how-to-create-an-insilize-empty-object","title":"How to create an insilize empty object","text":"<p>var nums = {}</p> <p>var nums = new Object()</p> <p>nums[\"fno] = 100</p> <p>nums.sno = 200</p>"},{"location":"js/durgajs/#iterating-objects","title":"Iterating Objects:","text":"<p>Recommended to use for-in loop ; =&gt; in newer version it is optional</p> <pre><code>var nums = {fno: 100, sno: 200, tno: 300}\n\nfor(key in nums){   \n    // console.log(key)\n    // console.log(nums[key])\n    console.log(key + \": \"+ nums[key]) // recomended\n    // console.log(key + \": \"+ nums.key) Not working\n}\n</code></pre>"},{"location":"js/durgajs/#arrays-vs-objects","title":"Arrays vs Objects","text":"<p>array: 1. individual object 2. order will be maintained 3. By using index we can access and update data</p> <p>Objects: 1. ket-value pairs 2. order wont maintained 3. By using key </p>"},{"location":"js/durgajs/#nesting-of-arrays-and-objects","title":"Nesting of Arrays and Objects","text":""},{"location":"js/durgajs/#arrays-of-ojects","title":"arrays of ojects:","text":"<p>var moviews = [ { name:\"b\", yeay:1111,hero:\"pra},                 { name:\"b\", yeay:1111,hero:\"pra},                 { name:\"b\", yeay:1111,hero:\"pra}] <pre><code>var movies = [\n    {name: \"Sanju\", year: 2016, hero: \"Prabhas\"},\n    {name: \"Bahubali\", year: 2018, hero: \"Ranbir\"},\n    {name: \"spider\", year: 2017, hero: \"Mahes\"},\n]\nconsole.log(movies)\nconsole.log(movies[1])\nconsole.log(movies[0][\"hero\"])\n</code></pre></p>"},{"location":"js/durgajs/#ojects-of-arrays","title":"ojects of arrays","text":"<p>var numbergroups = {     fg: [10, 20,30],     sg: [1,2,3],     tg: [22,33,44], }</p>"},{"location":"js/durgajs/#object-methods","title":"Object Methods:","text":"<p>method as a member javaScript objects can conatin methods also</p> <pre><code>var myobj = {\n    a: \"apple\",\n    b: \"banana\",\n    m1: function(){console.log(\"Object Method\");}\n}\n\nmyobj.m1()\n</code></pre>"},{"location":"js/durgajs/#this-keyword","title":"this keyword","text":"<p><code>this</code> =&gt; current object</p> <pre><code>var movie = {\n    name: \"Bahubali\",\n    year: 2016,\n    hero: \"Prabhas\",\n\n    getInfo: function(){\n        console.log(\"Moview Name: \" + this.name);\n        console.log(\"Released Year: \" + this.year);\n        console.log(\"Hero Name: \" + this.hero);\n    }\n}\n\nmovie.getInfo()\n</code></pre>"},{"location":"js/durgajs/#it-is-possible-to-refer-already-existing-function-as-object-method","title":"It is possible to refer already existing function as object method.","text":"<pre><code>function demo(){\n    console.log(\"Name of fun is \" + this.name)\n}\n\nvar movie = {\n    name: \"Bahubali\",\n    year: 2016,\n    hero: \"Prabhas\",\n\n    getInfo: demo\n}\nmovie.getInfo()\n</code></pre>"},{"location":"js/durgajs/#mini-pro","title":"mini - pro","text":"<ul> <li>I watched Bahubali and Moview is Hit!!!</li> <li>I have not seen Sanju but Movie is Hit!!!</li> <li>I watched Spider and Moview is Flop!!!</li> </ul> <p>name iswatched isHit</p> <pre><code>var movies = [\n    {name: \"Bahubali\", isWatched: \"true\", isHit: \"true\"},\n    {name: \"Sanju\", isWatched: \"flase\", isHit: \"true\"},\n    {name: \"Spider\", isWatched: \"true\", isHit: \"false\"},\n]\n\nmovies.forEach(function(movie){\n    var result = \"\"\n\n    if(movie.isWatched == 'true'){\n        result = result + \"I watched \";\n    }\n    else{\n        result = result + \"I have not seen \";\n    }\n\n    result = result + movie.name\n\n    if(movie.isHit == 'true'){\n        result = result + \" and Movie is Hit!!!\"\n    }else{\n        result = result + \" and Movie is Flop!!!\"\n    }\n    console.log(result);\n});\n</code></pre>"},{"location":"js/jQuery/","title":"JQuery","text":""},{"location":"js/jQuery/#jquery","title":"jQuery","text":"<p>Plain javascript (Vanilla JS), we required to write everything on our own jQuery is js libray</p>"},{"location":"js/jQuery/#vanililla-js-code","title":"Vanililla JS Code:","text":"<p>var myh1 = document.querySelectorAll('h1');</p> <p>for(h1 of myh1){     h1.style.color = 'red'; }</p>"},{"location":"js/jQuery/#jquery_1","title":"jQuery:","text":"<p>$('h1').css('color','red')</p> <ul> <li>Jquery is a JS libray</li> <li> <p>It contain serval functions and objects to select/grab html element and to mainipulate styles very easily.</p> </li> <li> <p>AJAX, Animations</p> </li> <li>Browser compatibility</li> </ul>"},{"location":"js/jQuery/#advantages","title":"Advantages:","text":"<ul> <li>Rich Library ... less code and do more</li> <li>readability</li> <li>clear and shorter code</li> <li>Ease of use</li> <li>AJAX support</li> <li>Cross Browser support</li> </ul>"},{"location":"js/jQuery/#limitation","title":"Limitation *","text":"<p>*** Youmightnotneedjquery.com***</p> <ol> <li>Whatever jquery is doing....js can do</li> <li>Performance effect</li> <li>just to use $() 10K line code need to load</li> </ol>"},{"location":"js/jQuery/#how-to-connect-with-jquery","title":"How to connect with JQuery:","text":"<ol> <li>By locally</li> <li>By CDN - minified : for production<ul> <li>no comment no spaces   </li> <li>uncompressed: for developer</li> </ul> </li> </ol> <p>Element Selector id selector class selector * selector descendent selector adjucent selector attribute selector nth-of-type</p> <p>h1:nth-of-type(odd){}</p>"},{"location":"js/jQuery/#manipulate-html-elements","title":"Manipulate HTML Elements:","text":"<p>$() ===&gt; To select/Grab html element css() ==&gt; To manipulate elements</p> <pre><code>$('li')\n$('li:nth-of-type(2)').css('background', 'pink')\n$('li:nth-of-type(odd)').css('background', 'red')\n\n$('li:first')\n$('li:first-od-type')\n$('li':nth-of-type(1))\n$('li').first()\n\n\n$('li').last()\n</code></pre> <p>Q1. Write Vanilla Js and jQuery code to change all h1 tags text color as awhite and backgraound as red? <pre><code>var allh1 = document.querySelectorAll('h1`)\n\nfor(h1 of allh1s){\n    h1.style.color = \"white\"\n}\n\n$('h1').css({color: \"white', background: 'red'}); \n</code></pre> Q2. Write VJS and jQuery cod to set all li tags font size as 20px</p> <pre><code>var all = document.querySelectorAll('li')\n\nfor(li of all){\n    li.style.fontSize = '20px';\n}\n\n$('li').css('fontSize', '20px')\n</code></pre> <ol> <li>Select all paragraph tags and set background as green <pre><code> $('p').css('background', 'green')\n</code></pre></li> <li> <p>Select all paragraph tags with class 'remaining' and make them 200px width <pre><code>$('.remaining').css('width', '200px')\n</code></pre></p> </li> <li> <p>Select all paragrap</p> </li> <li>Select only 3rd p tag and change fontsize as 30px <pre><code>$('p:nth-of-type(3)').css('fontSize', '30px')\n</code></pre></li> </ol>"},{"location":"tools/poetry/","title":"Poetry","text":""},{"location":"tools/poetry/#basic-of-poetry","title":"Basic of poetry","text":"<ul> <li>Since PEP 518  the pyprojec5.toml diles has been introduced.</li> </ul>"},{"location":"tools/poetry/#install-poetry","title":"Install poetry","text":"<p>It not worked in my case.</p> <pre><code>pip install poetry\n</code></pre> <p>Windows (Powershell)</p> <pre><code>(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -\n</code></pre> <p>Add Poetry to your PATH</p> <p>The installer creates a poetry wrapper in a well-known, platform-specific directory:</p> <pre><code>$HOME/.local/bin on Unix.\n%APPDATA%\\Python\\Scripts on Windows.\n$POETRY_HOME/bin if $POETRY_HOME is set.\nIf this directory is not present in your $PATH, you can add it in order to invoke Poetry as poetry.\n\nAlternatively, the full path to the poetry binary can always be used:\n\n~/Library/Application Support/pypoetry/venv/bin/poetry on macOS.\n~/.local/share/pypoetry/venv/bin/poetry on Linux/Unix.\n%APPDATA%\\pypoetry\\venv\\Scripts\\poetry on Windows.\n$POETRY_HOME/venv/bin/poetry if $POETRY_HOME is set.\n</code></pre> <p>check the version</p> <pre><code>poetry --version\n</code></pre>"},{"location":"tools/poetry/#to-insilize-the-pytoml-file","title":"To insilize the py.toml file","text":"<pre><code>poetry init\n</code></pre> <p>This command will guide you through creating your pyproject.toml config.</p> <p>Package name [new folder]:  dir Version [0.1.0]: Description []:  a perfect project Author [ashish ashishbindra2@gmail.com, n to skip]:  ashish License []:  MIT Compatible Python versions [&gt;=3.13]:  3.11</p>"},{"location":"tools/poetry/#example-of-pyprojecttoml-file","title":"example of pyproject.toml file","text":"<pre><code>[project]\nname = \"project name\"\nversion = \"0.1.0\"\ndescription = \"a perfect project\"\nauthors = [\n    {name = \"ashish\"}\n]\nlicense = {text = \"MIT\"}\nreadme = \"README.md\"\nrequires-python = \"3.11\"\ndependencies = [\n]\n\n[tool.poetry]\n\n[tool.poetry.group.dev.dependencies]\nrequests = \"^2.32.4\"\n\n[build-system]\nrequires = [\"poetry-core&gt;=2.0.0,&lt;3.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n</code></pre>"},{"location":"tools/poetry/#creating-a-new-project","title":"Creating a New Project","text":"<p>If you prefer, you can create a new project with a basic folder structure and a pyproject.toml file using the poetry new command.</p> <p>Example:</p> <pre><code>poetry new myproject\n</code></pre>"},{"location":"tools/poetry/#adding-dependencies-after-initialization","title":"Adding Dependencies After Initialization","text":"<p>Once you have the pyproject.toml file, you can add dependencies to your project.</p> <ul> <li>it will create virtual evviroment.</li> <li>it also create poetry.lock file.</li> <li>It is a internal dile for poetry to keep the trake of the dependecy</li> <li>We can also remove the dependecy and update them</li> </ul> <p>Example:</p> <pre><code>poetry add requests\n</code></pre>"},{"location":"tools/poetry/#to-display-poetry-install-packages","title":"To display poetry install packages","text":"<pre><code>poetry show\n</code></pre>"},{"location":"tools/poetry/#install-the-specific-versions","title":"Install the specific versions","text":"<pre><code>poetry add requests@2.12.1\n</code></pre>"},{"location":"tools/poetry/#to-remove-pkg","title":"To remove pkg","text":"<pre><code>poetry remove requests\n</code></pre> <p>To install the up until the major version, it wont install a request version 3</p> <p>poetry add requests^2.12.1</p> <p>it is aalso the default installation style in poetry</p> <p>It wont install request version</p> <p>poetry add requests~2.12.1</p> <p>It install the package up to the latest minor version</p>"},{"location":"tools/poetry/#to-install-the-dependency","title":"To install the dependency","text":"<pre><code>poetry install\n\npoetry install -no-root\n</code></pre>"},{"location":"tools/poetry/#enviroment","title":"enviroment","text":"<pre><code>poetry env list \npoetry env use \"py -3.13\"\n\n&gt; `poetry shell` to cmd to go that virtal env or activate virtual env\n</code></pre>"},{"location":"tools/poetry/#handle-version","title":"Handle version","text":"<p><code>poetry version minor</code> to convert 0.2.0 to 0.3.0 sementic version</p> <p>Distributable formats such as awheel or a source distribution to gzip file</p> <pre><code>poetry publish\n</code></pre>"},{"location":"tools/uv/","title":"<code>UV</code>: A Fast Python Package and Script Manager","text":"<p>The <code>uv</code> tool is a modern Python package manager and project runner designed for speed, simplicity, and efficiency. It simplifies the management of virtual environments, dependencies, and script execution\u2014especially useful when working across platforms, including WSL (Windows Subsystem for Linux).</p> <p>Below is a quick guide to help you get started with <code>uv</code>, whether you're creating a full project or just running standalone scripts.</p>"},{"location":"tools/uv/#starting-a-new-project","title":"\ud83c\udf31 Starting a New Project","text":"<p>To initialize a new Python project using <code>uv</code>, run:</p> <pre><code>uv init chau-code\n</code></pre> <p>This will set up a default project structure with essential files:</p> <ul> <li><code>.python-version</code> \u2013 Specifies the Python version for the environment</li> <li><code>main.py</code> \u2013 Your main Python entry point</li> <li><code>pyproject.toml</code> \u2013 Project metadata and dependency definitions</li> </ul> <p>A virtual environment (<code>.venv</code>) will also be created, along with a <code>uv.lock</code> file to track your exact dependency versions.</p> <p>Project Structure Example:</p> <pre><code>chau-code/\n\u251c\u2500\u2500 .venv/\n\u251c\u2500\u2500 main.py\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 uv.lock\n\u2514\u2500\u2500 .python-version\n</code></pre>"},{"location":"tools/uv/#running-the-project","title":"\ud83d\ude80 Running the Project","text":"<p>Once your project is set up, you can run your main script with:</p> <pre><code>uv run main.py\n</code></pre> <p>This ensures the script runs in the isolated <code>.venv</code> environment with all dependencies properly loaded.</p>"},{"location":"tools/uv/#adding-dependencies","title":"\ud83d\udce6 Adding Dependencies","text":"<p>To add packages to your project, use:</p> <pre><code>uv add fastapi\n</code></pre> <p>This will update both the <code>pyproject.toml</code> and <code>uv.lock</code> files, ensuring reproducibility across systems.</p>"},{"location":"tools/uv/#distributing-your-project-eg-for-wsl-or-other-environments","title":"\ud83d\udce6 Distributing Your Project (e.g., for WSL or other environments)","text":"<p>When you're ready to distribute your project, use:</p> <pre><code>uv build\n</code></pre> <p>This compiles your source and environment into a distributable format, making it easy to move between machines or platforms.</p>"},{"location":"tools/uv/#finding-help","title":"\u2753 Finding Help","text":"<p>To get a list of all available <code>uv</code> commands and usage help, simply run:</p> <pre><code>uv\n</code></pre> <p>This will display command-line options, subcommands, and usage tips.</p>"},{"location":"tools/uv/#running-standalone-scripts-with-dependencies","title":"\ud83e\uddea Running Standalone Scripts with Dependencies","text":"<p>You don\u2019t always need to create a full project. <code>uv</code> also supports script-based workflows.</p>"},{"location":"tools/uv/#run-a-script-with-temporary-dependencies","title":"Run a Script with Temporary Dependencies","text":"<p>If you want to run a script using some packages without installing them globally or setting up a full environment:</p> <pre><code>uv run --with \"flask\" --with \"requests\" scripteg.py\n</code></pre>"},{"location":"tools/uv/#adding-dependencies-to-a-script-permanently","title":"Adding Dependencies to a Script Permanently","text":"<p>If your script\u2019s dependencies grow, you can define them with:</p> <pre><code>uv add --script scripteg.py \"flask\" \"requests\"\n</code></pre> <p>This way, <code>uv</code> can manage the script\u2019s dependencies consistently across environments.</p>"},{"location":"tools/uv/#conclusion","title":"\ud83d\udd1a Conclusion","text":"<p><code>uv</code> is a powerful tool for Python developers who want speed and flexibility without the overhead of traditional virtual environment management tools. Whether you're working on a full-stack FastAPI app or a small automation script, <code>uv</code> can help streamline your development process.</p> <p>Tip: Check the official documentation or run <code>uv</code> in your terminal to explore more features.</p>"}]}